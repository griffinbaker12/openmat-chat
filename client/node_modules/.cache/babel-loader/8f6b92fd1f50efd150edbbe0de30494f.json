{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/user-info-dropdown/user-info-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { defaultToast, TOAST_TYPE } from '../../utils/utils';\nimport './user-info-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfoDropdown = _ref => {\n  _s();\n\n  let {\n    closeDropdown\n  } = _ref;\n  const {\n    currentUser\n  } = useAuthentication();\n  const {\n    activeUserInfo,\n    chats,\n    setChats,\n    setActiveChat,\n    closeModal\n  } = useChatView(); // const areFriendsBool = useMemo(\n  //   () => areFriends(currentUser, activeUserInfo),\n  //   [currentUser, activeUserInfo]\n  // );\n\n  const handleChatCreation = async e => {\n    e.stopPropagation();\n    const soloChats = chats.filter(chat => !chat.isGroupChat);\n    const existingChat = soloChats.find(chat => chat.users.some(user => user._id === activeUserInfo._id));\n\n    if (existingChat) {\n      closeModal();\n      closeDropdown();\n      setActiveChat([existingChat]);\n      return;\n    } else {\n      const otherParticipantId = [activeUserInfo._id];\n      const payload = {\n        chatName: null,\n        users: otherParticipantId\n      };\n\n      try {\n        const response = await fetch(`http://localhost:4000/api/chat/createChat`, {\n          method: 'post',\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        const newChat = await response.json();\n        setChats(prevState => [newChat, ...prevState]);\n        closeModal();\n        closeDropdown();\n        defaultToast(TOAST_TYPE.success, 'Chat creation successful');\n      } catch (e) {\n        defaultToast(TOAST_TYPE.failure, 'Error creating chat');\n      }\n    }\n  }; // const handleFriendRequest = e => {\n  //   e.stopPropagation();\n  //   console.log('hey from friend request');\n  //   // Thinking that you could just add them as a friend in the current user, and then when you get a response from the other side, either add them as a friend for that user, or, if they reject, then delete them from the current user's friend list (maybe with a pending flag or something like that)\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-info-dropdown-container\" // ${\n    //   areFriendsBool ? 'friends' : 'not-friends'\n    // }`\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChatCreation,\n      className: \"user-info-dropdown-send-message-container\",\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserInfoDropdown, \"I6ufekfJEOBTBx/a2OJ6m/C9xwA=\", false, function () {\n  return [useAuthentication, useChatView];\n});\n\n_c = UserInfoDropdown;\nexport default UserInfoDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoDropdown\");","map":{"version":3,"names":["useAuthentication","useChatView","defaultToast","TOAST_TYPE","UserInfoDropdown","closeDropdown","currentUser","activeUserInfo","chats","setChats","setActiveChat","closeModal","handleChatCreation","e","stopPropagation","soloChats","filter","chat","isGroupChat","existingChat","find","users","some","user","_id","otherParticipantId","payload","chatName","response","fetch","method","headers","Authorization","token","body","JSON","stringify","newChat","json","prevState","success","failure"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/user-info-dropdown/user-info-dropdown.component.jsx"],"sourcesContent":["import { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { defaultToast, TOAST_TYPE } from '../../utils/utils';\nimport './user-info-dropdown.styles.scss';\n\nconst UserInfoDropdown = ({ closeDropdown }) => {\n  const { currentUser } = useAuthentication();\n  const { activeUserInfo, chats, setChats, setActiveChat, closeModal } =\n    useChatView();\n\n  // const areFriendsBool = useMemo(\n  //   () => areFriends(currentUser, activeUserInfo),\n  //   [currentUser, activeUserInfo]\n  // );\n\n  const handleChatCreation = async e => {\n    e.stopPropagation();\n\n    const soloChats = chats.filter(chat => !chat.isGroupChat);\n\n    const existingChat = soloChats.find(chat =>\n      chat.users.some(user => user._id === activeUserInfo._id)\n    );\n\n    if (existingChat) {\n      closeModal();\n      closeDropdown();\n      setActiveChat([existingChat]);\n      return;\n    } else {\n      const otherParticipantId = [activeUserInfo._id];\n      const payload = {\n        chatName: null,\n        users: otherParticipantId,\n      };\n\n      try {\n        const response = await fetch(\n          `http://localhost:4000/api/chat/createChat`,\n          {\n            method: 'post',\n            headers: {\n              Authorization: `Bearer ${currentUser.token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n          }\n        );\n        const newChat = await response.json();\n        setChats(prevState => [newChat, ...prevState]);\n        closeModal();\n        closeDropdown();\n        defaultToast(TOAST_TYPE.success, 'Chat creation successful');\n      } catch (e) {\n        defaultToast(TOAST_TYPE.failure, 'Error creating chat');\n      }\n    }\n  };\n\n  // const handleFriendRequest = e => {\n  //   e.stopPropagation();\n  //   console.log('hey from friend request');\n  //   // Thinking that you could just add them as a friend in the current user, and then when you get a response from the other side, either add them as a friend for that user, or, if they reject, then delete them from the current user's friend list (maybe with a pending flag or something like that)\n  // };\n\n  return (\n    <div\n      className=\"user-info-dropdown-container\"\n      // ${\n      //   areFriendsBool ? 'friends' : 'not-friends'\n      // }`\n    >\n      {/* <button\n        onClick={handleFriendRequest}\n        className={`user-info-dropdown-friend-status-container ${\n          areFriendsBool ? 'friends' : 'not-friends'\n        }`}\n      >{`${areFriendsBool ? 'Remove' : 'Add'} Friend`}</button> */}\n      <button\n        onClick={handleChatCreation}\n        className=\"user-info-dropdown-send-message-container\"\n      >\n        Send Message\n      </button>\n    </div>\n  );\n};\nexport default UserInfoDropdown;\n"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,uCAAlC;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,mBAAzC;AACA,OAAO,kCAAP;;;AAEA,MAAMC,gBAAgB,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EAC9C,MAAM;IAAEC;EAAF,IAAkBN,iBAAiB,EAAzC;EACA,MAAM;IAAEO,cAAF;IAAkBC,KAAlB;IAAyBC,QAAzB;IAAmCC,aAAnC;IAAkDC;EAAlD,IACJV,WAAW,EADb,CAF8C,CAK9C;EACA;EACA;EACA;;EAEA,MAAMW,kBAAkB,GAAG,MAAMC,CAAN,IAAW;IACpCA,CAAC,CAACC,eAAF;IAEA,MAAMC,SAAS,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,WAA3B,CAAlB;IAEA,MAAMC,YAAY,GAAGJ,SAAS,CAACK,IAAV,CAAeH,IAAI,IACtCA,IAAI,CAACI,KAAL,CAAWC,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAajB,cAAc,CAACiB,GAApD,CADmB,CAArB;;IAIA,IAAIL,YAAJ,EAAkB;MAChBR,UAAU;MACVN,aAAa;MACbK,aAAa,CAAC,CAACS,YAAD,CAAD,CAAb;MACA;IACD,CALD,MAKO;MACL,MAAMM,kBAAkB,GAAG,CAAClB,cAAc,CAACiB,GAAhB,CAA3B;MACA,MAAME,OAAO,GAAG;QACdC,QAAQ,EAAE,IADI;QAEdN,KAAK,EAAEI;MAFO,CAAhB;;MAKA,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACzB,2CADyB,EAE1B;UACEC,MAAM,EAAE,MADV;UAEEC,OAAO,EAAE;YACPC,aAAa,EAAG,UAAS1B,WAAW,CAAC2B,KAAM,EADpC;YAEP,gBAAgB;UAFT,CAFX;UAMEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,OAAf;QANR,CAF0B,CAA5B;QAWA,MAAMW,OAAO,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAtB;QACA7B,QAAQ,CAAC8B,SAAS,IAAI,CAACF,OAAD,EAAU,GAAGE,SAAb,CAAd,CAAR;QACA5B,UAAU;QACVN,aAAa;QACbH,YAAY,CAACC,UAAU,CAACqC,OAAZ,EAAqB,0BAArB,CAAZ;MACD,CAjBD,CAiBE,OAAO3B,CAAP,EAAU;QACVX,YAAY,CAACC,UAAU,CAACsC,OAAZ,EAAqB,qBAArB,CAAZ;MACD;IACF;EACF,CA1CD,CAV8C,CAsD9C;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IACE,SAAS,EAAC,8BADZ,CAEE;IACA;IACA;IAJF;IAAA,uBAYE;MACE,OAAO,EAAE7B,kBADX;MAEE,SAAS,EAAC,2CAFZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAZF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAjFD;;GAAMR,gB;UACoBJ,iB,EAEtBC,W;;;KAHEG,gB;AAkFN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}