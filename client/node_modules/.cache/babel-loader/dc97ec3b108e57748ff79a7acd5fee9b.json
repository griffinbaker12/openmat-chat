{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/add-user-dropdown/add-user-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport './add-user-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUserDropdown = _ref => {\n  _s();\n\n  let {\n    showAddUserDropdown,\n    setShowAddUserdropdown\n  } = _ref;\n  const [userSearchText, setUserSearchText] = useState('');\n  const [userToAdd, setUserToAdd] = useState('');\n  const [userSearchResults, setUserSearchResults] = useState([]);\n\n  const handleTextChange = async e => {\n    const field = e.target.getAttribute('name');\n    const query = e.target.value; // If we are typing into the name field, then we want to make a fetch reqeust with the current value of the input\n\n    if (field !== 'name') return;\n\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:4000/api/user?search=${query}`, {\n        method: 'get',\n        headers: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n      const {\n        users\n      } = await response.json(); // console.log(users);\n\n      setIsLoading(false);\n      setUserSearchResults(users);\n    } catch (e) {\n      defaultToast(TOAST_TYPE.error, 'Error adding user');\n    }\n  }; // const addUserInputRef = useRef();\n  // const handleKeyDown = e => {\n  //   console.log('hello?');\n  // };\n  // useEffect(() => {\n  //   if (!addUserInputRef.current) return;\n  //   const keypress = new Event('keydown', {\n  //     bubbles: true,\n  //     cancelable: true,\n  //     keycode: 32,\n  //     which: 32,\n  //   });\n  //   addUserInputRef.current.focus();\n  //   addUserInputRef.current.dispatchEvent(keypress);\n  // }, [showAddUserDropdown]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-user-dropdown-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-user-dropdown-tip bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-user-dropdown-content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search users...\",\n          value: userSearchText,\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-user-dropdown-results-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUserDropdown, \"t6tOBb6QzskUNVonTPlPzjRp4W4=\");\n\n_c = AddUserDropdown;\nexport default AddUserDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserDropdown\");","map":{"version":3,"names":["useState","useEffect","useRef","AddUserDropdown","showAddUserDropdown","setShowAddUserdropdown","userSearchText","setUserSearchText","userToAdd","setUserToAdd","userSearchResults","setUserSearchResults","handleTextChange","e","field","target","getAttribute","query","value","setIsLoading","response","fetch","method","headers","Authorization","currentUser","token","users","json","defaultToast","TOAST_TYPE","error"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/add-user-dropdown/add-user-dropdown.component.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport './add-user-dropdown.styles.scss';\n\nconst AddUserDropdown = ({ showAddUserDropdown, setShowAddUserdropdown }) => {\n  const [userSearchText, setUserSearchText] = useState('');\n  const [userToAdd, setUserToAdd] = useState('');\n  const [userSearchResults, setUserSearchResults] = useState([]);\n\n  const handleTextChange = async e => {\n    const field = e.target.getAttribute('name');\n    const query = e.target.value;\n\n    // If we are typing into the name field, then we want to make a fetch reqeust with the current value of the input\n    if (field !== 'name') return;\n\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        `http://localhost:4000/api/user?search=${query}`,\n        {\n          method: 'get',\n          headers: { Authorization: `Bearer ${currentUser.token}` },\n        }\n      );\n      const { users } = await response.json();\n      // console.log(users);\n      setIsLoading(false);\n      setUserSearchResults(users);\n    } catch (e) {\n      defaultToast(TOAST_TYPE.error, 'Error adding user');\n    }\n  };\n\n  // const addUserInputRef = useRef();\n\n  // const handleKeyDown = e => {\n  //   console.log('hello?');\n  // };\n\n  // useEffect(() => {\n  //   if (!addUserInputRef.current) return;\n  //   const keypress = new Event('keydown', {\n  //     bubbles: true,\n  //     cancelable: true,\n  //     keycode: 32,\n  //     which: 32,\n  //   });\n  //   addUserInputRef.current.focus();\n  //   addUserInputRef.current.dispatchEvent(keypress);\n  // }, [showAddUserDropdown]);\n\n  return (\n    <div className=\"add-user-dropdown-container\">\n      <div className=\"add-user-dropdown-tip bottom\">\n        <div className=\"add-user-dropdown-content-container\">\n          <input\n            type=\"search\"\n            placeholder=\"Search users...\"\n            value={userSearchText}\n            onChange={handleTextChange}\n          />\n          <div className=\"add-user-dropdown-results-container\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default AddUserDropdown;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,iCAAP;;;AAEA,MAAMC,eAAe,GAAG,QAAqD;EAAA;;EAAA,IAApD;IAAEC,mBAAF;IAAuBC;EAAvB,CAAoD;EAC3E,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,EAAD,CAA1D;;EAEA,MAAMY,gBAAgB,GAAG,MAAMC,CAAN,IAAW;IAClC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,MAAtB,CAAd;IACA,MAAMC,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASG,KAAvB,CAFkC,CAIlC;;IACA,IAAIJ,KAAK,KAAK,MAAd,EAAsB;;IAEtB,IAAI;MACFK,YAAY,CAAC,IAAD,CAAZ;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,yCAAwCJ,KAAM,EADrB,EAE1B;QACEK,MAAM,EAAE,KADV;QAEEC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASC,WAAW,CAACC,KAAM;QAA7C;MAFX,CAF0B,CAA5B;MAOA,MAAM;QAAEC;MAAF,IAAY,MAAMP,QAAQ,CAACQ,IAAT,EAAxB,CATE,CAUF;;MACAT,YAAY,CAAC,KAAD,CAAZ;MACAR,oBAAoB,CAACgB,KAAD,CAApB;IACD,CAbD,CAaE,OAAOd,CAAP,EAAU;MACVgB,YAAY,CAACC,UAAU,CAACC,KAAZ,EAAmB,mBAAnB,CAAZ;IACD;EACF,CAvBD,CAL2E,CA8B3E;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAK,SAAS,EAAC,6BAAf;IAAA,uBACE;MAAK,SAAS,EAAC,8BAAf;MAAA,uBACE;QAAK,SAAS,EAAC,qCAAf;QAAA,wBACE;UACE,IAAI,EAAC,QADP;UAEE,WAAW,EAAC,iBAFd;UAGE,KAAK,EAAEzB,cAHT;UAIE,QAAQ,EAAEM;QAJZ;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CA/DD;;GAAMT,e;;KAAAA,e;AAgEN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}