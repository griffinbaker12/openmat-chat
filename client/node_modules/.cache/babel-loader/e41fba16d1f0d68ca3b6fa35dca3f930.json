{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/notification-dropdown/notification-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useRef, useEffect, useState } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { generateChatNameForSoloChats, defaultToast, TOAST_TYPE } from '../../utils/utils';\nimport './notification-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    handleDropdown,\n    closeAccountDropdown,\n    closeNotificationDropdown\n  } = _ref;\n  const {\n    notifications,\n    setActiveChat,\n    chats,\n    setNotifications\n  } = useChatView();\n  const {\n    currentUser\n  } = useAuthentication();\n  const [groupedNotifications, setGroupedNotifications] = useState([]);\n  const dropDownRef = useRef();\n\n  const handleSignOutClick = e => {\n    if (ref.current === e.target.closest('.header-chat-link')) {\n      return;\n    }\n\n    if (dropDownRef.current && !dropDownRef.current.contains(e.target)) {\n      closeNotificationDropdown();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleSignOutClick);\n    return () => document.removeEventListener('mousedown', handleSignOutClick);\n  });\n  useEffect(() => {\n    const chatCounter = [];\n    notifications.forEach(notification => {\n      const alreadyInCounterIndex = chatCounter.findIndex(notificaitonInChatCounter => notificaitonInChatCounter.chat._id === notification.message.chat._id);\n\n      if (alreadyInCounterIndex >= 0) {\n        let objToInc = chatCounter[alreadyInCounterIndex];\n        objToInc.count = objToInc.count + 1;\n      } else {\n        chatCounter.push({\n          chat: notification.message.chat,\n          count: 1\n        });\n      }\n    });\n    setGroupedNotifications(chatCounter);\n  }, [notifications]);\n\n  const handleNotificationClick = async e => {\n    const chatId = e.target.closest('.notification-dropdown-content-item-container').getAttribute('name');\n    const chat = chats.find(chat => chat._id === chatId);\n    setActiveChat([chat]);\n\n    try {\n      const response = await fetch(`http://localhost:4000/api/notification/removeNotification`, {\n        method: 'post',\n        headers: {\n          Authorization: `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chatId: chat._id\n        })\n      });\n      const updatedNotifications = await response.json();\n      console.log(updatedNotifications, 'updatedNotifications');\n      setNotifications([updatedNotifications]);\n    } catch (error) {\n      defaultToast(TOAST_TYPE.error, 'Error updating notifications');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleSignOutClick,\n    ref: dropDownRef,\n    className: \"notification-dropdown-container\",\n    children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No new notifications!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this) : groupedNotifications.map((groupedNotification, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleNotificationClick,\n      name: groupedNotification.chat._id,\n      className: \"notification-dropdown-content-item-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [groupedNotification.count === 1 ? 'New message' : `${groupedNotification.count} new messages`, ' ', groupedNotification.chat.isGroupChat ? `in ${groupedNotification.chat.chatName}` : `from ${generateChatNameForSoloChats(groupedNotification.chat.users, currentUser)}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n}, \"oVT/cvkwbRjxEZ2sKMQicfph/M0=\", false, function () {\n  return [useChatView, useAuthentication];\n})), \"oVT/cvkwbRjxEZ2sKMQicfph/M0=\", false, function () {\n  return [useChatView, useAuthentication];\n});\n\n_c2 = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationDropdown$forwardRef\");\n$RefreshReg$(_c2, \"NotificationDropdown\");","map":{"version":3,"names":["forwardRef","useRef","useEffect","useState","useAuthentication","useChatView","generateChatNameForSoloChats","defaultToast","TOAST_TYPE","NotificationDropdown","ref","handleDropdown","closeAccountDropdown","closeNotificationDropdown","notifications","setActiveChat","chats","setNotifications","currentUser","groupedNotifications","setGroupedNotifications","dropDownRef","handleSignOutClick","e","current","target","closest","contains","document","addEventListener","removeEventListener","chatCounter","forEach","notification","alreadyInCounterIndex","findIndex","notificaitonInChatCounter","chat","_id","message","objToInc","count","push","handleNotificationClick","chatId","getAttribute","find","response","fetch","method","headers","Authorization","token","body","JSON","stringify","updatedNotifications","json","console","log","error","length","map","groupedNotification","i","isGroupChat","chatName","users"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/notification-dropdown/notification-dropdown.component.jsx"],"sourcesContent":["import { forwardRef, useRef, useEffect, useState } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport {\n  generateChatNameForSoloChats,\n  defaultToast,\n  TOAST_TYPE,\n} from '../../utils/utils';\nimport './notification-dropdown.styles.scss';\n\nconst NotificationDropdown = forwardRef(\n  (\n    { handleDropdown, closeAccountDropdown, closeNotificationDropdown },\n    ref\n  ) => {\n    const { notifications, setActiveChat, chats, setNotifications } =\n      useChatView();\n    const { currentUser } = useAuthentication();\n    const [groupedNotifications, setGroupedNotifications] = useState([]);\n    const dropDownRef = useRef();\n\n    const handleSignOutClick = e => {\n      if (ref.current === e.target.closest('.header-chat-link')) {\n        return;\n      }\n      if (dropDownRef.current && !dropDownRef.current.contains(e.target)) {\n        closeNotificationDropdown();\n      }\n    };\n\n    useEffect(() => {\n      document.addEventListener('mousedown', handleSignOutClick);\n      return () =>\n        document.removeEventListener('mousedown', handleSignOutClick);\n    });\n\n    useEffect(() => {\n      const chatCounter = [];\n      notifications.forEach(notification => {\n        const alreadyInCounterIndex = chatCounter.findIndex(\n          notificaitonInChatCounter =>\n            notificaitonInChatCounter.chat._id === notification.message.chat._id\n        );\n        if (alreadyInCounterIndex >= 0) {\n          let objToInc = chatCounter[alreadyInCounterIndex];\n          objToInc.count = objToInc.count + 1;\n        } else {\n          chatCounter.push({ chat: notification.message.chat, count: 1 });\n        }\n      });\n      setGroupedNotifications(chatCounter);\n    }, [notifications]);\n\n    const handleNotificationClick = async e => {\n      const chatId = e.target\n        .closest('.notification-dropdown-content-item-container')\n        .getAttribute('name');\n      const chat = chats.find(chat => chat._id === chatId);\n      setActiveChat([chat]);\n\n      try {\n        const response = await fetch(\n          `http://localhost:4000/api/notification/removeNotification`,\n          {\n            method: 'post',\n            headers: {\n              Authorization: `Bearer ${currentUser.token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              chatId: chat._id,\n            }),\n          }\n        );\n        const updatedNotifications = await response.json();\n        console.log(updatedNotifications, 'updatedNotifications');\n        setNotifications([updatedNotifications]);\n      } catch (error) {\n        defaultToast(TOAST_TYPE.error, 'Error updating notifications');\n      }\n    };\n\n    return (\n      <div\n        onClick={handleSignOutClick}\n        ref={dropDownRef}\n        className=\"notification-dropdown-container\"\n      >\n        {notifications.length === 0 ? (\n          <p>No new notifications!</p>\n        ) : (\n          groupedNotifications.map((groupedNotification, i) => (\n            <div\n              onClick={handleNotificationClick}\n              name={groupedNotification.chat._id}\n              key={i}\n              className=\"notification-dropdown-content-item-container\"\n            >\n              <p>\n                {groupedNotification.count === 1\n                  ? 'New message'\n                  : `${groupedNotification.count} new messages`}{' '}\n                {groupedNotification.chat.isGroupChat\n                  ? `in ${groupedNotification.chat.chatName}`\n                  : `from ${generateChatNameForSoloChats(\n                      groupedNotification.chat.users,\n                      currentUser\n                    )}`}\n              </p>\n            </div>\n          ))\n        )}\n      </div>\n    );\n  }\n);\nexport default NotificationDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}