{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-info-modal/chat-info-modal.components.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useConversations } from '../../contexts/conversations-context';\nimport UserInfoModal from '../user-info-modal/user-info-modal.component';\nimport { useSidebar } from '../../contexts/sidebar-context';\nimport { ReactComponent as ChevronRight } from '../../assets/chevron-right.svg';\nimport { ReactComponent as EditPencil } from '../../assets/pencil.svg';\nimport './chat-info-modal.styles.scss';\nimport Tooltip from '../tooltip/tooltip.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatInfoModal = () => {\n  _s();\n\n  var _activeChat$;\n\n  const {\n    activeChat\n  } = useConversations();\n  const isGroupChat = ((_activeChat$ = activeChat[0]) === null || _activeChat$ === void 0 ? void 0 : _activeChat$.chatName) === 'solo chat' ? false : true;\n  const {\n    showModal,\n    closeModal\n  } = useSidebar();\n  const [showChatEdit, setShowChatEdit] = useState(false); // So what I am going to need to is to set the state of the input field to be equal to the current chat name so that when you switch the component on click the name is already filled\n  // This is sick you can also just store an object with the different users that you visited and each time you go back you go back to the prior user...apparently can also use a graph for this as well\n  // Check if it is a solo chat or a group chat, and then render a different modal accordingly\n  // Could have also made calsses that I would apply across the different modals, but at this point..\n  // If it is a group chat, then I want to show the entire chat, and then once you click on a user, I actually just want to switch to not show the group chat, but to show the actual user info-modal, hide the group chat, and include a back arrow\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-info-modal-container ${showModal ? 'active' : ''}`,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-info-modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: isGroupChat && activeChat.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-chat-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: activeChat[0].chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-pencil-container\",\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              content: \"Click to edit chat name\",\n              children: /*#__PURE__*/_jsxDEV(EditPencil, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            type: \"button\",\n            style: {\n              color: 'white',\n              marginLeft: 'auto'\n            },\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-chat-modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-chat-modal-chat-participants-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"group-chat-modal-member-header\",\n              children: \"Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-chat-modal-member-container\",\n              children: activeChat[0].users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-chat-modal-user-info-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-chat-modal-user-info-picture-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    height: \"100%\",\n                    src: user.picture,\n                    alt: \"user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-name-user-userName-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"@\", user.userName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chevron-container\",\n                  children: /*#__PURE__*/_jsxDEV(ChevronRight, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(UserInfoModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatInfoModal, \"tw0WR/Ei+oV7/iFhi8h1MxyeuhI=\", false, function () {\n  return [useConversations, useSidebar];\n});\n\n_c = ChatInfoModal;\nexport default ChatInfoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInfoModal\");","map":{"version":3,"names":["useState","useConversations","UserInfoModal","useSidebar","ReactComponent","ChevronRight","EditPencil","Tooltip","ChatInfoModal","activeChat","isGroupChat","chatName","showModal","closeModal","showChatEdit","setShowChatEdit","e","stopPropagation","length","color","marginLeft","users","map","user","picture","name","userName"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-info-modal/chat-info-modal.components.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useConversations } from '../../contexts/conversations-context';\nimport UserInfoModal from '../user-info-modal/user-info-modal.component';\nimport { useSidebar } from '../../contexts/sidebar-context';\nimport { ReactComponent as ChevronRight } from '../../assets/chevron-right.svg';\nimport { ReactComponent as EditPencil } from '../../assets/pencil.svg';\nimport './chat-info-modal.styles.scss';\nimport Tooltip from '../tooltip/tooltip.component';\n\nconst ChatInfoModal = () => {\n  const { activeChat } = useConversations();\n  const isGroupChat = activeChat[0]?.chatName === 'solo chat' ? false : true;\n  const { showModal, closeModal } = useSidebar();\n  const [showChatEdit, setShowChatEdit] = useState(false);\n\n  // So what I am going to need to is to set the state of the input field to be equal to the current chat name so that when you switch the component on click the name is already filled\n\n  // This is sick you can also just store an object with the different users that you visited and each time you go back you go back to the prior user...apparently can also use a graph for this as well\n\n  // Check if it is a solo chat or a group chat, and then render a different modal accordingly\n\n  // Could have also made calsses that I would apply across the different modals, but at this point..\n\n  // If it is a group chat, then I want to show the entire chat, and then once you click on a user, I actually just want to switch to not show the group chat, but to show the actual user info-modal, hide the group chat, and include a back arrow\n\n  return (\n    <div\n      className={`chat-info-modal-container ${showModal ? 'active' : ''}`}\n      onClick={closeModal}\n    >\n      <div\n        className=\"chat-info-modal-content\"\n        onClick={e => e.stopPropagation()}\n      >\n        {isGroupChat && activeChat.length !== 0 ? (\n          <>\n            <div className=\"group-chat-modal-header\">\n              <p>{activeChat[0].chatName}</p>\n              <div className=\"edit-pencil-container\">\n                <Tooltip content=\"Click to edit chat name\">\n                  <EditPencil />\n                </Tooltip>\n              </div>\n              <button\n                onClick={closeModal}\n                type=\"button\"\n                style={{ color: 'white', marginLeft: 'auto' }}\n              >\n                &#x2715;\n              </button>\n            </div>\n            <div className=\"group-chat-modal-body\">\n              <div className=\"group-chat-modal-chat-participants-container\">\n                <p className=\"group-chat-modal-member-header\">Members</p>\n                <div className=\"group-chat-modal-member-container\">\n                  {activeChat[0].users.map(user => (\n                    <div className=\"group-chat-modal-user-info-container\">\n                      <div className=\"group-chat-modal-user-info-picture-container\">\n                        <img height=\"100%\" src={user.picture} alt=\"user\" />\n                      </div>\n                      <div className=\"user-name-user-userName-container\">\n                        <p>{user.name}</p>\n                        <p>@{user.userName}</p>\n                      </div>\n                      <div className=\"chevron-container\">\n                        <ChevronRight />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <UserInfoModal />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default ChatInfoModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}