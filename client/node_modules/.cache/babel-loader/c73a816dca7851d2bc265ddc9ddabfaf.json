{"ast":null,"code":"import _regeneratorRuntime from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useCallback,useEffect,useState,Fragment,useRef}from'react';import Lottie from'lottie-react';import{useChatView}from'../../contexts/chat-view-context';import Spinner from'../spinner/spinner.component';import'./message-view.styles.scss';import{useAuthentication}from'../../contexts/authentication-context';import animationData from'../../animations/typing.json';import{defaultToast,sameSenderAndNotCurrentUser,TOAST_TYPE,userSent,getTyperString,generateChatNameForSoloChats}from'../../utils/utils';import{useSocket}from'../../contexts/socket-context';// Could definitely add timestamp data to the message as well, that would be pretty clean actually\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var typingTimer;var MessageView=function MessageView(){// Somehow we are going to have to get all of the message in a conversation potentially and then mark whether or not they are your messages or someone else's to style accordingly;\nvar _useAuthentication=useAuthentication(),currentUser=_useAuthentication.currentUser;var _useChatView=useChatView(),activeChat=_useChatView.activeChat,setNotifications=_useChatView.setNotifications,unreadMessages=_useChatView.unreadMessages,setUnreadMessages=_useChatView.setUnreadMessages;var _useSocket=useSocket(),socket=_useSocket.socket,onlineUsers=_useSocket.onlineUsers;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isTyping=_useState6[0],setIsTyping=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),typing=_useState8[0],setTyping=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),typers=_useState10[0],setTypers=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showFlag=_useState12[0],setShowFlag=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),circuit=_useState14[0],setCircuit=_useState14[1];var newRef=useRef();useEffect(function(){var handleKeyDownForNewMessages=function handleKeyDownForNewMessages(e){if(e.key==='Escape')setUnreadMessages([]);};window.addEventListener('keydown',handleKeyDownForNewMessages);return function(){return window.addEventListener('keydown',handleKeyDownForNewMessages);};},[setUnreadMessages]);var handleKeyDown=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e){var newMessage,response,message,usersOtherThanCurrentAndOffline,lastTypingTime,timerLength;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(socket){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:newMessage=e.target.innerHTML;if(!(e.key==='Enter'&&newMessage)){_context2.next=28;break;}e.preventDefault();e.target.innerHTML='';_context2.prev=6;_context2.next=9;return fetch(\"http://localhost:4000/api/message\",{method:'post',headers:{Authorization:\"Bearer \".concat(currentUser.token),'Content-Type':'application/json'},body:JSON.stringify({chatId:activeChat[0]._id,text:newMessage})});case 9:response=_context2.sent;_context2.next=12;return response.json();case 12:message=_context2.sent;socket.emit('send-msg',message);setMessages(function(prevState){return[].concat(_toConsumableArray(prevState),[message]);});setUnreadMessages([]);setTyping(false);socket.emit('chat update',message.chat);usersOtherThanCurrentAndOffline=[];message.chat.users.forEach(function(user){if(user._id===currentUser._id)return;var isOnline=onlineUsers.some(function(onlineUserArr){return onlineUserArr.includes(user._id);});if(!isOnline)usersOtherThanCurrentAndOffline.push(user);});// Log the notification for every user that is offline so it appears when they log in\nusersOtherThanCurrentAndOffline.forEach(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(user){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:4000/api/notification/addNotification\",{method:'post',headers:{Authorization:\"Bearer \".concat(currentUser.token),'Content-Type':'application/json'},body:JSON.stringify({message:message,userId:user._id})});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}());_context2.next=26;break;case 23:_context2.prev=23;_context2.t0=_context2[\"catch\"](6);defaultToast(TOAST_TYPE.error,'Error sending');case 26:_context2.next=33;break;case 28:if(!typing){setTyping(true);socket.emit('typing',activeChat[0]._id,currentUser);}lastTypingTime=new Date().getTime();timerLength=3000;if(typingTimer)clearTimeout(typingTimer);typingTimer=setTimeout(function(){var timeNow=new Date().getTime();var timeDiff=timeNow-lastTypingTime;if(timeDiff>=timerLength){socket.emit('stop typing',activeChat[0]._id,currentUser);setTyping(false);}},timerLength);case 33:case\"end\":return _context2.stop();}}},_callee2,null,[[6,23]]);}));return function handleKeyDown(_x){return _ref.apply(this,arguments);};}();var fetchMessages=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var response,messages;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(socket){_context3.next=2;break;}return _context3.abrupt(\"return\");case 2:if(activeChat){_context3.next=4;break;}return _context3.abrupt(\"return\");case 4:setIsLoading(true);_context3.next=7;return fetch(\"http://localhost:4000/api/message/\".concat(activeChat[0]._id),{method:'get',headers:{Authorization:\"Bearer \".concat(currentUser.token)}});case 7:response=_context3.sent;_context3.next=10;return response.json();case 10:messages=_context3.sent;setMessages(messages);setIsLoading(false);case 13:case\"end\":return _context3.stop();}}},_callee3);})),[activeChat,currentUser.token,socket]);useEffect(function(){fetchMessages();setShowFlag(false);},[fetchMessages,activeChat]);useEffect(function(){if(!socket)return;socket.emit('join room',activeChat[0]._id);socket.emit('stop typing',activeChat[0]._id,currentUser);return function(){return socket.emit('leave room',activeChat[0]._id);};},[activeChat,socket,currentUser]);useEffect(function(){if(!socket)return;socket.on('msg-received',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(message){var response,notification;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(!activeChat[0]._id||message.chat._id!==activeChat[0]._id)){_context4.next=16;break;}_context4.prev=1;_context4.next=4;return fetch(\"http://localhost:4000/api/notification/addNotification\",{method:'post',headers:{Authorization:\"Bearer \".concat(currentUser.token),'Content-Type':'application/json'},body:JSON.stringify({message:message})});case 4:response=_context4.sent;_context4.next=7;return response.json();case 7:notification=_context4.sent;setNotifications(function(prevState){return[].concat(_toConsumableArray(prevState),[notification]);});_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](1);defaultToast(TOAST_TYPE.error,'Error setting notifications');case 14:_context4.next=18;break;case 16:setIsTyping(false);setMessages(function(prevState){return[].concat(_toConsumableArray(prevState),[message]);});case 18:case\"end\":return _context4.stop();}}},_callee4,null,[[1,11]]);}));return function(_x3){return _ref4.apply(this,arguments);};}());return function(){return socket.off('msg-received');};},[socket,activeChat,setNotifications,currentUser.token,setUnreadMessages]);useEffect(function(){setIsTyping(false);},[activeChat]);useEffect(function(){if(!socket)return;socket.on('typing',function(typer){setIsTyping(true);setTypers(function(prevState){return _toConsumableArray(new Set([typer].concat(_toConsumableArray(prevState))));});});socket.on('stop typing',function(userName){var usersStillTyping=typers.filter(function(typer){return typer!==userName;});if(usersStillTyping.length>0&&typers.length!==0){setIsTyping(true);setTypers(usersStillTyping);return;}setIsTyping(false);setTypers([]);});return function(){socket.off('typing');socket.off('stop typing');};},[socket,typers]);var handleScroll=function handleScroll(e){var bottom=e.target.scrollHeight-Math.round(e.target.scrollTop)===e.target.clientHeight;if(circuit){setShowFlag(true);setCircuit(false);}else if(bottom&&showFlag){setUnreadMessages([]);setShowFlag(false);}};var setRef=useCallback(function(node){if(node&&isTyping&&isScrolledIntoView(node)){node.scrollIntoView({smooth:true});}else if(node&&!isTyping){node.scrollIntoView({smooth:true});}setCircuit(true);},[isTyping,setCircuit]);var isScrolledIntoView=function isScrolledIntoView(el){var rect=el.getBoundingClientRect();var elemTop=rect.top;var elemBottom=rect.bottom;// Only completely visible elements return true:\nvar isVisible=elemTop>=0&&elemBottom<=window.innerHeight;// Partially visible elements return true:\n//isVisible = elemTop < window.innerHeight && elemBottom >= 0;\nreturn isVisible;};return/*#__PURE__*/_jsx(\"div\",{className:\"message-view-container\",children:isLoading?/*#__PURE__*/_jsx(Spinner,{type:\"search\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{onScroll:handleScroll,className:\"message-view-active-chat-container\",children:messages.length>0&&messages.map(function(message,i){var _newRef$current;var lastMessageBool=messages.length-1===i+1;var userSentBool=userSent(currentUser,message);var sameSenderAndNotCurrentUserBool=sameSenderAndNotCurrentUser(i,messages,currentUser);var firstUnreadMessage=unreadMessages.length>0&&unreadMessages[0].message._id===message._id;return/*#__PURE__*/_jsxs(Fragment,{children:[firstUnreadMessage&&/*#__PURE__*/_jsx(\"div\",{style:i===0?{marginTop:'16px'}:{},ref:setRef,className:\"first-unread-message-container\",children:/*#__PURE__*/_jsx(\"p\",{ref:newRef,style:{marginLeft:\"-\".concat((_newRef$current=newRef.current)===null||_newRef$current===void 0?void 0:_newRef$current.width)},children:\"New\"})}),/*#__PURE__*/_jsxs(\"div\",{ref:lastMessageBool&&unreadMessages.length===0?setRef:null,style:i===0?{paddingTop:'6px'}:{},className:\"message-view-message-container \".concat(userSentBool?'user-sent':''),children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-view-message-image-container\",style:sameSenderAndNotCurrentUserBool||userSentBool?{visibility:'hidden'}:{marginTop:'2px'},children:/*#__PURE__*/_jsx(\"img\",{height:\"100%\",src:message.sender.picture,alt:\"profile\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-view-text-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-view-text\",children:message.text}),/*#__PURE__*/_jsx(\"div\",{style:sameSenderAndNotCurrentUserBool||userSentBool?{display:'none'}:{},className:\"message-view-text-info\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"@\",!userSentBool?message.sender.userName:'You']})})]})]})]},i);})}),isTyping&&/*#__PURE__*/_jsxs(\"div\",{className:\"lottie-container\",children:[typers.length?getTyperString(typers):'',/*#__PURE__*/_jsx(Lottie,{animationData:animationData,loop:true,autoplay:true,style:{height:'16px',display:'block'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"send-message-editable\",\"data-text\":\"Message \".concat(activeChat[0].isGroupChat?activeChat[0].chatName:generateChatNameForSoloChats(activeChat[0].users,currentUser)),contentEditable:true,onKeyDown:handleKeyDown})]})});};export default MessageView;","map":{"version":3,"names":["useCallback","useEffect","useState","Fragment","useRef","Lottie","useChatView","Spinner","useAuthentication","animationData","defaultToast","sameSenderAndNotCurrentUser","TOAST_TYPE","userSent","getTyperString","generateChatNameForSoloChats","useSocket","typingTimer","MessageView","currentUser","activeChat","setNotifications","unreadMessages","setUnreadMessages","socket","onlineUsers","messages","setMessages","isLoading","setIsLoading","isTyping","setIsTyping","typing","setTyping","typers","setTypers","showFlag","setShowFlag","circuit","setCircuit","newRef","handleKeyDownForNewMessages","e","key","window","addEventListener","handleKeyDown","newMessage","target","innerHTML","preventDefault","fetch","method","headers","Authorization","token","body","JSON","stringify","chatId","_id","text","response","json","message","emit","prevState","chat","usersOtherThanCurrentAndOffline","users","forEach","user","isOnline","some","onlineUserArr","includes","push","userId","error","lastTypingTime","Date","getTime","timerLength","clearTimeout","setTimeout","timeNow","timeDiff","fetchMessages","on","notification","off","typer","Set","userName","usersStillTyping","filter","length","handleScroll","bottom","scrollHeight","Math","round","scrollTop","clientHeight","setRef","node","isScrolledIntoView","scrollIntoView","smooth","el","rect","getBoundingClientRect","elemTop","top","elemBottom","isVisible","innerHeight","map","i","lastMessageBool","userSentBool","sameSenderAndNotCurrentUserBool","firstUnreadMessage","marginTop","marginLeft","current","width","paddingTop","visibility","sender","picture","display","height","isGroupChat","chatName"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/message-view/message-view.component.jsx"],"sourcesContent":["import { useCallback, useEffect, useState, Fragment, useRef } from 'react';\nimport Lottie from 'lottie-react';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport Spinner from '../spinner/spinner.component';\nimport './message-view.styles.scss';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport animationData from '../../animations/typing.json';\nimport {\n  defaultToast,\n  sameSenderAndNotCurrentUser,\n  TOAST_TYPE,\n  userSent,\n  getTyperString,\n  generateChatNameForSoloChats,\n} from '../../utils/utils';\nimport { useSocket } from '../../contexts/socket-context';\n\n// Could definitely add timestamp data to the message as well, that would be pretty clean actually\n\nlet typingTimer;\n\nconst MessageView = () => {\n  // Somehow we are going to have to get all of the message in a conversation potentially and then mark whether or not they are your messages or someone else's to style accordingly;\n  const { currentUser } = useAuthentication();\n  const { activeChat, setNotifications, unreadMessages, setUnreadMessages } =\n    useChatView();\n  const { socket, onlineUsers } = useSocket();\n\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [typers, setTypers] = useState([]);\n  const [showFlag, setShowFlag] = useState(false);\n  const [circuit, setCircuit] = useState(false);\n\n  const newRef = useRef();\n\n  useEffect(() => {\n    const handleKeyDownForNewMessages = e => {\n      if (e.key === 'Escape') setUnreadMessages([]);\n    };\n    window.addEventListener('keydown', handleKeyDownForNewMessages);\n    return () =>\n      window.addEventListener('keydown', handleKeyDownForNewMessages);\n  }, [setUnreadMessages]);\n\n  const handleKeyDown = async e => {\n    if (!socket) return;\n    const newMessage = e.target.innerHTML;\n    if (e.key === 'Enter' && newMessage) {\n      e.preventDefault();\n      e.target.innerHTML = '';\n      try {\n        const response = await fetch(`http://localhost:4000/api/message`, {\n          method: 'post',\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            chatId: activeChat[0]._id,\n            text: newMessage,\n          }),\n        });\n        const message = await response.json();\n        socket.emit('send-msg', message);\n        setMessages(prevState => [...prevState, message]);\n        setUnreadMessages([]);\n        setTyping(false);\n        socket.emit('chat update', message.chat);\n\n        const usersOtherThanCurrentAndOffline = [];\n        message.chat.users.forEach(user => {\n          if (user._id === currentUser._id) return;\n          const isOnline = onlineUsers.some(onlineUserArr =>\n            onlineUserArr.includes(user._id)\n          );\n          if (!isOnline) usersOtherThanCurrentAndOffline.push(user);\n        });\n\n        // Log the notification for every user that is offline so it appears when they log in\n        usersOtherThanCurrentAndOffline.forEach(async user => {\n          await fetch(\n            `http://localhost:4000/api/notification/addNotification`,\n            {\n              method: 'post',\n              headers: {\n                Authorization: `Bearer ${currentUser.token}`,\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                message,\n                userId: user._id,\n              }),\n            }\n          );\n        });\n      } catch (error) {\n        defaultToast(TOAST_TYPE.error, 'Error sending');\n      }\n    } else {\n      if (!typing) {\n        setTyping(true);\n        socket.emit('typing', activeChat[0]._id, currentUser);\n      }\n      const lastTypingTime = new Date().getTime();\n      const timerLength = 3000;\n      if (typingTimer) clearTimeout(typingTimer);\n      typingTimer = setTimeout(() => {\n        const timeNow = new Date().getTime();\n        const timeDiff = timeNow - lastTypingTime;\n        if (timeDiff >= timerLength) {\n          socket.emit('stop typing', activeChat[0]._id, currentUser);\n          setTyping(false);\n        }\n      }, timerLength);\n    }\n  };\n\n  const fetchMessages = useCallback(async () => {\n    if (!socket) return;\n    if (!activeChat) return;\n\n    setIsLoading(true);\n    const response = await fetch(\n      `http://localhost:4000/api/message/${activeChat[0]._id}`,\n      {\n        method: 'get',\n        headers: { Authorization: `Bearer ${currentUser.token}` },\n      }\n    );\n    const messages = await response.json();\n    setMessages(messages);\n    setIsLoading(false);\n  }, [activeChat, currentUser.token, socket]);\n\n  useEffect(() => {\n    fetchMessages();\n    setShowFlag(false);\n  }, [fetchMessages, activeChat]);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.emit('join room', activeChat[0]._id);\n    socket.emit('stop typing', activeChat[0]._id, currentUser);\n    return () => socket.emit('leave room', activeChat[0]._id);\n  }, [activeChat, socket, currentUser]);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('msg-received', async message => {\n      if (!activeChat[0]._id || message.chat._id !== activeChat[0]._id) {\n        try {\n          const response = await fetch(\n            `http://localhost:4000/api/notification/addNotification`,\n            {\n              method: 'post',\n              headers: {\n                Authorization: `Bearer ${currentUser.token}`,\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                message,\n              }),\n            }\n          );\n          const notification = await response.json();\n          setNotifications(prevState => [...prevState, notification]);\n        } catch (error) {\n          defaultToast(TOAST_TYPE.error, 'Error setting notifications');\n        }\n      } else {\n        setIsTyping(false);\n        setMessages(prevState => [...prevState, message]);\n      }\n    });\n    return () => socket.off('msg-received');\n  }, [\n    socket,\n    activeChat,\n    setNotifications,\n    currentUser.token,\n    setUnreadMessages,\n  ]);\n\n  useEffect(() => {\n    setIsTyping(false);\n  }, [activeChat]);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('typing', typer => {\n      setIsTyping(true);\n      setTypers(prevState => [...new Set([typer, ...prevState])]);\n    });\n    socket.on('stop typing', userName => {\n      const usersStillTyping = typers.filter(typer => typer !== userName);\n      if (usersStillTyping.length > 0 && typers.length !== 0) {\n        setIsTyping(true);\n        setTypers(usersStillTyping);\n        return;\n      }\n      setIsTyping(false);\n      setTypers([]);\n    });\n    return () => {\n      socket.off('typing');\n      socket.off('stop typing');\n    };\n  }, [socket, typers]);\n\n  const handleScroll = e => {\n    const bottom =\n      e.target.scrollHeight - Math.round(e.target.scrollTop) ===\n      e.target.clientHeight;\n    if (circuit) {\n      setShowFlag(true);\n      setCircuit(false);\n    } else if (bottom && showFlag) {\n      setUnreadMessages([]);\n      setShowFlag(false);\n    }\n  };\n\n  const setRef = useCallback(\n    node => {\n      if (node && isTyping && isScrolledIntoView(node)) {\n        node.scrollIntoView({ smooth: true });\n      } else if (node && !isTyping) {\n        node.scrollIntoView({ smooth: true });\n      }\n      setCircuit(true);\n    },\n    [isTyping, setCircuit]\n  );\n\n  const isScrolledIntoView = el => {\n    var rect = el.getBoundingClientRect();\n    var elemTop = rect.top;\n    var elemBottom = rect.bottom;\n\n    // Only completely visible elements return true:\n    var isVisible = elemTop >= 0 && elemBottom <= window.innerHeight;\n    // Partially visible elements return true:\n    //isVisible = elemTop < window.innerHeight && elemBottom >= 0;\n    return isVisible;\n  };\n\n  return (\n    <div className=\"message-view-container\">\n      {isLoading ? (\n        <Spinner type=\"search\" />\n      ) : (\n        <>\n          <div\n            onScroll={handleScroll}\n            className=\"message-view-active-chat-container\"\n          >\n            {messages.length > 0 &&\n              messages.map((message, i) => {\n                const lastMessageBool = messages.length - 1 === i + 1;\n                const userSentBool = userSent(currentUser, message);\n                const sameSenderAndNotCurrentUserBool =\n                  sameSenderAndNotCurrentUser(i, messages, currentUser);\n                const firstUnreadMessage =\n                  unreadMessages.length > 0 &&\n                  unreadMessages[0].message._id === message._id;\n\n                return (\n                  <Fragment key={i}>\n                    {firstUnreadMessage && (\n                      <div\n                        style={i === 0 ? { marginTop: '16px' } : {}}\n                        ref={setRef}\n                        className=\"first-unread-message-container\"\n                      >\n                        <p\n                          ref={newRef}\n                          style={{ marginLeft: `-${newRef.current?.width}` }}\n                        >\n                          New\n                        </p>\n                      </div>\n                    )}\n\n                    <div\n                      ref={\n                        lastMessageBool && unreadMessages.length === 0\n                          ? setRef\n                          : null\n                      }\n                      style={i === 0 ? { paddingTop: '6px' } : {}}\n                      className={`message-view-message-container ${\n                        userSentBool ? 'user-sent' : ''\n                      }`}\n                    >\n                      <div\n                        className=\"message-view-message-image-container\"\n                        style={\n                          sameSenderAndNotCurrentUserBool || userSentBool\n                            ? { visibility: 'hidden' }\n                            : { marginTop: '2px' }\n                        }\n                      >\n                        <img\n                          height=\"100%\"\n                          src={message.sender.picture}\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"message-view-text-container\">\n                        <div className=\"message-view-text\">{message.text}</div>\n                        <div\n                          style={\n                            sameSenderAndNotCurrentUserBool || userSentBool\n                              ? { display: 'none' }\n                              : {}\n                          }\n                          className=\"message-view-text-info\"\n                        >\n                          <p>\n                            @{!userSentBool ? message.sender.userName : 'You'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </Fragment>\n                );\n              })}\n          </div>\n\n          {isTyping && (\n            <div className=\"lottie-container\">\n              {typers.length ? getTyperString(typers) : ''}\n              <Lottie\n                animationData={animationData}\n                loop={true}\n                autoplay={true}\n                style={{ height: '16px', display: 'block' }}\n              />\n            </div>\n          )}\n\n          <div\n            className=\"send-message-editable\"\n            data-text={`Message ${\n              activeChat[0].isGroupChat\n                ? activeChat[0].chatName\n                : generateChatNameForSoloChats(activeChat[0].users, currentUser)\n            }`}\n            contentEditable\n            onKeyDown={handleKeyDown}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MessageView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}