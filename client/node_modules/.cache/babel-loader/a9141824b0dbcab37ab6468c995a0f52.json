{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/message-view/message-view.component.jsx\",\n    _s = $RefreshSig$();\n\nimport SendMessage from '../send-message/send-message.component';\nimport { useCallback } from 'react';\nimport { useConversations } from '../../contexts/conversations-context';\nimport './message-view.styles.scss'; // Could definitely add timestamp data to the message as well, that would be pretty clean actually\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageView = () => {\n  _s();\n\n  var _activeChat$messages;\n\n  // Somehow we are going to have to get all of the message in a conversation potentially and then mark whether or not they are your messages or someone else's to style accordingly;\n  // const mostRecentMessage = useRef();\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({\n        smooth: true\n      });\n    }\n  }, []);\n  const {\n    activeChat\n  } = useConversations(); // What is the best way to make it so that the text bubble can expland if it needs to??\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: (_activeChat$messages = activeChat.messages) === null || _activeChat$messages === void 0 ? void 0 : _activeChat$messages.map((message, i) => {\n        const lastMessageBool = activeChat.messages.length - 1 === i + 1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastMessageBool ? setRef : null,\n          className: `message-view-text-container ${message.userSent ? 'user-sent' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-view-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-view-text-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.userSent ? 'You' : message.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.timeStamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageView, \"KL/8G09OEJJjoN9Ww0+ycfo9OyA=\", false, function () {\n  return [useConversations];\n});\n\n_c = MessageView;\nexport default MessageView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageView\");","map":{"version":3,"names":["SendMessage","useCallback","useConversations","MessageView","setRef","node","scrollIntoView","smooth","activeChat","messages","map","message","i","lastMessageBool","length","userSent","text","sender","timeStamp"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/message-view/message-view.component.jsx"],"sourcesContent":["import SendMessage from '../send-message/send-message.component';\nimport { useCallback } from 'react';\nimport { useConversations } from '../../contexts/conversations-context';\nimport './message-view.styles.scss';\n\n// Could definitely add timestamp data to the message as well, that would be pretty clean actually\n\nconst MessageView = () => {\n  // Somehow we are going to have to get all of the message in a conversation potentially and then mark whether or not they are your messages or someone else's to style accordingly;\n  // const mostRecentMessage = useRef();\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({ smooth: true });\n    }\n  }, []);\n  const { activeChat } = useConversations();\n\n  // What is the best way to make it so that the text bubble can expland if it needs to??\n  return (\n    <div className=\"message-view-container\">\n      <div>\n        {activeChat.messages?.map((message, i) => {\n          const lastMessageBool = activeChat.messages.length - 1 === i + 1;\n          return (\n            <div\n              key={i}\n              ref={lastMessageBool ? setRef : null}\n              className={`message-view-text-container ${\n                message.userSent ? 'user-sent' : ''\n              }`}\n            >\n              <div className=\"message-view-text\">{message.text}</div>\n              <div className=\"message-view-text-info\">\n                <p>{message.userSent ? 'You' : message.sender}</p>\n                <span>&#x2022;</span>\n                <p>{message.timeStamp}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <SendMessage />\n    </div>\n  );\n};\n\nexport default MessageView;\n"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,wCAAxB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,OAAO,4BAAP,C,CAEA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAAA;;EACxB;EACA;EACA,MAAMC,MAAM,GAAGH,WAAW,CAACI,IAAI,IAAI;IACjC,IAAIA,IAAJ,EAAU;MACRA,IAAI,CAACC,cAAL,CAAoB;QAAEC,MAAM,EAAE;MAAV,CAApB;IACD;EACF,CAJyB,EAIvB,EAJuB,CAA1B;EAKA,MAAM;IAAEC;EAAF,IAAiBN,gBAAgB,EAAvC,CARwB,CAUxB;;EACA,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAA,wBACE;MAAA,kCACGM,UAAU,CAACC,QADd,yDACG,qBAAqBC,GAArB,CAAyB,CAACC,OAAD,EAAUC,CAAV,KAAgB;QACxC,MAAMC,eAAe,GAAGL,UAAU,CAACC,QAAX,CAAoBK,MAApB,GAA6B,CAA7B,KAAmCF,CAAC,GAAG,CAA/D;QACA,oBACE;UAEE,GAAG,EAAEC,eAAe,GAAGT,MAAH,GAAY,IAFlC;UAGE,SAAS,EAAG,+BACVO,OAAO,CAACI,QAAR,GAAmB,WAAnB,GAAiC,EAClC,EALH;UAAA,wBAOE;YAAK,SAAS,EAAC,mBAAf;YAAA,UAAoCJ,OAAO,CAACK;UAA5C;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE;YAAK,SAAS,EAAC,wBAAf;YAAA,wBACE;cAAA,UAAIL,OAAO,CAACI,QAAR,GAAmB,KAAnB,GAA2BJ,OAAO,CAACM;YAAvC;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAA,UAAIN,OAAO,CAACO;YAAZ;cAAA;cAAA;cAAA;YAAA,QAHF;UAAA;YAAA;YAAA;YAAA;UAAA,QARF;QAAA,GACON,CADP;UAAA;UAAA;UAAA;QAAA,QADF;MAgBD,CAlBA;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAsBE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CArCD;;GAAMT,W;UAQmBD,gB;;;KARnBC,W;AAuCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}