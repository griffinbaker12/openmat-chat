{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/text-header/text-header.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useConversations } from '../../contexts/conversations-context';\nimport './text-header.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextHeader = () => {\n  _s();\n\n  // If there is an overflow of people in a chat make sure that you either just say + however many more, or you actually allow people to scroll to the right to be able to see\n  const {\n    currentConversation\n  } = useConversations();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-header-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"to-text-recipient\",\n      children: [currentConversation.recipients[0], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextHeader, \"LJ9BLijq8rbmXooCTl9eMRIF/g4=\", false, function () {\n  return [useConversations];\n});\n\n_c = TextHeader;\nexport default TextHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextHeader\");","map":{"version":3,"names":["useConversations","TextHeader","currentConversation","recipients"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/text-header/text-header.component.jsx"],"sourcesContent":["import { useConversations } from '../../contexts/conversations-context';\nimport './text-header.styles.scss';\n\nconst TextHeader = () => {\n  // If there is an overflow of people in a chat make sure that you either just say + however many more, or you actually allow people to scroll to the right to be able to see\n  const { currentConversation } = useConversations();\n\n  return (\n    <div className=\"text-header-container\">\n      <p className=\"to-text-recipient\">{currentConversation.recipients[0]} </p>\n      {/* <div className=\"recipient-container\">\n        {currentConversation.recipients.map((recipient, i) => (\n          <div key={i} className=\"text-recipient\">\n            {recipient}\n          </div>\n        ))}\n      </div> */}\n    </div>\n  );\n};\n\nexport default TextHeader;\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,sCAAjC;AACA,OAAO,2BAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB;EACA,MAAM;IAAEC;EAAF,IAA0BF,gBAAgB,EAAhD;EAEA,oBACE;IAAK,SAAS,EAAC,uBAAf;IAAA,uBACE;MAAG,SAAS,EAAC,mBAAb;MAAA,WAAkCE,mBAAmB,CAACC,UAApB,CAA+B,CAA/B,CAAlC;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAhBD;;GAAMF,U;UAE4BD,gB;;;KAF5BC,U;AAkBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}