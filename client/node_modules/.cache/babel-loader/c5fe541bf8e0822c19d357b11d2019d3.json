{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/login/login.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport './login.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    changeAuth\n  } = useAuthentication();\n  const navigate = useNavigate();\n  const [text, setText] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleLogin = () => {\n    fetch('http://localhost:4000/api/user/login', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: text.email,\n        password: text.password\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data); // setCurrentUser(data);\n      // Until we and if we use redux with the persisted state, but otherwise we can just check to see if there is a current user\n\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    }).catch(err => console.log(err));\n    navigate('/chat'); // Definitely room here as well for showing a toast icon that will pop up when the user either is or is not successful in signing up and for what reason. For that reason alone and how clean it is it makes me want to use chakra ui.\n  };\n\n  const handleChange = e => {\n    const name = e.target.getAttribute('name');\n    setText(prevState => {\n      return { ...prevState,\n        [name]: e.target.value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"login-article\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"login-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-measure\",\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"login-fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"login-legend\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-legend-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"login-legend-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              className: \"login-legend-input\",\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              value: text.email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-legend-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"login-legend-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              className: \"login-legend-input\",\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              value: text.password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          value: \"Sign In\",\n          type: \"button\",\n          onClick: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: changeAuth,\n          className: \"register-text\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"9CL0jVYqOXIQ2wb6576v7AXc37E=\", false, function () {\n  return [useAuthentication, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","useAuthentication","Login","changeAuth","navigate","text","setText","email","password","handleLogin","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","localStorage","setItem","catch","err","handleChange","e","name","target","getAttribute","prevState","value"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/login/login.component.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport './login.styles.scss';\n\nconst Login = () => {\n  const { changeAuth } = useAuthentication();\n  const navigate = useNavigate();\n  const [text, setText] = useState({ email: '', password: '' });\n\n  const handleLogin = () => {\n    fetch('http://localhost:4000/api/user/login', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: text.email,\n        password: text.password,\n      }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        // setCurrentUser(data);\n        // Until we and if we use redux with the persisted state, but otherwise we can just check to see if there is a current user\n        localStorage.setItem('userInfo', JSON.stringify(data));\n      })\n      .catch(err => console.log(err));\n\n    navigate('/chat');\n    // Definitely room here as well for showing a toast icon that will pop up when the user either is or is not successful in signing up and for what reason. For that reason alone and how clean it is it makes me want to use chakra ui.\n  };\n\n  const handleChange = e => {\n    const name = e.target.getAttribute('name');\n    setText(prevState => {\n      return {\n        ...prevState,\n        [name]: e.target.value,\n      };\n    });\n  };\n\n  return (\n    <article className=\"login-article\">\n      <main className=\"login-main\">\n        <div className=\"login-measure\">\n          <fieldset className=\"login-fieldset\">\n            <legend className=\"login-legend\">Sign In</legend>\n            <div className=\"login-legend-input-container\">\n              <label htmlFor=\"email\" className=\"login-legend-label\">\n                Email\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"login-legend-input\"\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                value={text.email}\n                required\n              />\n            </div>\n            <div className=\"login-legend-input-container\">\n              <label htmlFor=\"password\" className=\"login-legend-label\">\n                Password\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"login-legend-input\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                value={text.password}\n                required\n              />\n            </div>\n          </fieldset>\n          <input\n            className=\"login-input\"\n            value=\"Sign In\"\n            type=\"button\"\n            onClick={handleLogin}\n          />\n          <p onClick={changeAuth} className=\"register-text\">\n            Register\n          </p>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}