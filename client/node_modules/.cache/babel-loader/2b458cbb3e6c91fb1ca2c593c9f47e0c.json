{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/notification-dropdown/notification-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useRef, useEffect, useState } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { generateChatNameForSoloChats } from '../../utils/utils';\nimport './notification-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    handleDropdown,\n    closeAccountDropdown,\n    closeNotificationDropdown\n  } = _ref;\n  const {\n    notifications,\n    setActiveChat,\n    chats\n  } = useChatView();\n  const {\n    currentUser\n  } = useAuthentication();\n  const [groupedNotifications, setGroupedNotifications] = useState([]);\n  const dropDownRef = useRef();\n\n  const handleSignOutClick = e => {\n    if (ref.current === e.target.closest('.header-chat-link')) {\n      return;\n    }\n\n    if (dropDownRef.current && !dropDownRef.current.contains(e.target)) {\n      closeNotificationDropdown();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleSignOutClick);\n    return () => document.removeEventListener('mousedown', handleSignOutClick);\n  });\n  useEffect(() => {\n    const chatCounter = [];\n    notifications.forEach(notification => {\n      const alreadyInCounterIndex = chatCounter.findIndex(notificaitonInChatCounter => notificaitonInChatCounter.chat._id === notification.message.chat._id);\n      console.log(alreadyInCounterIndex);\n\n      if (alreadyInCounterIndex >= 0) {\n        let objToInc = chatCounter[alreadyInCounterIndex];\n        objToInc.count = objToInc.count + 1;\n      } else {\n        chatCounter.push({\n          chat: notification.message.chat,\n          count: 1\n        });\n      }\n    });\n    setGroupedNotifications(chatCounter);\n  }, [notifications]);\n\n  const handleNotificationClick = e => {\n    const chatId = e.target.closest('.notification-dropdown-content-item-container').getAttribute('name');\n    const chat = chats.find(chat => chat._id === chatId);\n    setActiveChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleSignOutClick,\n    ref: dropDownRef,\n    className: \"notification-dropdown-container\",\n    children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No new notifications!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this) : groupedNotifications.map((groupedNotification, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleNotificationClick,\n      name: groupedNotification.chat._id,\n      className: \"notification-dropdown-content-item-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [groupedNotification.count === 1 ? 'New message' : `${groupedNotification.count} new messages`, ' ', groupedNotification.chat.isGroupChat ? `in ${groupedNotification.chat.chatName}` : `from ${generateChatNameForSoloChats(groupedNotification.chat.users, currentUser)}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}, \"kl9P0V9hUmVr38/5BvWvzDiEEmg=\", false, function () {\n  return [useChatView, useAuthentication];\n})), \"kl9P0V9hUmVr38/5BvWvzDiEEmg=\", false, function () {\n  return [useChatView, useAuthentication];\n});\n\n_c2 = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationDropdown$forwardRef\");\n$RefreshReg$(_c2, \"NotificationDropdown\");","map":{"version":3,"names":["forwardRef","useRef","useEffect","useState","useAuthentication","useChatView","generateChatNameForSoloChats","NotificationDropdown","ref","handleDropdown","closeAccountDropdown","closeNotificationDropdown","notifications","setActiveChat","chats","currentUser","groupedNotifications","setGroupedNotifications","dropDownRef","handleSignOutClick","e","current","target","closest","contains","document","addEventListener","removeEventListener","chatCounter","forEach","notification","alreadyInCounterIndex","findIndex","notificaitonInChatCounter","chat","_id","message","console","log","objToInc","count","push","handleNotificationClick","chatId","getAttribute","find","length","map","groupedNotification","i","isGroupChat","chatName","users"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/notification-dropdown/notification-dropdown.component.jsx"],"sourcesContent":["import { forwardRef, useRef, useEffect, useState } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { generateChatNameForSoloChats } from '../../utils/utils';\nimport './notification-dropdown.styles.scss';\n\nconst NotificationDropdown = forwardRef(\n  (\n    { handleDropdown, closeAccountDropdown, closeNotificationDropdown },\n    ref\n  ) => {\n    const { notifications, setActiveChat, chats } = useChatView();\n    const { currentUser } = useAuthentication();\n    const [groupedNotifications, setGroupedNotifications] = useState([]);\n    const dropDownRef = useRef();\n\n    const handleSignOutClick = e => {\n      if (ref.current === e.target.closest('.header-chat-link')) {\n        return;\n      }\n      if (dropDownRef.current && !dropDownRef.current.contains(e.target)) {\n        closeNotificationDropdown();\n      }\n    };\n\n    useEffect(() => {\n      document.addEventListener('mousedown', handleSignOutClick);\n      return () =>\n        document.removeEventListener('mousedown', handleSignOutClick);\n    });\n\n    useEffect(() => {\n      const chatCounter = [];\n      notifications.forEach(notification => {\n        const alreadyInCounterIndex = chatCounter.findIndex(\n          notificaitonInChatCounter =>\n            notificaitonInChatCounter.chat._id === notification.message.chat._id\n        );\n        console.log(alreadyInCounterIndex);\n        if (alreadyInCounterIndex >= 0) {\n          let objToInc = chatCounter[alreadyInCounterIndex];\n          objToInc.count = objToInc.count + 1;\n        } else {\n          chatCounter.push({ chat: notification.message.chat, count: 1 });\n        }\n      });\n      setGroupedNotifications(chatCounter);\n    }, [notifications]);\n\n    const handleNotificationClick = e => {\n      const chatId = e.target\n        .closest('.notification-dropdown-content-item-container')\n        .getAttribute('name');\n      const chat = chats.find(chat => chat._id === chatId);\n      setActiveChat(chat);\n    };\n\n    return (\n      <div\n        onClick={handleSignOutClick}\n        ref={dropDownRef}\n        className=\"notification-dropdown-container\"\n      >\n        {notifications.length === 0 ? (\n          <p>No new notifications!</p>\n        ) : (\n          groupedNotifications.map((groupedNotification, i) => (\n            <div\n              onClick={handleNotificationClick}\n              name={groupedNotification.chat._id}\n              key={i}\n              className=\"notification-dropdown-content-item-container\"\n            >\n              <p>\n                {groupedNotification.count === 1\n                  ? 'New message'\n                  : `${groupedNotification.count} new messages`}{' '}\n                {groupedNotification.chat.isGroupChat\n                  ? `in ${groupedNotification.chat.chatName}`\n                  : `from ${generateChatNameForSoloChats(\n                      groupedNotification.chat.users,\n                      currentUser\n                    )}`}\n              </p>\n            </div>\n          ))\n        )}\n      </div>\n    );\n  }\n);\nexport default NotificationDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}