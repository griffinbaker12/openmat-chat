{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/toast/toast.component.styles.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, forwardRef, useImperativeHandle } from 'react';\nimport './toast.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOAST_TYPE = {\n  success: 'success',\n  failure: 'failure'\n};\n\nconst Toast = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(_ref => {\n  _s();\n\n  let {\n    message,\n    type,\n    ref\n  } = _ref;\n  const [isToastShowing, setIsToastShowing] = useState(true);\n  useImperativeHandle(ref, () => ({\n    show() {\n      alert('hey');\n    }\n\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast-container ${type}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-symbol-container\",\n      children: type === TOAST_TYPE.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-success-symbol\",\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-failure-symbol\",\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-text-container\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}, \"ch/Z9IkNFSB/1mFF0jj4xmjxSn8=\")), \"ch/Z9IkNFSB/1mFF0jj4xmjxSn8=\");\n\n_c2 = Toast;\nexport default Toast;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Toast$forwardRef\");\n$RefreshReg$(_c2, \"Toast\");","map":{"version":3,"names":["useState","forwardRef","useImperativeHandle","TOAST_TYPE","success","failure","Toast","message","type","ref","isToastShowing","setIsToastShowing","show","alert"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/toast/toast.component.styles.jsx"],"sourcesContent":["import { useState, forwardRef, useImperativeHandle } from 'react';\nimport './toast.styles.scss';\n\nexport const TOAST_TYPE = {\n  success: 'success',\n  failure: 'failure',\n};\n\nconst Toast = forwardRef(({ message, type, ref }) => {\n  const [isToastShowing, setIsToastShowing] = useState(true);\n\n  useImperativeHandle(ref, () => ({\n    show() {\n      alert('hey');\n    },\n  }));\n\n  return (\n    <div className={`toast-container ${type}`}>\n      <div className=\"toast-symbol-container\">\n        {type === TOAST_TYPE.success ? (\n          <div className=\"toast-success-symbol\">&#x2713;</div>\n        ) : (\n          <div className=\"toast-failure-symbol\">&#10006;</div>\n        )}\n      </div>\n      <div className=\"toast-text-container\">{message}</div>\n    </div>\n  );\n});\n\nexport default Toast;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,mBAA/B,QAA0D,OAA1D;AACA,OAAO,qBAAP;;AAEA,OAAO,MAAMC,UAAU,GAAG;EACxBC,OAAO,EAAE,SADe;EAExBC,OAAO,EAAE;AAFe,CAAnB;;AAKP,MAAMC,KAAK,iCAAGL,UAAU,SAAC,QAA4B;EAAA;;EAAA,IAA3B;IAAEM,OAAF;IAAWC,IAAX;IAAiBC;EAAjB,CAA2B;EACnD,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,IAAD,CAApD;EAEAE,mBAAmB,CAACO,GAAD,EAAM,OAAO;IAC9BG,IAAI,GAAG;MACLC,KAAK,CAAC,KAAD,CAAL;IACD;;EAH6B,CAAP,CAAN,CAAnB;EAMA,oBACE;IAAK,SAAS,EAAG,mBAAkBL,IAAK,EAAxC;IAAA,wBACE;MAAK,SAAS,EAAC,wBAAf;MAAA,UACGA,IAAI,KAAKL,UAAU,CAACC,OAApB,gBACC;QAAK,SAAS,EAAC,sBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,gBAGC;QAAK,SAAS,EAAC,sBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAJJ;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAK,SAAS,EAAC,sBAAf;MAAA,UAAuCG;IAAvC;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CArBuB,kCAAb,iCAAX;;MAAMD,K;AAuBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}