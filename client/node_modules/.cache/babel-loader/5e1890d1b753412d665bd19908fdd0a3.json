{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-info-modal/chat-info-modal.components.jsx\",\n    _s = $RefreshSig$();\n\nimport { useConversations } from '../../contexts/conversations-context';\nimport UserInfoModal from '../user-info-modal/user-info-modal.component';\nimport { useSidebar } from '../../contexts/sidebar-context';\nimport './chat-info-modal.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatInfoModal = () => {\n  _s();\n\n  var _activeChat$;\n\n  const {\n    activeChat\n  } = useConversations();\n  const isGroupChat = ((_activeChat$ = activeChat[0]) === null || _activeChat$ === void 0 ? void 0 : _activeChat$.chatName) === 'solo chat' ? false : true;\n  const {\n    showModal,\n    closeModal\n  } = useSidebar(); // Check if it is a solo chat or a group chat, and then render a different modal accordingly\n  // Could have also made calsses that I would apply across the different modals, but at this point..\n  // If it is a group chat, then I want to show the entire chat, and then once you click on a user, I actually just want to switch to not show the group chat, but to show the actual user info-modal, hide the group chat, and include a back arrow\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-info-modal-container ${showModal ? 'active' : ''}`,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-info-modal-content\",\n      children: isGroupChat && activeChat.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-chat-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: activeChat[0].chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            type: \"button\",\n            style: {\n              color: 'white'\n            },\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-chat-modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(UserInfoModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatInfoModal, \"frYrmvxOySQcf/oF1Fdt4B/KxN4=\", false, function () {\n  return [useConversations, useSidebar];\n});\n\n_c = ChatInfoModal;\nexport default ChatInfoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInfoModal\");","map":{"version":3,"names":["useConversations","UserInfoModal","useSidebar","ChatInfoModal","activeChat","isGroupChat","chatName","showModal","closeModal","length","color"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-info-modal/chat-info-modal.components.jsx"],"sourcesContent":["import { useConversations } from '../../contexts/conversations-context';\nimport UserInfoModal from '../user-info-modal/user-info-modal.component';\nimport { useSidebar } from '../../contexts/sidebar-context';\nimport './chat-info-modal.styles.scss';\n\nconst ChatInfoModal = () => {\n  const { activeChat } = useConversations();\n  const isGroupChat = activeChat[0]?.chatName === 'solo chat' ? false : true;\n  const { showModal, closeModal } = useSidebar();\n\n  // Check if it is a solo chat or a group chat, and then render a different modal accordingly\n\n  // Could have also made calsses that I would apply across the different modals, but at this point..\n\n  // If it is a group chat, then I want to show the entire chat, and then once you click on a user, I actually just want to switch to not show the group chat, but to show the actual user info-modal, hide the group chat, and include a back arrow\n\n  return (\n    <div\n      className={`chat-info-modal-container ${showModal ? 'active' : ''}`}\n      onClick={closeModal}\n    >\n      <div className=\"chat-info-modal-content\">\n        {isGroupChat && activeChat.length !== 0 ? (\n          <>\n            <div className=\"group-chat-modal-header\">\n              <p>{activeChat[0].chatName}</p>\n              <button\n                onClick={closeModal}\n                type=\"button\"\n                style={{ color: 'white' }}\n              >\n                &#x2715;\n              </button>\n            </div>\n            <div className=\"group-chat-modal-body\">\n              <div className=\"\"></div>\n            </div>\n          </>\n        ) : (\n          <UserInfoModal />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default ChatInfoModal;\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,sCAAjC;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAO,+BAAP;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAAA;;EAC1B,MAAM;IAAEC;EAAF,IAAiBJ,gBAAgB,EAAvC;EACA,MAAMK,WAAW,GAAG,iBAAAD,UAAU,CAAC,CAAD,CAAV,8DAAeE,QAAf,MAA4B,WAA5B,GAA0C,KAA1C,GAAkD,IAAtE;EACA,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAA4BN,UAAU,EAA5C,CAH0B,CAK1B;EAEA;EAEA;;EAEA,oBACE;IACE,SAAS,EAAG,6BAA4BK,SAAS,GAAG,QAAH,GAAc,EAAG,EADpE;IAEE,OAAO,EAAEC,UAFX;IAAA,uBAIE;MAAK,SAAS,EAAC,yBAAf;MAAA,UACGH,WAAW,IAAID,UAAU,CAACK,MAAX,KAAsB,CAArC,gBACC;QAAA,wBACE;UAAK,SAAS,EAAC,yBAAf;UAAA,wBACE;YAAA,UAAIL,UAAU,CAAC,CAAD,CAAV,CAAcE;UAAlB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YACE,OAAO,EAAEE,UADX;YAEE,IAAI,EAAC,QAFP;YAGE,KAAK,EAAE;cAAEE,KAAK,EAAE;YAAT,CAHT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAWE;UAAK,SAAS,EAAC,uBAAf;UAAA,uBACE;YAAK,SAAS,EAAC;UAAf;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAXF;MAAA,gBADD,gBAiBC,QAAC,aAAD;QAAA;QAAA;QAAA;MAAA;IAlBJ;MAAA;MAAA;MAAA;IAAA;EAJF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CAvCD;;GAAMP,a;UACmBH,gB,EAEWE,U;;;KAH9BC,a;AAwCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}