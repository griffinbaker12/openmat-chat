{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/side-bar/side-bar.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { ReactComponent as SearchIcon } from '../../assets/search.svg';\nimport ChatPreview from '../chat-preview/chat-preview.component';\nimport './side-bar.styles.scss';\nimport ContactPreview from '../contact-preview/contact-preview.component';\nimport Spinner from '../spinner/spinner.component';\nimport { useChatView, MODAL_TYPE } from '../../contexts/chat-view-context';\nimport { useSocket } from '../../contexts/socket-context';\nimport { defaultToast, TOAST_TYPE } from '../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = () => {\n  _s();\n\n  const {\n    socket\n  } = useSocket();\n  const {\n    search,\n    isChatViewLoading,\n    updateSearchValue,\n    handleSearchSubmit,\n    handleModal,\n    sideBarCategory,\n    activeView,\n    windowDimensions,\n    setChats,\n    setReloadCircuit,\n    activeChat,\n    setActiveChat,\n    chats\n  } = useChatView();\n  console.log('chats', chats);\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('updated chat', function (updatedChat) {\n      let removeFlag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      let updateFlag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      let checkForDuplicate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      setReloadCircuit(true);\n      console.log(updatedChat, removeFlag, updateFlag);\n\n      if (!removeFlag && !updateFlag) {\n        setChats(prevState => [updatedChat, ...prevState]);\n        defaultToast(TOAST_TYPE.success, 'You have been added to a chat');\n        return;\n      }\n\n      if (removeFlag) {\n        setChats(prevState => {\n          return prevState.filter(chat => chat._id !== updatedChat._id);\n        });\n        return;\n      }\n\n      const priorChatUserNamesAndId = chats.map(chat => [chat.users.map(_ref => {\n        let {\n          userName\n        } = _ref;\n        return userName;\n      }).sort(), chat._id]);\n      const updatedChatUserNames = [...updatedChat.users].map(user => user.userName).sort();\n      console.log(priorChatUserNamesAndId, 'mpwns', updatedChatUserNames, 'scps');\n      const existingChatUsersAndId = priorChatUserNamesAndId.find(chat => {\n        if (chat[0].length !== updatedChatUserNames.length) return false;\n        return chat[0].every((user, i) => user === updatedChatUserNames[i]);\n      });\n\n      if (existingChatUsersAndId && checkForDuplicate) {\n        const existingChat = chats.find(chat => chat._id === existingChatUsersAndId[1]);\n        setActiveChat([existingChat]);\n        setChats(prevState => {\n          return prevState.filter(chat => chat._id !== updatedChat._id);\n        });\n        return;\n      }\n\n      if (updateFlag && activeChat[0] && updatedChat._id === activeChat[0]._id) {\n        setActiveChat([updatedChat]);\n        setChats(prevState => {\n          const arr = prevState.map(chat => {\n            if (chat._id === updatedChat._id) {\n              return updatedChat;\n            } else return chat;\n          });\n          return arr;\n        });\n        return;\n      } else if (updateFlag && chats.some(chat => chat._id === updatedChat._id)) {\n        setChats(prevState => {\n          const arr = prevState.map(chat => {\n            if (chat._id === updatedChat._id) {\n              return updatedChat;\n            } else return chat;\n          });\n          return arr;\n        });\n        return;\n      }\n    });\n    return () => socket.off('updated chat');\n  }, [socket, setChats, setReloadCircuit, activeChat, setActiveChat, chats]);\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('chat creation', newChat => {\n      setReloadCircuit(true);\n      setChats(prevState => [newChat, ...prevState]);\n    });\n    return () => socket.off('chat creation');\n  }, [socket, setChats, setReloadCircuit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: windowDimensions.width > 900 ? {\n      width: '31%'\n    } : activeView === 'chat-preview' ? {\n      width: '100%'\n    } : {\n      display: 'none'\n    },\n    className: \"side-bar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-bar-search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearchSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateSearchValue,\n          value: search,\n          type: \"search\",\n          placeholder: \"Search conversations and friends ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChatPreview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), isChatViewLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        type: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(ContactPreview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"side-bar-container-generate-button\",\n      onClick: () => handleModal(MODAL_TYPE.sidebar),\n      type: \"button\",\n      children: sideBarCategory === 'conversations' ? 'New Conversation' : 'Add Friend'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideBar, \"xhEhEjnkqEmOcn8URF33SZ2hD50=\", false, function () {\n  return [useSocket, useChatView];\n});\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["useEffect","useState","ReactComponent","SearchIcon","ChatPreview","ContactPreview","Spinner","useChatView","MODAL_TYPE","useSocket","defaultToast","TOAST_TYPE","SideBar","socket","search","isChatViewLoading","updateSearchValue","handleSearchSubmit","handleModal","sideBarCategory","activeView","windowDimensions","setChats","setReloadCircuit","activeChat","setActiveChat","chats","console","log","on","updatedChat","removeFlag","updateFlag","checkForDuplicate","prevState","success","filter","chat","_id","priorChatUserNamesAndId","map","users","userName","sort","updatedChatUserNames","user","existingChatUsersAndId","find","length","every","i","existingChat","arr","some","off","newChat","width","display","flex","sidebar"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/side-bar/side-bar.component.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ReactComponent as SearchIcon } from '../../assets/search.svg';\nimport ChatPreview from '../chat-preview/chat-preview.component';\nimport './side-bar.styles.scss';\nimport ContactPreview from '../contact-preview/contact-preview.component';\nimport Spinner from '../spinner/spinner.component';\nimport { useChatView, MODAL_TYPE } from '../../contexts/chat-view-context';\nimport { useSocket } from '../../contexts/socket-context';\nimport { defaultToast, TOAST_TYPE } from '../../utils/utils';\n\nconst SideBar = () => {\n  const { socket } = useSocket();\n  const {\n    search,\n    isChatViewLoading,\n    updateSearchValue,\n    handleSearchSubmit,\n    handleModal,\n    sideBarCategory,\n    activeView,\n    windowDimensions,\n    setChats,\n    setReloadCircuit,\n    activeChat,\n    setActiveChat,\n    chats,\n  } = useChatView();\n\n  console.log('chats', chats);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on(\n      'updated chat',\n      (\n        updatedChat,\n        removeFlag = null,\n        updateFlag = null,\n        checkForDuplicate = null\n      ) => {\n        setReloadCircuit(true);\n\n        console.log(updatedChat, removeFlag, updateFlag);\n\n        if (!removeFlag && !updateFlag) {\n          setChats(prevState => [updatedChat, ...prevState]);\n          defaultToast(TOAST_TYPE.success, 'You have been added to a chat');\n          return;\n        }\n\n        if (removeFlag) {\n          setChats(prevState => {\n            return prevState.filter(chat => chat._id !== updatedChat._id);\n          });\n          return;\n        }\n\n        const priorChatUserNamesAndId = chats.map(chat => [\n          chat.users.map(({ userName }) => userName).sort(),\n          chat._id,\n        ]);\n\n        const updatedChatUserNames = [...updatedChat.users]\n          .map(user => user.userName)\n          .sort();\n\n        console.log(\n          priorChatUserNamesAndId,\n          'mpwns',\n          updatedChatUserNames,\n          'scps'\n        );\n\n        const existingChatUsersAndId = priorChatUserNamesAndId.find(chat => {\n          if (chat[0].length !== updatedChatUserNames.length) return false;\n          return chat[0].every((user, i) => user === updatedChatUserNames[i]);\n        });\n\n        if (existingChatUsersAndId && checkForDuplicate) {\n          const existingChat = chats.find(\n            chat => chat._id === existingChatUsersAndId[1]\n          );\n          setActiveChat([existingChat]);\n          setChats(prevState => {\n            return prevState.filter(chat => chat._id !== updatedChat._id);\n          });\n          return;\n        }\n\n        if (\n          updateFlag &&\n          activeChat[0] &&\n          updatedChat._id === activeChat[0]._id\n        ) {\n          setActiveChat([updatedChat]);\n          setChats(prevState => {\n            const arr = prevState.map(chat => {\n              if (chat._id === updatedChat._id) {\n                return updatedChat;\n              } else return chat;\n            });\n            return arr;\n          });\n          return;\n        } else if (\n          updateFlag &&\n          chats.some(chat => chat._id === updatedChat._id)\n        ) {\n          setChats(prevState => {\n            const arr = prevState.map(chat => {\n              if (chat._id === updatedChat._id) {\n                return updatedChat;\n              } else return chat;\n            });\n            return arr;\n          });\n          return;\n        }\n      }\n    );\n    return () => socket.off('updated chat');\n  }, [socket, setChats, setReloadCircuit, activeChat, setActiveChat, chats]);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('chat creation', newChat => {\n      setReloadCircuit(true);\n      setChats(prevState => [newChat, ...prevState]);\n    });\n    return () => socket.off('chat creation');\n  }, [socket, setChats, setReloadCircuit]);\n\n  return (\n    <div\n      style={\n        windowDimensions.width > 900\n          ? { width: '31%' }\n          : activeView === 'chat-preview'\n          ? { width: '100%' }\n          : { display: 'none' }\n      }\n      className=\"side-bar-container\"\n    >\n      <div className=\"side-bar-search-container\">\n        <form onSubmit={handleSearchSubmit}>\n          <input\n            onChange={updateSearchValue}\n            value={search}\n            type=\"search\"\n            placeholder=\"Search conversations and friends ...\"\n          />\n          <SearchIcon className=\"search-icon\" />\n        </form>\n      </div>\n\n      <div style={{ flex: '1' }}>\n        <ChatPreview />\n        {isChatViewLoading ? <Spinner type=\"search\" /> : <ContactPreview />}\n      </div>\n\n      <button\n        className=\"side-bar-container-generate-button\"\n        onClick={() => handleModal(MODAL_TYPE.sidebar)}\n        type=\"button\"\n      >\n        {sideBarCategory === 'conversations'\n          ? 'New Conversation'\n          : 'Add Friend'}\n      </button>\n    </div>\n  );\n};\n\nexport default SideBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}