{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/contexts/conversations-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/createContext();\nexport const useConversations = () => {\n  _s();\n\n  return useContext(ConversationsContext);\n};\n\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const ConversationsProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [conversations, setConversations] = useState([]);\n  const [activeConversation, setActiveConversation] = useState(); // I feel like here you almost need an id to recognize what chat it is so that you can access this from the other component?\n\n  const createConversation = recipients => setConversations(prevState => [...prevState, {\n    recipients,\n    messages: []\n  }]);\n\n  const setConversation = conversationAttribute => setActiveConversation(conversationAttribute); // On this object, you almost want the recipients, and the messages\n\n\n  const addMessageToConversation = _ref2 => {\n    let {\n      recipients,\n      text,\n      sender\n    } = _ref2;\n  };\n\n  const sendMessage = (recipients, text) => {\n    addMessageToConversation(recipients, text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: {\n      conversations,\n      createConversation,\n      activeConversation,\n      setConversation\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ConversationsProvider, \"i1cu00Pq2I8ig2GI5V8ZYzbNSQI=\");\n\n_c = ConversationsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"names":["createContext","useContext","useState","ConversationsContext","useConversations","ConversationsProvider","children","conversations","setConversations","activeConversation","setActiveConversation","createConversation","recipients","prevState","messages","setConversation","conversationAttribute","addMessageToConversation","text","sender","sendMessage"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/contexts/conversations-context.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nconst ConversationsContext = createContext();\n\nexport const useConversations = () => useContext(ConversationsContext);\n\nexport const ConversationsProvider = ({ children }) => {\n  const [conversations, setConversations] = useState([]);\n  const [activeConversation, setActiveConversation] = useState();\n\n  // I feel like here you almost need an id to recognize what chat it is so that you can access this from the other component?\n\n  const createConversation = recipients =>\n    setConversations(prevState => [...prevState, { recipients, messages: [] }]);\n\n  const setConversation = conversationAttribute =>\n    setActiveConversation(conversationAttribute);\n  // On this object, you almost want the recipients, and the messages\n\n  const addMessageToConversation = ({ recipients, text, sender }) => {};\n\n  const sendMessage = (recipients, text) => {\n    addMessageToConversation(recipients, text);\n  };\n\n  return (\n    <ConversationsContext.Provider\n      value={{\n        conversations,\n        createConversation,\n        activeConversation,\n        setConversation,\n      }}\n    >\n      {children}\n    </ConversationsContext.Provider>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,oBAAoB,gBAAGH,aAAa,EAA1C;AAEA,OAAO,MAAMI,gBAAgB,GAAG;EAAA;;EAAA,OAAMH,UAAU,CAACE,oBAAD,CAAhB;AAAA,CAAzB;;GAAMC,gB;;AAEb,OAAO,MAAMC,qBAAqB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACrD,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,EAA5D,CAFqD,CAIrD;;EAEA,MAAMS,kBAAkB,GAAGC,UAAU,IACnCJ,gBAAgB,CAACK,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAe;IAAED,UAAF;IAAcE,QAAQ,EAAE;EAAxB,CAAf,CAAd,CADlB;;EAGA,MAAMC,eAAe,GAAGC,qBAAqB,IAC3CN,qBAAqB,CAACM,qBAAD,CADvB,CATqD,CAWrD;;;EAEA,MAAMC,wBAAwB,GAAG,SAAkC;IAAA,IAAjC;MAAEL,UAAF;MAAcM,IAAd;MAAoBC;IAApB,CAAiC;EAAE,CAArE;;EAEA,MAAMC,WAAW,GAAG,CAACR,UAAD,EAAaM,IAAb,KAAsB;IACxCD,wBAAwB,CAACL,UAAD,EAAaM,IAAb,CAAxB;EACD,CAFD;;EAIA,oBACE,QAAC,oBAAD,CAAsB,QAAtB;IACE,KAAK,EAAE;MACLX,aADK;MAELI,kBAFK;MAGLF,kBAHK;MAILM;IAJK,CADT;IAAA,UAQGT;EARH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA/BM;;IAAMD,qB;;KAAAA,qB"},"metadata":{},"sourceType":"module"}