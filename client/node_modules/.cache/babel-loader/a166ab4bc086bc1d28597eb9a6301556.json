{"ast":null,"code":"import _regeneratorRuntime from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{forwardRef,useRef,useEffect,useState}from'react';import{useAuthentication}from'../../contexts/authentication-context';import{useChatView}from'../../contexts/chat-view-context';import{generateChatNameForSoloChats,defaultToast,TOAST_TYPE}from'../../utils/utils';import'./notification-dropdown.styles.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotificationDropdown=/*#__PURE__*/forwardRef(function(_ref,ref){var handleDropdown=_ref.handleDropdown,closeAccountDropdown=_ref.closeAccountDropdown,closeNotificationDropdown=_ref.closeNotificationDropdown;var _useChatView=useChatView(),notifications=_useChatView.notifications,setActiveChat=_useChatView.setActiveChat,chats=_useChatView.chats,setNotifications=_useChatView.setNotifications,setUnreadMessages=_useChatView.setUnreadMessages;var _useAuthentication=useAuthentication(),currentUser=_useAuthentication.currentUser;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),groupedNotifications=_useState2[0],setGroupedNotifications=_useState2[1];var dropDownRef=useRef();var handleSignOutClick=function handleSignOutClick(e){if(ref.current===e.target.closest('.header-chat-link')){return;}if(dropDownRef.current&&!dropDownRef.current.contains(e.target)){closeNotificationDropdown();}};useEffect(function(){document.addEventListener('mousedown',handleSignOutClick);return function(){return document.removeEventListener('mousedown',handleSignOutClick);};});useEffect(function(){var chatCounter=[];if(notifications.length===0)return;notifications.forEach(function(notification){var alreadyInCounterIndex=chatCounter.findIndex(function(notificaitonInChatCounter){return notificaitonInChatCounter.chat._id===notification.message.chat._id;});if(alreadyInCounterIndex>=0){var objToInc=chatCounter[alreadyInCounterIndex];objToInc.count=objToInc.count+1;}else{chatCounter.push({chat:notification.message.chat,count:1});}});setGroupedNotifications(chatCounter);},[notifications]);var handleNotificationClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var chatId,chat,unreadNotificationsInChat,response,updatedNotifications;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:chatId=e.target.closest('.notification-dropdown-content-item-container').getAttribute('name');chat=chats.find(function(chat){return chat._id===chatId;});setActiveChat([chat]);unreadNotificationsInChat=notifications.filter(function(notification){return notification.chat._id===chatId;});console.log(unreadNotificationsInChat,'unread in chat');setUnreadMessages(unreadNotificationsInChat);_context.prev=6;_context.next=9;return fetch(\"http://localhost:4000/api/notification/removeNotification\",{method:'post',headers:{Authorization:\"Bearer \".concat(currentUser.token),'Content-Type':'application/json'},body:JSON.stringify({chatId:chat._id})});case 9:response=_context.sent;_context.next=12;return response.json();case 12:updatedNotifications=_context.sent;setNotifications(updatedNotifications);_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](6);defaultToast(TOAST_TYPE.error,'Error updating notifications');case 19:case\"end\":return _context.stop();}}},_callee,null,[[6,16]]);}));return function handleNotificationClick(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{onClick:handleSignOutClick,ref:dropDownRef,className:\"notification-dropdown-container\",children:notifications.length===0?/*#__PURE__*/_jsx(\"p\",{style:{padding:'20px',textAlign:'center'},children:\"No new notifications!\"}):groupedNotifications.map(function(groupedNotification,i){return/*#__PURE__*/_jsx(\"div\",{onClick:handleNotificationClick,name:groupedNotification.chat._id,className:\"notification-dropdown-content-item-container\",children:/*#__PURE__*/_jsxs(\"p\",{children:[groupedNotification.count===1?'New message':\"\".concat(groupedNotification.count,\" new messages\"),' ',groupedNotification.chat.isGroupChat?\"in \".concat(groupedNotification.chat.chatName):\"from \".concat(generateChatNameForSoloChats(groupedNotification.chat.users,currentUser))]})},i);})});});export default NotificationDropdown;","map":{"version":3,"names":["forwardRef","useRef","useEffect","useState","useAuthentication","useChatView","generateChatNameForSoloChats","defaultToast","TOAST_TYPE","NotificationDropdown","ref","handleDropdown","closeAccountDropdown","closeNotificationDropdown","notifications","setActiveChat","chats","setNotifications","setUnreadMessages","currentUser","groupedNotifications","setGroupedNotifications","dropDownRef","handleSignOutClick","e","current","target","closest","contains","document","addEventListener","removeEventListener","chatCounter","length","forEach","notification","alreadyInCounterIndex","findIndex","notificaitonInChatCounter","chat","_id","message","objToInc","count","push","handleNotificationClick","chatId","getAttribute","find","unreadNotificationsInChat","filter","console","log","fetch","method","headers","Authorization","token","body","JSON","stringify","response","json","updatedNotifications","error","padding","textAlign","map","groupedNotification","i","isGroupChat","chatName","users"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/notification-dropdown/notification-dropdown.component.jsx"],"sourcesContent":["import { forwardRef, useRef, useEffect, useState } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport {\n  generateChatNameForSoloChats,\n  defaultToast,\n  TOAST_TYPE,\n} from '../../utils/utils';\nimport './notification-dropdown.styles.scss';\n\nconst NotificationDropdown = forwardRef(\n  (\n    { handleDropdown, closeAccountDropdown, closeNotificationDropdown },\n    ref\n  ) => {\n    const {\n      notifications,\n      setActiveChat,\n      chats,\n      setNotifications,\n      setUnreadMessages,\n    } = useChatView();\n    const { currentUser } = useAuthentication();\n    const [groupedNotifications, setGroupedNotifications] = useState([]);\n    const dropDownRef = useRef();\n\n    const handleSignOutClick = e => {\n      if (ref.current === e.target.closest('.header-chat-link')) {\n        return;\n      }\n      if (dropDownRef.current && !dropDownRef.current.contains(e.target)) {\n        closeNotificationDropdown();\n      }\n    };\n\n    useEffect(() => {\n      document.addEventListener('mousedown', handleSignOutClick);\n      return () =>\n        document.removeEventListener('mousedown', handleSignOutClick);\n    });\n\n    useEffect(() => {\n      const chatCounter = [];\n      if (notifications.length === 0) return;\n      notifications.forEach(notification => {\n        const alreadyInCounterIndex = chatCounter.findIndex(\n          notificaitonInChatCounter =>\n            notificaitonInChatCounter.chat._id === notification.message.chat._id\n        );\n        if (alreadyInCounterIndex >= 0) {\n          let objToInc = chatCounter[alreadyInCounterIndex];\n          objToInc.count = objToInc.count + 1;\n        } else {\n          chatCounter.push({ chat: notification.message.chat, count: 1 });\n        }\n      });\n      setGroupedNotifications(chatCounter);\n    }, [notifications]);\n\n    const handleNotificationClick = async e => {\n      const chatId = e.target\n        .closest('.notification-dropdown-content-item-container')\n        .getAttribute('name');\n      const chat = chats.find(chat => chat._id === chatId);\n      setActiveChat([chat]);\n      const unreadNotificationsInChat = notifications.filter(\n        notification => notification.chat._id === chatId\n      );\n      console.log(unreadNotificationsInChat, 'unread in chat');\n      setUnreadMessages(unreadNotificationsInChat);\n\n      try {\n        const response = await fetch(\n          `http://localhost:4000/api/notification/removeNotification`,\n          {\n            method: 'post',\n            headers: {\n              Authorization: `Bearer ${currentUser.token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              chatId: chat._id,\n            }),\n          }\n        );\n        const updatedNotifications = await response.json();\n        setNotifications(updatedNotifications);\n      } catch (error) {\n        defaultToast(TOAST_TYPE.error, 'Error updating notifications');\n      }\n    };\n\n    return (\n      <div\n        onClick={handleSignOutClick}\n        ref={dropDownRef}\n        className=\"notification-dropdown-container\"\n      >\n        {notifications.length === 0 ? (\n          <p\n            style={{\n              padding: '20px',\n              textAlign: 'center',\n            }}\n          >\n            No new notifications!\n          </p>\n        ) : (\n          groupedNotifications.map((groupedNotification, i) => (\n            <div\n              onClick={handleNotificationClick}\n              name={groupedNotification.chat._id}\n              key={i}\n              className=\"notification-dropdown-content-item-container\"\n            >\n              <p>\n                {groupedNotification.count === 1\n                  ? 'New message'\n                  : `${groupedNotification.count} new messages`}{' '}\n                {groupedNotification.chat.isGroupChat\n                  ? `in ${groupedNotification.chat.chatName}`\n                  : `from ${generateChatNameForSoloChats(\n                      groupedNotification.chat.users,\n                      currentUser\n                    )}`}\n              </p>\n            </div>\n          ))\n        )}\n      </div>\n    );\n  }\n);\nexport default NotificationDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}