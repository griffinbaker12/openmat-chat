{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/text-header/text-header.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useConversations } from '../../contexts/conversations-context';\nimport './text-header.styles.scss';\nimport { generateChatNameForSoloChats } from '../../utils/utils';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextHeader = () => {\n  _s();\n\n  // If there is an overflow of people in a chat make sure that you either just say + however many more, or you actually allow people to scroll to the right to be able to see\n  const {\n    activeChat\n  } = useConversations();\n  const {\n    currentUser\n  } = useAuthentication();\n  console.log(activeChat, 'from header');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-header-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-header-content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: generateChatNameForSoloChats(activeChat[0].users, currentUser)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-information-button\",\n        children: \"i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextHeader, \"sPQ0mmdL5bOmXHetCKwW7gA5qHI=\", false, function () {\n  return [useConversations, useAuthentication];\n});\n\n_c = TextHeader;\nexport default TextHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextHeader\");","map":{"version":3,"names":["useConversations","generateChatNameForSoloChats","useAuthentication","TextHeader","activeChat","currentUser","console","log","users"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/text-header/text-header.component.jsx"],"sourcesContent":["import { useConversations } from '../../contexts/conversations-context';\nimport './text-header.styles.scss';\nimport { generateChatNameForSoloChats } from '../../utils/utils';\nimport { useAuthentication } from '../../contexts/authentication-context';\n\nconst TextHeader = () => {\n  // If there is an overflow of people in a chat make sure that you either just say + however many more, or you actually allow people to scroll to the right to be able to see\n  const { activeChat } = useConversations();\n  const { currentUser } = useAuthentication();\n  console.log(activeChat, 'from header');\n\n  return (\n    <div className=\"text-header-container\">\n      <div className=\"text-header-content-container\">\n        <p>{generateChatNameForSoloChats(activeChat[0].users, currentUser)}</p>\n        <button className=\"chat-information-button\">i</button>\n      </div>\n      {/* <p className=\"to-text-recipient\">{currentConversation.recipients[0]} </p> */}\n      {/* <div className=\"recipient-container\">\n        {currentConversation.recipients.map((recipient, i) => (\n          <div key={i} className=\"text-recipient\">\n            {recipient}\n          </div>\n        ))}\n      </div> */}\n    </div>\n  );\n};\n\nexport default TextHeader;\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,sCAAjC;AACA,OAAO,2BAAP;AACA,SAASC,4BAAT,QAA6C,mBAA7C;AACA,SAASC,iBAAT,QAAkC,uCAAlC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB;EACA,MAAM;IAAEC;EAAF,IAAiBJ,gBAAgB,EAAvC;EACA,MAAM;IAAEK;EAAF,IAAkBH,iBAAiB,EAAzC;EACAI,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAAwB,aAAxB;EAEA,oBACE;IAAK,SAAS,EAAC,uBAAf;IAAA,uBACE;MAAK,SAAS,EAAC,+BAAf;MAAA,wBACE;QAAA,UAAIH,4BAA4B,CAACG,UAAU,CAAC,CAAD,CAAV,CAAcI,KAAf,EAAsBH,WAAtB;MAAhC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,SAAS,EAAC,yBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAtBD;;GAAMF,U;UAEmBH,gB,EACCE,iB;;;KAHpBC,U;AAwBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}