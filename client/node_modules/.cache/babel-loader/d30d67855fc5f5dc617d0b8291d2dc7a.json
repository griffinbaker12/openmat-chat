{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/contexts/authentication-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationContext = /*#__PURE__*/createContext();\nexport const useAuthentication = () => {\n  _s();\n\n  return useContext(AuthenticationContext);\n};\n\n_s(useAuthentication, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthenticationProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [activeAuth, setActiveAuth] = useState('login');\n  const [currentUser, setCurrentUser] = useState(null); // May want to include different states for whether the sign in or the registration is loading...but fine for now\n\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const changeAuth = () => setActiveAuth(prevState => prevState === 'login' ? 'register' : 'login'); // Something like this, I am not sure if this works 100% but still nonetheless we can clean this up later when we get to it. Then we should also be working on the sign in component which should not be all that bad either\n\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n\n    if (userInfo) {\n      setIsLoading(true);\n      setCurrentUser(userInfo);\n    }\n\n    if (!userInfo) navigate('/');\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(AuthenticationContext.Provider, {\n    value: {\n      activeAuth,\n      changeAuth,\n      currentUser,\n      setCurrentUser,\n      isLoading,\n      setIsLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthenticationProvider, \"X/qpFkabNyP1AFQQbKzUsj0n7yI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthenticationProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticationProvider\");","map":{"version":3,"names":["createContext","useCallback","useContext","useEffect","useState","useNavigate","AuthenticationContext","useAuthentication","AuthenticationProvider","children","activeAuth","setActiveAuth","currentUser","setCurrentUser","isLoading","setIsLoading","navigate","changeAuth","prevState","userInfo","JSON","parse","localStorage","getItem"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/contexts/authentication-context.js"],"sourcesContent":["import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthenticationContext = createContext();\n\nexport const useAuthentication = () => useContext(AuthenticationContext);\n\nexport const AuthenticationProvider = ({ children }) => {\n  const [activeAuth, setActiveAuth] = useState('login');\n  const [currentUser, setCurrentUser] = useState(null);\n  // May want to include different states for whether the sign in or the registration is loading...but fine for now\n  const [isLoading, setIsLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const changeAuth = () =>\n    setActiveAuth(prevState => (prevState === 'login' ? 'register' : 'login'));\n\n  // Something like this, I am not sure if this works 100% but still nonetheless we can clean this up later when we get to it. Then we should also be working on the sign in component which should not be all that bad either\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    if (userInfo) {\n      setIsLoading(true);\n      setCurrentUser(userInfo);\n    }\n    if (!userInfo) navigate('/');\n  }, [navigate]);\n\n  return (\n    <AuthenticationContext.Provider\n      value={{\n        activeAuth,\n        changeAuth,\n        currentUser,\n        setCurrentUser,\n        isLoading,\n        setIsLoading,\n      }}\n    >\n      {children}\n    </AuthenticationContext.Provider>\n  );\n};\n"],"mappings":";;;;AAAA,SACEA,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,qBAAqB,gBAAGN,aAAa,EAA3C;AAEA,OAAO,MAAMO,iBAAiB,GAAG;EAAA;;EAAA,OAAML,UAAU,CAACI,qBAAD,CAAhB;AAAA,CAA1B;;GAAMC,iB;;AAEb,OAAO,MAAMC,sBAAsB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACtD,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,OAAD,CAA5C;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C,CAFsD,CAGtD;;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAMY,QAAQ,GAAGX,WAAW,EAA5B;;EAEA,MAAMY,UAAU,GAAG,MACjBN,aAAa,CAACO,SAAS,IAAKA,SAAS,KAAK,OAAd,GAAwB,UAAxB,GAAqC,OAApD,CADf,CARsD,CAWtD;;;EAEAf,SAAS,CAAC,MAAM;IACd,MAAMgB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;;IACA,IAAIJ,QAAJ,EAAc;MACZJ,YAAY,CAAC,IAAD,CAAZ;MACAF,cAAc,CAACM,QAAD,CAAd;IACD;;IACD,IAAI,CAACA,QAAL,EAAeH,QAAQ,CAAC,GAAD,CAAR;EAChB,CAPQ,EAON,CAACA,QAAD,CAPM,CAAT;EASA,oBACE,QAAC,qBAAD,CAAuB,QAAvB;IACE,KAAK,EAAE;MACLN,UADK;MAELO,UAFK;MAGLL,WAHK;MAILC,cAJK;MAKLC,SALK;MAMLC;IANK,CADT;IAAA,UAUGN;EAVH;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CApCM;;IAAMD,sB;UAMMH,W;;;KANNG,sB"},"metadata":{},"sourceType":"module"}