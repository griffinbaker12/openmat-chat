{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/toast/toast.component.styles.jsx\";\nimport './toast.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOAST_TYPE = {\n  success: 'success',\n  failure: 'failure'\n};\n\nconst Toast = _ref => {\n  let {\n    message,\n    type\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast-container ${type}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-symbol-container\",\n      children: type === TOAST_TYPE.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-success-symbol\",\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-failure-symbol\",\n        children: \"\\u2613\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-text-container\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Toast;\nexport default Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"names":["TOAST_TYPE","success","failure","Toast","message","type"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/toast/toast.component.styles.jsx"],"sourcesContent":["import './toast.styles.scss';\n\nexport const TOAST_TYPE = {\n  success: 'success',\n  failure: 'failure',\n};\n\nconst Toast = ({ message, type }) => {\n  return (\n    <div className={`toast-container ${type}`}>\n      <div className=\"toast-symbol-container\">\n        {type === TOAST_TYPE.success ? (\n          <div className=\"toast-success-symbol\">&#x2713;</div>\n        ) : (\n          <div className=\"toast-failure-symbol\">&#x2613;</div>\n        )}\n        {/* <div>&#x2613;</div> */}\n      </div>\n      <div className=\"toast-text-container\">{message}</div>\n    </div>\n  );\n};\n\nexport default Toast;\n"],"mappings":";AAAA,OAAO,qBAAP;;AAEA,OAAO,MAAMA,UAAU,GAAG;EACxBC,OAAO,EAAE,SADe;EAExBC,OAAO,EAAE;AAFe,CAAnB;;AAKP,MAAMC,KAAK,GAAG,QAAuB;EAAA,IAAtB;IAAEC,OAAF;IAAWC;EAAX,CAAsB;EACnC,oBACE;IAAK,SAAS,EAAG,mBAAkBA,IAAK,EAAxC;IAAA,wBACE;MAAK,SAAS,EAAC,wBAAf;MAAA,UACGA,IAAI,KAAKL,UAAU,CAACC,OAApB,gBACC;QAAK,SAAS,EAAC,sBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,gBAGC;QAAK,SAAS,EAAC,sBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAJJ;MAAA;MAAA;MAAA;IAAA,QADF,eASE;MAAK,SAAS,EAAC,sBAAf;MAAA,UAAuCG;IAAvC;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAdD;;KAAMD,K;AAgBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}