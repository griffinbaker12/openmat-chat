{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/message-view/message-view.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useConversations } from '../../contexts/conversations-context';\nimport './message-view.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageView = () => {\n  _s();\n\n  // Somehow we are going to have to get all of the message in a conversation potentially and then mark whether or not they are your messages or someone else's to style accordingly;\n  const {\n    currentConversation,\n    activeConversation\n  } = useConversations();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-view-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-view-text-container\",\n      children: activeConversation.map(conversation => conversation.messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-view-text\",\n        children: message\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageView, \"mOd3gAJXICku1CSojOHwAO++tQY=\", false, function () {\n  return [useConversations];\n});\n\n_c = MessageView;\nexport default MessageView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageView\");","map":{"version":3,"names":["useConversations","MessageView","currentConversation","activeConversation","map","conversation","messages","message","i"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/message-view/message-view.component.jsx"],"sourcesContent":["import { useConversations } from '../../contexts/conversations-context';\nimport './message-view.styles.scss';\n\nconst MessageView = () => {\n  // Somehow we are going to have to get all of the message in a conversation potentially and then mark whether or not they are your messages or someone else's to style accordingly;\n  const { currentConversation, activeConversation } = useConversations();\n\n  return (\n    <div className=\"message-view-container\">\n      <div className=\"message-view-text-container\">\n        {activeConversation.map(conversation =>\n          conversation.messages.map((message, i) => (\n            <div key={i} className=\"message-view-text\">\n              {message}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MessageView;\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,sCAAjC;AACA,OAAO,4BAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB;EACA,MAAM;IAAEC,mBAAF;IAAuBC;EAAvB,IAA8CH,gBAAgB,EAApE;EAEA,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAA,uBACE;MAAK,SAAS,EAAC,6BAAf;MAAA,UACGG,kBAAkB,CAACC,GAAnB,CAAuBC,YAAY,IAClCA,YAAY,CAACC,QAAb,CAAsBF,GAAtB,CAA0B,CAACG,OAAD,EAAUC,CAAV,kBACxB;QAAa,SAAS,EAAC,mBAAvB;QAAA,UACGD;MADH,GAAUC,CAAV;QAAA;QAAA;QAAA;MAAA,QADF,CADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAjBD;;GAAMP,W;UAEgDD,gB;;;KAFhDC,W;AAmBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}