{"ast":null,"code":"import _slicedToArray from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{toast}from'react-toastify';export var generateChatNameForSoloChats=function generateChatNameForSoloChats(users,currentUser){return users.filter(function(user){return user._id!==currentUser._id;})[0].name;};export var TOAST_TYPE={success:'success',error:'error'};export var defaultToast=function defaultToast(type,message){if(type===TOAST_TYPE.success){toast.success(message,{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});}else{toast.error(message,{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});}};export var getMutualFriends=function getMutualFriends(friendOneArr,friendTwoArr){var count=0;friendOneArr.forEach(function(friendOne){friendTwoArr.forEach(function(friendTwo){if(friendOne.userName===friendTwo.userName){count++;}});});return count;};export var areFriends=function areFriends(user1,user2){return user1.friends.some(function(friend){return friend.userName===user2.userName;});};export var userSent=function userSent(currentUser,message){return currentUser._id===message.sender._id;};export var sameSenderAndNotCurrentUser=function sameSenderAndNotCurrentUser(i,messages,currentUser){return i+1<messages.length&&messages[i].sender._id===messages[i+1].sender._id&&currentUser._id!==messages[i].sender._id;};export var getTyperString=function getTyperString(typers){if(typers.length===1)return typers[0]+' is typing';if(typers.length===2)return typers[0]+typers[1]+' are typing';if(typers.length===3)return typers.slice(0,2).join(', ').concat(\" and \".concat(typers.at(-1),\" are typing\"));else return typers.slice(0,2).join(', ').concat(\" and \".concat(typers.length-2,\" others are typing\"));};export var getUsersOnlineCount=function getUsersOnlineCount(onlineUsers,chatUsers,currentUser){var count=0;onlineUsers.forEach(function(onlineUser){var _onlineUser=_slicedToArray(onlineUser,2),userId=_onlineUser[1];if(userId===currentUser._id)return;chatUsers.forEach(function(chatUser){if(userId===chatUser._id){count++;}});// if (user !== currentUser._id) {\n//   count++;\n// }\n});// console.log('count from utils', count);\nreturn count;};","map":{"version":3,"names":["toast","generateChatNameForSoloChats","users","currentUser","filter","user","_id","name","TOAST_TYPE","success","error","defaultToast","type","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","getMutualFriends","friendOneArr","friendTwoArr","count","forEach","friendOne","friendTwo","userName","areFriends","user1","user2","friends","some","friend","userSent","sender","sameSenderAndNotCurrentUser","i","messages","length","getTyperString","typers","slice","join","concat","at","getUsersOnlineCount","onlineUsers","chatUsers","onlineUser","userId","chatUser"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/utils/utils.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\nexport const generateChatNameForSoloChats = (users, currentUser) => {\n  return users.filter(user => user._id !== currentUser._id)[0].name;\n};\n\nexport const TOAST_TYPE = {\n  success: 'success',\n  error: 'error',\n};\n\nexport const defaultToast = (type, message) => {\n  if (type === TOAST_TYPE.success) {\n    toast.success(message, {\n      position: 'bottom-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark',\n    });\n  } else {\n    toast.error(message, {\n      position: 'bottom-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark',\n    });\n  }\n};\n\nexport const getMutualFriends = (friendOneArr, friendTwoArr) => {\n  let count = 0;\n  friendOneArr.forEach(friendOne => {\n    friendTwoArr.forEach(friendTwo => {\n      if (friendOne.userName === friendTwo.userName) {\n        count++;\n      }\n    });\n  });\n  return count;\n};\n\nexport const areFriends = (user1, user2) => {\n  return user1.friends.some(friend => friend.userName === user2.userName);\n};\n\nexport const userSent = (currentUser, message) =>\n  currentUser._id === message.sender._id;\n\nexport const sameSenderAndNotCurrentUser = (i, messages, currentUser) => {\n  return (\n    i + 1 < messages.length &&\n    messages[i].sender._id === messages[i + 1].sender._id &&\n    currentUser._id !== messages[i].sender._id\n  );\n};\n\nexport const getTyperString = typers => {\n  if (typers.length === 1) return typers[0] + ' is typing';\n  if (typers.length === 2) return typers[0] + typers[1] + ' are typing';\n  if (typers.length === 3)\n    return typers\n      .slice(0, 2)\n      .join(', ')\n      .concat(` and ${typers.at(-1)} are typing`);\n  else\n    return typers\n      .slice(0, 2)\n      .join(', ')\n      .concat(` and ${typers.length - 2} others are typing`);\n};\n\nexport const getUsersOnlineCount = (onlineUsers, chatUsers, currentUser) => {\n  let count = 0;\n  onlineUsers.forEach(onlineUser => {\n    const [, userId] = onlineUser;\n    if (userId === currentUser._id) return;\n    chatUsers.forEach(chatUser => {\n      if (userId === chatUser._id) {\n        count++;\n      }\n    });\n    // if (user !== currentUser._id) {\n    //   count++;\n    // }\n  });\n  // console.log('count from utils', count);\n  return count;\n};\n"],"mappings":"yIAAA,OAASA,KAAT,KAAsB,gBAAtB,CAEA,MAAO,IAAMC,6BAA4B,CAAG,QAA/BA,6BAA+B,CAACC,KAAD,CAAQC,WAAR,CAAwB,CAClE,MAAOD,MAAK,CAACE,MAAN,CAAa,SAAAC,IAAI,QAAIA,KAAI,CAACC,GAAL,GAAaH,WAAW,CAACG,GAA7B,EAAjB,EAAmD,CAAnD,EAAsDC,IAA7D,CACD,CAFM,CAIP,MAAO,IAAMC,WAAU,CAAG,CACxBC,OAAO,CAAE,SADe,CAExBC,KAAK,CAAE,OAFiB,CAAnB,CAKP,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,IAAD,CAAOC,OAAP,CAAmB,CAC7C,GAAID,IAAI,GAAKJ,UAAU,CAACC,OAAxB,CAAiC,CAC/BT,KAAK,CAACS,OAAN,CAAcI,OAAd,CAAuB,CACrBC,QAAQ,CAAE,eADW,CAErBC,SAAS,CAAE,IAFU,CAGrBC,eAAe,CAAE,KAHI,CAIrBC,YAAY,CAAE,IAJO,CAKrBC,YAAY,CAAE,IALO,CAMrBC,SAAS,CAAE,IANU,CAOrBC,QAAQ,CAAEC,SAPW,CAQrBC,KAAK,CAAE,MARc,CAAvB,EAUD,CAXD,IAWO,CACLtB,KAAK,CAACU,KAAN,CAAYG,OAAZ,CAAqB,CACnBC,QAAQ,CAAE,eADS,CAEnBC,SAAS,CAAE,IAFQ,CAGnBC,eAAe,CAAE,KAHE,CAInBC,YAAY,CAAE,IAJK,CAKnBC,YAAY,CAAE,IALK,CAMnBC,SAAS,CAAE,IANQ,CAOnBC,QAAQ,CAAEC,SAPS,CAQnBC,KAAK,CAAE,MARY,CAArB,EAUD,CACF,CAxBM,CA0BP,MAAO,IAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,YAAD,CAAeC,YAAf,CAAgC,CAC9D,GAAIC,MAAK,CAAG,CAAZ,CACAF,YAAY,CAACG,OAAb,CAAqB,SAAAC,SAAS,CAAI,CAChCH,YAAY,CAACE,OAAb,CAAqB,SAAAE,SAAS,CAAI,CAChC,GAAID,SAAS,CAACE,QAAV,GAAuBD,SAAS,CAACC,QAArC,CAA+C,CAC7CJ,KAAK,GACN,CACF,CAJD,EAKD,CAND,EAOA,MAAOA,MAAP,CACD,CAVM,CAYP,MAAO,IAAMK,WAAU,CAAG,QAAbA,WAAa,CAACC,KAAD,CAAQC,KAAR,CAAkB,CAC1C,MAAOD,MAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,SAAAC,MAAM,QAAIA,OAAM,CAACN,QAAP,GAAoBG,KAAK,CAACH,QAA9B,EAAzB,CAAP,CACD,CAFM,CAIP,MAAO,IAAMO,SAAQ,CAAG,QAAXA,SAAW,CAAClC,WAAD,CAAcU,OAAd,QACtBV,YAAW,CAACG,GAAZ,GAAoBO,OAAO,CAACyB,MAAR,CAAehC,GADb,EAAjB,CAGP,MAAO,IAAMiC,4BAA2B,CAAG,QAA9BA,4BAA8B,CAACC,CAAD,CAAIC,QAAJ,CAActC,WAAd,CAA8B,CACvE,MACEqC,EAAC,CAAG,CAAJ,CAAQC,QAAQ,CAACC,MAAjB,EACAD,QAAQ,CAACD,CAAD,CAAR,CAAYF,MAAZ,CAAmBhC,GAAnB,GAA2BmC,QAAQ,CAACD,CAAC,CAAG,CAAL,CAAR,CAAgBF,MAAhB,CAAuBhC,GADlD,EAEAH,WAAW,CAACG,GAAZ,GAAoBmC,QAAQ,CAACD,CAAD,CAAR,CAAYF,MAAZ,CAAmBhC,GAHzC,CAKD,CANM,CAQP,MAAO,IAAMqC,eAAc,CAAG,QAAjBA,eAAiB,CAAAC,MAAM,CAAI,CACtC,GAAIA,MAAM,CAACF,MAAP,GAAkB,CAAtB,CAAyB,MAAOE,OAAM,CAAC,CAAD,CAAN,CAAY,YAAnB,CACzB,GAAIA,MAAM,CAACF,MAAP,GAAkB,CAAtB,CAAyB,MAAOE,OAAM,CAAC,CAAD,CAAN,CAAYA,MAAM,CAAC,CAAD,CAAlB,CAAwB,aAA/B,CACzB,GAAIA,MAAM,CAACF,MAAP,GAAkB,CAAtB,CACE,MAAOE,OAAM,CACVC,KADI,CACE,CADF,CACK,CADL,EAEJC,IAFI,CAEC,IAFD,EAGJC,MAHI,gBAGWH,MAAM,CAACI,EAAP,CAAU,CAAC,CAAX,CAHX,gBAAP,CADF,IAME,OAAOJ,OAAM,CACVC,KADI,CACE,CADF,CACK,CADL,EAEJC,IAFI,CAEC,IAFD,EAGJC,MAHI,gBAGWH,MAAM,CAACF,MAAP,CAAgB,CAH3B,uBAAP,CAIH,CAbM,CAeP,MAAO,IAAMO,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACC,WAAD,CAAcC,SAAd,CAAyBhD,WAAzB,CAAyC,CAC1E,GAAIuB,MAAK,CAAG,CAAZ,CACAwB,WAAW,CAACvB,OAAZ,CAAoB,SAAAyB,UAAU,CAAI,CAChC,+BAAmBA,UAAnB,IAASC,MAAT,gBACA,GAAIA,MAAM,GAAKlD,WAAW,CAACG,GAA3B,CAAgC,OAChC6C,SAAS,CAACxB,OAAV,CAAkB,SAAA2B,QAAQ,CAAI,CAC5B,GAAID,MAAM,GAAKC,QAAQ,CAAChD,GAAxB,CAA6B,CAC3BoB,KAAK,GACN,CACF,CAJD,EAKA;AACA;AACA;AACD,CAXD,EAYA;AACA,MAAOA,MAAP,CACD,CAhBM"},"metadata":{},"sourceType":"module"}