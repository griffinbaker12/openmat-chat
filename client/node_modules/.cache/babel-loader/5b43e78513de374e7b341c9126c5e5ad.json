{"ast":null,"code":"import _regeneratorRuntime from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useContext,useEffect,useState,useCallback}from'react';import{useAuthentication}from'./authentication-context';import{toast}from'react-toastify';import{useNavigate}from'react-router-dom';// import { useSocket } from './socket-context';\nimport{jsx as _jsx}from\"react/jsx-runtime\";var ChatViewContext=/*#__PURE__*/createContext();export var useChatView=function useChatView(){return useContext(ChatViewContext);};export var SIDEBAR_CATEGORY_TYPE={conversations:'conversations',friends:'friends'};export var MODAL_TYPE={sidebar:'sidebar',chatInfo:'chatInfo',userInfo:'userInfo'};export var ChatViewProvider=function ChatViewProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),activeChat=_useState2[0],setActiveChat=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isChatViewLoading=_useState6[0],setIsChatViewLoading=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),searchResults=_useState8[0],setSearchResults=_useState8[1];var _useState9=useState(SIDEBAR_CATEGORY_TYPE.conversations),_useState10=_slicedToArray(_useState9,2),sideBarCategory=_useState10[0],setSideBarCategory=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showModal=_useState12[0],setShowModal=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showAddUserInfoDropdown=_useState14[0],setShowAddUserInfoDropdown=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),modalType=_useState16[0],setModalType=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),chats=_useState18[0],setChats=_useState18[1];var _useState19=useState(null),_useState20=_slicedToArray(_useState19,2),activeUserInfo=_useState20[0],setActiveUserInfo=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),isActiveUserCurrentUser=_useState22[0],setIsActiveUserCurrentUser=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),showActiveUserWithinChatInfo=_useState24[0],setShowActiveUserWithinChatInfo=_useState24[1];var _useState25=useState('chat'),_useState26=_slicedToArray(_useState25,2),activeView=_useState26[0],setActiveView=_useState26[1];var _useState27=useState({height:window.innerHeight,width:window.innerWidth}),_useState28=_slicedToArray(_useState27,2),windowDimensions=_useState28[0],setWindowDimensions=_useState28[1];var _useState29=useState([]),_useState30=_slicedToArray(_useState29,2),notifications=_useState30[0],setNotifications=_useState30[1];var _useState31=useState([]),_useState32=_slicedToArray(_useState31,2),unreadMessages=_useState32[0],setUnreadMessages=_useState32[1];var _useAuthentication=useAuthentication(),currentUser=_useAuthentication.currentUser,setCurrentUser=_useAuthentication.setCurrentUser,setIsLoading=_useAuthentication.setIsLoading;var navigate=useNavigate();var closeModal=function closeModal(){if(showAddUserInfoDropdown){setShowAddUserInfoDropdown(false);return;}setShowModal(false);};var setUserInfoModal=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id){var currentUserFlag,response,user,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:currentUserFlag=_args.length>1&&_args[1]!==undefined?_args[1]:null;if(!currentUserFlag){_context.next=6;break;}setActiveUserInfo(currentUser);setIsActiveUserCurrentUser(true);setShowActiveUserWithinChatInfo(true);return _context.abrupt(\"return\");case 6:_context.next=8;return fetch(\"http://localhost:4000/api/user/getUserInfo?id=\".concat(id),{method:'get',headers:{Authorization:\"Bearer \".concat(currentUser.token)}});case 8:response=_context.sent;_context.next=11;return response.json();case 11:user=_context.sent;setActiveUserInfo(user);case 13:case\"end\":return _context.stop();}}},_callee);}));return function setUserInfoModal(_x){return _ref2.apply(this,arguments);};}();var updateSearchValue=function updateSearchValue(e){return setSearch(e.target.value);};var fetchChats=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var tokenForLogin,userData,response,data,_args2=arguments;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:tokenForLogin=_args2.length>0&&_args2[0]!==undefined?_args2[0]:null;userData=_args2.length>1&&_args2[1]!==undefined?_args2[1]:null;setIsChatViewLoading(true);setIsLoading(true);_context2.prev=4;_context2.next=7;return fetch(\"http://localhost:4000/api/chat\",{method:'get',headers:{Authorization:\"Bearer \".concat(tokenForLogin||currentUser.token)}});case 7:response=_context2.sent;_context2.next=10;return response.json();case 10:data=_context2.sent;console.log('data',data);setIsChatViewLoading(false);setIsLoading(false);setChats(data);if(tokenForLogin){navigate('/chat');toast.success('Login success',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});setCurrentUser(userData);}_context2.next=22;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](4);setIsChatViewLoading(false);toast.error('Error fetching chats',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});case 22:case\"end\":return _context2.stop();}}},_callee2,null,[[4,18]]);})),[currentUser,navigate,setIsLoading,setCurrentUser]);var fetchNotifications=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var tokenForLogin,response,_notifications,_args3=arguments;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:tokenForLogin=_args3.length>0&&_args3[0]!==undefined?_args3[0]:null;_context3.prev=1;_context3.next=4;return fetch(\"http://localhost:4000/api/notification\",{method:'get',headers:{Authorization:\"Bearer \".concat(tokenForLogin||currentUser.token)}});case 4:response=_context3.sent;_context3.next=7;return response.json();case 7:_notifications=_context3.sent;console.log(_notifications);setNotifications(_notifications);_context3.next=15;break;case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](1);toast.error('Error fetching notifications',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});case 15:case\"end\":return _context3.stop();}}},_callee3,null,[[1,12]]);})),[currentUser]);var handleModal=function handleModal(modalType){setModalType(modalType);setShowModal(true);};var handleSearchSubmit=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e){var response,_yield$response$json,messages,users;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:e.preventDefault();if(search){_context4.next=3;break;}return _context4.abrupt(\"return\");case 3:_context4.prev=3;_context4.next=6;return fetch(\"http://localhost:4000/api/user?search=\".concat(search),{method:'get',headers:{Authorization:\"Bearer \".concat(currentUser.token)}});case 6:response=_context4.sent;_context4.next=9;return response.json();case 9:_yield$response$json=_context4.sent;messages=_yield$response$json.messages;users=_yield$response$json.users;// setIsChatViewLoading(false);\nsetSearchResults([{messages:messages,users:users}]);_context4.next=18;break;case 15:_context4.prev=15;_context4.t0=_context4[\"catch\"](3);toast.error('Error fetching results',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});case 18:case\"end\":return _context4.stop();}}},_callee4,null,[[3,15]]);}));return function handleSearchSubmit(_x2){return _ref5.apply(this,arguments);};}();// Fetch the chats once, and then otherwise just add the chats to the data, don't need to re-fetch or anything like that. Could keep this here or do something where you only fetch the chats and the friends once the user is actually signed in. That could also be a route where you just find these two things\nuseEffect(function(){if(!currentUser){setChats([]);setActiveChat([]);return;}if(currentUser._id){fetchChats();fetchNotifications();}return;},[currentUser,fetchChats,setIsLoading,fetchNotifications]);return/*#__PURE__*/_jsx(ChatViewContext.Provider,{value:{activeChat:activeChat,setActiveChat:setActiveChat,handleModal:handleModal,closeModal:closeModal,handleSearchSubmit:handleSearchSubmit,updateSearchValue:updateSearchValue,chats:chats,setChats:setChats,showModal:showModal,setSideBarCategory:setSideBarCategory,sideBarCategory:sideBarCategory,modalType:modalType,fetchChats:fetchChats,setShowModal:setShowModal,showAddUserInfoDropdown:showAddUserInfoDropdown,setShowAddUserInfoDropdown:setShowAddUserInfoDropdown,setUserInfoModal:setUserInfoModal,activeUserInfo:activeUserInfo,isActiveUserCurrentUser:isActiveUserCurrentUser,setIsActiveUserCurrentUser:setIsActiveUserCurrentUser,showActiveUserWithinChatInfo:showActiveUserWithinChatInfo,setShowActiveUserWithinChatInfo:setShowActiveUserWithinChatInfo,setActiveUserInfo:setActiveUserInfo,isChatViewLoading:isChatViewLoading,activeView:activeView,setActiveView:setActiveView,windowDimensions:windowDimensions,notifications:notifications,setNotifications:setNotifications,setWindowDimensions:setWindowDimensions,fetchNotifications:fetchNotifications,unreadMessages:unreadMessages,setUnreadMessages:setUnreadMessages,searchResults:searchResults},children:children});};","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useCallback","useAuthentication","toast","useNavigate","ChatViewContext","useChatView","SIDEBAR_CATEGORY_TYPE","conversations","friends","MODAL_TYPE","sidebar","chatInfo","userInfo","ChatViewProvider","children","activeChat","setActiveChat","search","setSearch","isChatViewLoading","setIsChatViewLoading","searchResults","setSearchResults","sideBarCategory","setSideBarCategory","showModal","setShowModal","showAddUserInfoDropdown","setShowAddUserInfoDropdown","modalType","setModalType","chats","setChats","activeUserInfo","setActiveUserInfo","isActiveUserCurrentUser","setIsActiveUserCurrentUser","showActiveUserWithinChatInfo","setShowActiveUserWithinChatInfo","activeView","setActiveView","height","window","innerHeight","width","innerWidth","windowDimensions","setWindowDimensions","notifications","setNotifications","unreadMessages","setUnreadMessages","currentUser","setCurrentUser","setIsLoading","navigate","closeModal","setUserInfoModal","id","currentUserFlag","fetch","method","headers","Authorization","token","response","json","user","updateSearchValue","e","target","value","fetchChats","tokenForLogin","userData","data","console","log","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","fetchNotifications","handleModal","handleSearchSubmit","preventDefault","messages","users","_id"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/contexts/chat-view-context.js"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\nimport { useAuthentication } from './authentication-context';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n// import { useSocket } from './socket-context';\n\nconst ChatViewContext = createContext();\n\nexport const useChatView = () => useContext(ChatViewContext);\n\nexport const SIDEBAR_CATEGORY_TYPE = {\n  conversations: 'conversations',\n  friends: 'friends',\n};\n\nexport const MODAL_TYPE = {\n  sidebar: 'sidebar',\n  chatInfo: 'chatInfo',\n  userInfo: 'userInfo',\n};\n\nexport const ChatViewProvider = ({ children }) => {\n  const [activeChat, setActiveChat] = useState([]);\n  const [search, setSearch] = useState('');\n  const [isChatViewLoading, setIsChatViewLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [sideBarCategory, setSideBarCategory] = useState(\n    SIDEBAR_CATEGORY_TYPE.conversations\n  );\n  const [showModal, setShowModal] = useState(false);\n  const [showAddUserInfoDropdown, setShowAddUserInfoDropdown] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [chats, setChats] = useState([]);\n  const [activeUserInfo, setActiveUserInfo] = useState(null);\n  const [isActiveUserCurrentUser, setIsActiveUserCurrentUser] = useState(false);\n  const [showActiveUserWithinChatInfo, setShowActiveUserWithinChatInfo] =\n    useState(false);\n  const [activeView, setActiveView] = useState('chat');\n  const [windowDimensions, setWindowDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n  const [notifications, setNotifications] = useState([]);\n  const [unreadMessages, setUnreadMessages] = useState([]);\n\n  const { currentUser, setCurrentUser, setIsLoading } = useAuthentication();\n  const navigate = useNavigate();\n\n  const closeModal = () => {\n    if (showAddUserInfoDropdown) {\n      setShowAddUserInfoDropdown(false);\n      return;\n    }\n    setShowModal(false);\n  };\n\n  const setUserInfoModal = async (id, currentUserFlag = null) => {\n    if (currentUserFlag) {\n      setActiveUserInfo(currentUser);\n      setIsActiveUserCurrentUser(true);\n      setShowActiveUserWithinChatInfo(true);\n      return;\n    }\n    const response = await fetch(\n      `http://localhost:4000/api/user/getUserInfo?id=${id}`,\n      {\n        method: 'get',\n        headers: { Authorization: `Bearer ${currentUser.token}` },\n      }\n    );\n    const user = await response.json();\n    setActiveUserInfo(user);\n  };\n\n  const updateSearchValue = e => setSearch(e.target.value);\n\n  const fetchChats = useCallback(\n    async (tokenForLogin = null, userData = null) => {\n      setIsChatViewLoading(true);\n      setIsLoading(true);\n      try {\n        const response = await fetch(`http://localhost:4000/api/chat`, {\n          method: 'get',\n          headers: {\n            Authorization: `Bearer ${tokenForLogin || currentUser.token}`,\n          },\n        });\n        const data = await response.json();\n        console.log('data', data);\n        setIsChatViewLoading(false);\n        setIsLoading(false);\n        setChats(data);\n        if (tokenForLogin) {\n          navigate('/chat');\n          toast.success('Login success', {\n            position: 'bottom-center',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          });\n          setCurrentUser(userData);\n        }\n      } catch (e) {\n        setIsChatViewLoading(false);\n        toast.error('Error fetching chats', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      }\n    },\n    [currentUser, navigate, setIsLoading, setCurrentUser]\n  );\n\n  const fetchNotifications = useCallback(\n    async (tokenForLogin = null) => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/notification`, {\n          method: 'get',\n          headers: {\n            Authorization: `Bearer ${tokenForLogin || currentUser.token}`,\n          },\n        });\n        const notifications = await response.json();\n        console.log(notifications);\n        setNotifications(notifications);\n      } catch (error) {\n        toast.error('Error fetching notifications', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      }\n    },\n    [currentUser]\n  );\n\n  const handleModal = modalType => {\n    setModalType(modalType);\n    setShowModal(true);\n  };\n\n  const handleSearchSubmit = async e => {\n    e.preventDefault();\n    if (!search) return;\n\n    try {\n      // setIsChatViewLoading(true);\n\n      // I almost like the feature where you keep the search text there so that you know what you searched, and then once you hit the x then the results unfilter and are based off of the time the last message was sent\n      // setSearch('');\n\n      const response = await fetch(\n        `http://localhost:4000/api/user?search=${search}`,\n        {\n          method: 'get',\n          headers: { Authorization: `Bearer ${currentUser.token}` },\n        }\n      );\n      const { messages, users } = await response.json();\n      // setIsChatViewLoading(false);\n      setSearchResults([{ messages, users }]);\n    } catch (e) {\n      toast.error('Error fetching results', {\n        position: 'bottom-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n    }\n  };\n\n  // Fetch the chats once, and then otherwise just add the chats to the data, don't need to re-fetch or anything like that. Could keep this here or do something where you only fetch the chats and the friends once the user is actually signed in. That could also be a route where you just find these two things\n\n  useEffect(() => {\n    if (!currentUser) {\n      setChats([]);\n      setActiveChat([]);\n      return;\n    }\n    if (currentUser._id) {\n      fetchChats();\n      fetchNotifications();\n    }\n    return;\n  }, [currentUser, fetchChats, setIsLoading, fetchNotifications]);\n\n  return (\n    <ChatViewContext.Provider\n      value={{\n        activeChat,\n        setActiveChat,\n        handleModal,\n        closeModal,\n        handleSearchSubmit,\n        updateSearchValue,\n        chats,\n        setChats,\n        showModal,\n        setSideBarCategory,\n        sideBarCategory,\n        modalType,\n        fetchChats,\n        setShowModal,\n        showAddUserInfoDropdown,\n        setShowAddUserInfoDropdown,\n        setUserInfoModal,\n        activeUserInfo,\n        isActiveUserCurrentUser,\n        setIsActiveUserCurrentUser,\n        showActiveUserWithinChatInfo,\n        setShowActiveUserWithinChatInfo,\n        setActiveUserInfo,\n        isChatViewLoading,\n        activeView,\n        setActiveView,\n        windowDimensions,\n        notifications,\n        setNotifications,\n        setWindowDimensions,\n        fetchNotifications,\n        unreadMessages,\n        setUnreadMessages,\n        searchResults,\n      }}\n    >\n      {children}\n    </ChatViewContext.Provider>\n  );\n};\n"],"mappings":"2aAAA,OACEA,aADF,CAEEC,UAFF,CAGEC,SAHF,CAIEC,QAJF,CAKEC,WALF,KAMO,OANP,CAOA,OAASC,iBAAT,KAAkC,0BAAlC,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA;2CAEA,GAAMC,gBAAe,cAAGR,aAAa,EAArC,CAEA,MAAO,IAAMS,YAAW,CAAG,QAAdA,YAAc,SAAMR,WAAU,CAACO,eAAD,CAAhB,EAApB,CAEP,MAAO,IAAME,sBAAqB,CAAG,CACnCC,aAAa,CAAE,eADoB,CAEnCC,OAAO,CAAE,SAF0B,CAA9B,CAKP,MAAO,IAAMC,WAAU,CAAG,CACxBC,OAAO,CAAE,SADe,CAExBC,QAAQ,CAAE,UAFc,CAGxBC,QAAQ,CAAE,UAHc,CAAnB,CAMP,MAAO,IAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,MAAkB,IAAfC,SAAe,MAAfA,QAAe,CAChD,cAAoCf,QAAQ,CAAC,EAAD,CAA5C,wCAAOgB,UAAP,eAAmBC,aAAnB,eACA,eAA4BjB,QAAQ,CAAC,EAAD,CAApC,yCAAOkB,MAAP,eAAeC,SAAf,eACA,eAAkDnB,QAAQ,CAAC,KAAD,CAA1D,yCAAOoB,iBAAP,eAA0BC,oBAA1B,eACA,eAA0CrB,QAAQ,CAAC,EAAD,CAAlD,yCAAOsB,aAAP,eAAsBC,gBAAtB,eACA,eAA8CvB,QAAQ,CACpDO,qBAAqB,CAACC,aAD8B,CAAtD,0CAAOgB,eAAP,gBAAwBC,kBAAxB,gBAGA,gBAAkCzB,QAAQ,CAAC,KAAD,CAA1C,2CAAO0B,SAAP,gBAAkBC,YAAlB,gBACA,gBAA8D3B,QAAQ,CAAC,KAAD,CAAtE,2CAAO4B,uBAAP,gBAAgCC,0BAAhC,gBACA,gBAAkC7B,QAAQ,CAAC,EAAD,CAA1C,2CAAO8B,SAAP,gBAAkBC,YAAlB,gBACA,gBAA0B/B,QAAQ,CAAC,EAAD,CAAlC,2CAAOgC,KAAP,gBAAcC,QAAd,gBACA,gBAA4CjC,QAAQ,CAAC,IAAD,CAApD,2CAAOkC,cAAP,gBAAuBC,iBAAvB,gBACA,gBAA8DnC,QAAQ,CAAC,KAAD,CAAtE,2CAAOoC,uBAAP,gBAAgCC,0BAAhC,gBACA,gBACErC,QAAQ,CAAC,KAAD,CADV,2CAAOsC,4BAAP,gBAAqCC,+BAArC,gBAEA,gBAAoCvC,QAAQ,CAAC,MAAD,CAA5C,2CAAOwC,UAAP,gBAAmBC,aAAnB,gBACA,gBAAgDzC,QAAQ,CAAC,CACvD0C,MAAM,CAAEC,MAAM,CAACC,WADwC,CAEvDC,KAAK,CAAEF,MAAM,CAACG,UAFyC,CAAD,CAAxD,2CAAOC,gBAAP,gBAAyBC,mBAAzB,gBAIA,gBAA0ChD,QAAQ,CAAC,EAAD,CAAlD,2CAAOiD,aAAP,gBAAsBC,gBAAtB,gBACA,gBAA4ClD,QAAQ,CAAC,EAAD,CAApD,2CAAOmD,cAAP,gBAAuBC,iBAAvB,gBAEA,uBAAsDlD,iBAAiB,EAAvE,CAAQmD,WAAR,oBAAQA,WAAR,CAAqBC,cAArB,oBAAqBA,cAArB,CAAqCC,YAArC,oBAAqCA,YAArC,CACA,GAAMC,SAAQ,CAAGpD,WAAW,EAA5B,CAEA,GAAMqD,WAAU,CAAG,QAAbA,WAAa,EAAM,CACvB,GAAI7B,uBAAJ,CAA6B,CAC3BC,0BAA0B,CAAC,KAAD,CAA1B,CACA,OACD,CACDF,YAAY,CAAC,KAAD,CAAZ,CACD,CAND,CAQA,GAAM+B,iBAAgB,6FAAG,iBAAOC,EAAP,sKAAWC,eAAX,+CAA6B,IAA7B,KACnBA,eADmB,yBAErBzB,iBAAiB,CAACkB,WAAD,CAAjB,CACAhB,0BAA0B,CAAC,IAAD,CAA1B,CACAE,+BAA+B,CAAC,IAAD,CAA/B,CAJqB,8DAOAsB,MAAK,yDACuBF,EADvB,EAE1B,CACEG,MAAM,CAAE,KADV,CAEEC,OAAO,CAAE,CAAEC,aAAa,kBAAYX,WAAW,CAACY,KAAxB,CAAf,CAFX,CAF0B,CAPL,QAOjBC,QAPiB,sCAcJA,SAAQ,CAACC,IAAT,EAdI,SAcjBC,IAdiB,eAevBjC,iBAAiB,CAACiC,IAAD,CAAjB,CAfuB,uDAAH,kBAAhBV,iBAAgB,6CAAtB,CAkBA,GAAMW,kBAAiB,CAAG,QAApBA,kBAAoB,CAAAC,CAAC,QAAInD,UAAS,CAACmD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,EAA3B,CAEA,GAAMC,WAAU,CAAGxE,WAAW,wEAC5B,oMAAOyE,aAAP,kDAAuB,IAAvB,CAA6BC,QAA7B,kDAAwC,IAAxC,CACEtD,oBAAoB,CAAC,IAAD,CAApB,CACAkC,YAAY,CAAC,IAAD,CAAZ,CAFF,wCAI2BM,MAAK,kCAAmC,CAC7DC,MAAM,CAAE,KADqD,CAE7DC,OAAO,CAAE,CACPC,aAAa,kBAAYU,aAAa,EAAIrB,WAAW,CAACY,KAAzC,CADN,CAFoD,CAAnC,CAJhC,QAIUC,QAJV,wCAUuBA,SAAQ,CAACC,IAAT,EAVvB,SAUUS,IAVV,gBAWIC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBF,IAApB,EACAvD,oBAAoB,CAAC,KAAD,CAApB,CACAkC,YAAY,CAAC,KAAD,CAAZ,CACAtB,QAAQ,CAAC2C,IAAD,CAAR,CACA,GAAIF,aAAJ,CAAmB,CACjBlB,QAAQ,CAAC,OAAD,CAAR,CACArD,KAAK,CAAC4E,OAAN,CAAc,eAAd,CAA+B,CAC7BC,QAAQ,CAAE,eADmB,CAE7BC,SAAS,CAAE,IAFkB,CAG7BC,eAAe,CAAE,KAHY,CAI7BC,YAAY,CAAE,IAJe,CAK7BC,YAAY,CAAE,IALe,CAM7BC,SAAS,CAAE,IANkB,CAO7BC,QAAQ,CAAEC,SAPmB,CAQ7BC,KAAK,CAAE,MARsB,CAA/B,EAUAlC,cAAc,CAACqB,QAAD,CAAd,CACD,CA5BL,qFA8BItD,oBAAoB,CAAC,KAAD,CAApB,CACAlB,KAAK,CAACsF,KAAN,CAAY,sBAAZ,CAAoC,CAClCT,QAAQ,CAAE,eADwB,CAElCC,SAAS,CAAE,IAFuB,CAGlCC,eAAe,CAAE,KAHiB,CAIlCC,YAAY,CAAE,IAJoB,CAKlCC,YAAY,CAAE,IALoB,CAMlCC,SAAS,CAAE,IANuB,CAOlCC,QAAQ,CAAEC,SAPwB,CAQlCC,KAAK,CAAE,MAR2B,CAApC,EA/BJ,uEAD4B,GA4C5B,CAACnC,WAAD,CAAcG,QAAd,CAAwBD,YAAxB,CAAsCD,cAAtC,CA5C4B,CAA9B,CA+CA,GAAMoC,mBAAkB,CAAGzF,WAAW,wEACpC,qMAAOyE,aAAP,kDAAuB,IAAvB,yCAE2Bb,MAAK,0CAA2C,CACrEC,MAAM,CAAE,KAD6D,CAErEC,OAAO,CAAE,CACPC,aAAa,kBAAYU,aAAa,EAAIrB,WAAW,CAACY,KAAzC,CADN,CAF4D,CAA3C,CAFhC,QAEUC,QAFV,uCAQgCA,SAAQ,CAACC,IAAT,EARhC,QAQUlB,cARV,gBASI4B,OAAO,CAACC,GAAR,CAAY7B,cAAZ,EACAC,gBAAgB,CAACD,cAAD,CAAhB,CAVJ,qFAYI9C,KAAK,CAACsF,KAAN,CAAY,8BAAZ,CAA4C,CAC1CT,QAAQ,CAAE,eADgC,CAE1CC,SAAS,CAAE,IAF+B,CAG1CC,eAAe,CAAE,KAHyB,CAI1CC,YAAY,CAAE,IAJ4B,CAK1CC,YAAY,CAAE,IAL4B,CAM1CC,SAAS,CAAE,IAN+B,CAO1CC,QAAQ,CAAEC,SAPgC,CAQ1CC,KAAK,CAAE,MARmC,CAA5C,EAZJ,uEADoC,GAyBpC,CAACnC,WAAD,CAzBoC,CAAtC,CA4BA,GAAMsC,YAAW,CAAG,QAAdA,YAAc,CAAA7D,SAAS,CAAI,CAC/BC,YAAY,CAACD,SAAD,CAAZ,CACAH,YAAY,CAAC,IAAD,CAAZ,CACD,CAHD,CAKA,GAAMiE,mBAAkB,6FAAG,kBAAMtB,CAAN,yKACzBA,CAAC,CAACuB,cAAF,GADyB,GAEpB3E,MAFoB,2GAUA2C,MAAK,iDACe3C,MADf,EAE1B,CACE4C,MAAM,CAAE,KADV,CAEEC,OAAO,CAAE,CAAEC,aAAa,kBAAYX,WAAW,CAACY,KAAxB,CAAf,CAFX,CAF0B,CAVL,QAUjBC,QAViB,uCAiBWA,SAAQ,CAACC,IAAT,EAjBX,4CAiBf2B,QAjBe,sBAiBfA,QAjBe,CAiBLC,KAjBK,sBAiBLA,KAjBK,CAkBvB;AACAxE,gBAAgB,CAAC,CAAC,CAAEuE,QAAQ,CAARA,QAAF,CAAYC,KAAK,CAALA,KAAZ,CAAD,CAAD,CAAhB,CAnBuB,qFAqBvB5F,KAAK,CAACsF,KAAN,CAAY,wBAAZ,CAAsC,CACpCT,QAAQ,CAAE,eAD0B,CAEpCC,SAAS,CAAE,IAFyB,CAGpCC,eAAe,CAAE,KAHmB,CAIpCC,YAAY,CAAE,IAJsB,CAKpCC,YAAY,CAAE,IALsB,CAMpCC,SAAS,CAAE,IANyB,CAOpCC,QAAQ,CAAEC,SAP0B,CAQpCC,KAAK,CAAE,MAR6B,CAAtC,EArBuB,uEAAH,kBAAlBI,mBAAkB,8CAAxB,CAkCA;AAEA7F,SAAS,CAAC,UAAM,CACd,GAAI,CAACsD,WAAL,CAAkB,CAChBpB,QAAQ,CAAC,EAAD,CAAR,CACAhB,aAAa,CAAC,EAAD,CAAb,CACA,OACD,CACD,GAAIoC,WAAW,CAAC2C,GAAhB,CAAqB,CACnBvB,UAAU,GACViB,kBAAkB,GACnB,CACD,OACD,CAXQ,CAWN,CAACrC,WAAD,CAAcoB,UAAd,CAA0BlB,YAA1B,CAAwCmC,kBAAxC,CAXM,CAAT,CAaA,mBACE,KAAC,eAAD,CAAiB,QAAjB,EACE,KAAK,CAAE,CACL1E,UAAU,CAAVA,UADK,CAELC,aAAa,CAAbA,aAFK,CAGL0E,WAAW,CAAXA,WAHK,CAILlC,UAAU,CAAVA,UAJK,CAKLmC,kBAAkB,CAAlBA,kBALK,CAMLvB,iBAAiB,CAAjBA,iBANK,CAOLrC,KAAK,CAALA,KAPK,CAQLC,QAAQ,CAARA,QARK,CASLP,SAAS,CAATA,SATK,CAULD,kBAAkB,CAAlBA,kBAVK,CAWLD,eAAe,CAAfA,eAXK,CAYLM,SAAS,CAATA,SAZK,CAaL2C,UAAU,CAAVA,UAbK,CAcL9C,YAAY,CAAZA,YAdK,CAeLC,uBAAuB,CAAvBA,uBAfK,CAgBLC,0BAA0B,CAA1BA,0BAhBK,CAiBL6B,gBAAgB,CAAhBA,gBAjBK,CAkBLxB,cAAc,CAAdA,cAlBK,CAmBLE,uBAAuB,CAAvBA,uBAnBK,CAoBLC,0BAA0B,CAA1BA,0BApBK,CAqBLC,4BAA4B,CAA5BA,4BArBK,CAsBLC,+BAA+B,CAA/BA,+BAtBK,CAuBLJ,iBAAiB,CAAjBA,iBAvBK,CAwBLf,iBAAiB,CAAjBA,iBAxBK,CAyBLoB,UAAU,CAAVA,UAzBK,CA0BLC,aAAa,CAAbA,aA1BK,CA2BLM,gBAAgB,CAAhBA,gBA3BK,CA4BLE,aAAa,CAAbA,aA5BK,CA6BLC,gBAAgB,CAAhBA,gBA7BK,CA8BLF,mBAAmB,CAAnBA,mBA9BK,CA+BL0C,kBAAkB,CAAlBA,kBA/BK,CAgCLvC,cAAc,CAAdA,cAhCK,CAiCLC,iBAAiB,CAAjBA,iBAjCK,CAkCL9B,aAAa,CAAbA,aAlCK,CADT,UAsCGP,QAtCH,EADF,CA0CD,CAlOM"},"metadata":{},"sourceType":"module"}