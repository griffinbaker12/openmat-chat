{"ast":null,"code":"import _regeneratorRuntime from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _defineProperty from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from'react';import{useNavigate}from'react-router-dom';import{useAuthentication}from'../../contexts/authentication-context';import Spinner from'../spinner/spinner.component';import{toast}from'react-toastify';import'./register.styles.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Register=function Register(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),picCloudUrl=_useState2[0],setPicCloudUrl=_useState2[1];var _useState3=useState({name:'',email:'',userName:'',password:''}),_useState4=_slicedToArray(_useState3,2),text=_useState4[0],setText=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),userNameUnique=_useState6[0],setUserNameUnique=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isUserNameResultShowing=_useState8[0],setIsUserNameResultShowing=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isPicLoading=_useState10[0],setIsPicLoading=_useState10[1];var navigate=useNavigate();// General idea here as I surmise is that you render this toast container component that is a vertical flex of a bunch of different toasts that may pop up and then you handle which ones you render and when, which type, text, etc...\n// const [toastType, setToastType] = useState();\nvar _useAuthentication=useAuthentication(),changeAuth=_useAuthentication.changeAuth,setCurrentUser=_useAuthentication.setCurrentUser,isLoading=_useAuthentication.isLoading,setIsLoading=_useAuthentication.setIsLoading;var hiddenInputRef=useRef();var handleRegistration=function handleRegistration(){// If the user does not submit all of the details, then could display a toast telling them to do so.\nif(!text.name||!text.email||!text.password){toast.error('Please enter all fields',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});return;}// Could make a separate is loading for the component as a whole\nsetIsLoading(true);fetch('http://localhost:4000/api/user',{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:text.email,password:text.password,name:text.name,userName:text.userName,picture:picCloudUrl})}).then(function(res){return res.json();}).then(function(data){setCurrentUser(data);// Until we and if we use redux with the persisted state, but otherwise we can just check to see if there is a current user\nlocalStorage.setItem('userInfo',JSON.stringify(data));setIsLoading(false);navigate('/chat');toast.success('Registration successful',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});// Here you would render the toast saying that the registration was a success\n// Using chakra ui for something like this would be much easier; else would require you to implement logic on the success state of various different requests and then render the toast accordingly\n}).catch(function(err){setIsLoading(false);toast.error('Error registering the user',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});});// Definitely room here as well for showing a toast icon that will pop up when the user either is or is not successful in signing up and for what reason. For that reason alone and how clean it is it makes me want to use chakra ui.\n};var handleChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var name,userName,response,exists;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:name=e.target.getAttribute('name');setText(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},name,e.target.value));});if(!(name!=='userName')){_context.next=4;break;}return _context.abrupt(\"return\");case 4:userName=e.target.value;if(!(userName==='')){_context.next=8;break;}setIsUserNameResultShowing(false);return _context.abrupt(\"return\");case 8:_context.prev=8;_context.next=11;return fetch(\"http://localhost:4000/api/user/validateUserName\",{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify({userName:userName})});case 11:response=_context.sent;_context.next=14;return response.json();case 14:exists=_context.sent;setUserNameUnique(!exists);setIsUserNameResultShowing(true);_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](8);toast.error('Error validating username',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});case 22:case\"end\":return _context.stop();}}},_callee,null,[[8,19]]);}));return function handleChange(_x){return _ref.apply(this,arguments);};}();var handleFileInputChange=function handleFileInputChange(e){var picture=e.target.files[0];if(e.target.files){postImageDetails(picture);}else return;};var handleImageUpload=function handleImageUpload(){hiddenInputRef.current.click();};var postImageDetails=function postImageDetails(picture){setIsPicLoading(true);if(!picture){setIsPicLoading(false);return;}var data=new FormData();data.append('file',picture);data.append('upload_preset','chat-app');fetch('https://api.cloudinary.com/v1_1/dhogrpl6c/image/upload',{method:'post',body:data}).then(function(res){return res.json();}).then(function(data){setPicCloudUrl(data.url.toString());setIsPicLoading(false);toast.success('Profile picture upload successful',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});}).catch(function(err){setIsPicLoading(false);toast.success('Error uploading profile picture',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});});};return/*#__PURE__*/_jsx(\"article\",{className:\"register-article\",children:/*#__PURE__*/_jsx(\"main\",{className:\"register-main\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"register-measure\",children:[/*#__PURE__*/_jsxs(\"fieldset\",{className:\"register-fieldset\",children:[/*#__PURE__*/_jsx(\"legend\",{className:\"register-legend\",children:\"Register\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-legend-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"register-legend-label\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleChange,className:\"register-legend-input\",type:\"text\",name:\"name\",id:\"name\",required:true,value:text.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-legend-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"register-legend-label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleChange,className:\"register-legend-input\",type:\"email\",name:\"email\",id:\"email\",required:true,value:text.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-legend-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"userName\",className:\"register-legend-label\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleChange,className:\"register-legend-input\",type:\"text\",name:\"userName\",id:\"userName\",required:true,value:text.userName}),isUserNameResultShowing&&/*#__PURE__*/_jsx(\"div\",{className:\"username-checkmark-container \".concat(userNameUnique?'available':'not-available'),children:userNameUnique?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"username-indicator\",style:{fontSize:'20px'},children:\"\\u2713\"}),/*#__PURE__*/_jsx(\"span\",{className:\"username-response-text\",children:\"Username is available\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"username-indicator\",children:\"\\u2715\"}),/*#__PURE__*/_jsx(\"span\",{className:\"username-response-text\",children:\"Username not available\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-legend-input-container \".concat(isUserNameResultShowing?'username-showing':''),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"register-legend-label\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleChange,className:\"register-legend-input\",type:\"password\",name:\"password\",id:\"password\",required:true,value:text.password})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-legend-input-container-file\",children:[/*#__PURE__*/_jsx(\"input\",{ref:hiddenInputRef,type:\"file\",accept:\"image/jpeg, image/png\",id:\"profile-picture\",onChange:handleFileInputChange,hidden:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleImageUpload,type:\"button\",id:\"profile-picture-button\",children:isPicLoading?/*#__PURE__*/_jsx(Spinner,{}):'Select Profile Picture Image'}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-picture-text-container\",children:/*#__PURE__*/_jsx(\"span\",{id:\"profile-picture-text\",children:picCloudUrl?/*#__PURE__*/_jsx(\"img\",{src:picCloudUrl,alt:\"profile\",style:{height:'80px',width:'auto',marginTop:'5px'}}):'No image uploaded yet'})})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"register-input\",type:\"button\",onClick:handleRegistration,children:isLoading?/*#__PURE__*/_jsx(Spinner,{}):'Sign Up'}),/*#__PURE__*/_jsx(\"p\",{onClick:changeAuth,className:\"sign-in-text\",children:\"Back to Sign In\"})]})})});};export default Register;","map":{"version":3,"names":["useRef","useState","useNavigate","useAuthentication","Spinner","toast","Register","picCloudUrl","setPicCloudUrl","name","email","userName","password","text","setText","userNameUnique","setUserNameUnique","isUserNameResultShowing","setIsUserNameResultShowing","isPicLoading","setIsPicLoading","navigate","changeAuth","setCurrentUser","isLoading","setIsLoading","hiddenInputRef","handleRegistration","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","fetch","method","headers","body","JSON","stringify","picture","then","res","json","data","localStorage","setItem","success","catch","err","handleChange","e","target","getAttribute","prevState","value","response","exists","handleFileInputChange","files","postImageDetails","handleImageUpload","current","click","FormData","append","url","toString","fontSize","height","width","marginTop"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/register/register.component.jsx"],"sourcesContent":["import { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport Spinner from '../spinner/spinner.component';\nimport { toast } from 'react-toastify';\nimport './register.styles.scss';\n\nconst Register = () => {\n  const [picCloudUrl, setPicCloudUrl] = useState();\n  const [text, setText] = useState({\n    name: '',\n    email: '',\n    userName: '',\n    password: '',\n  });\n  const [userNameUnique, setUserNameUnique] = useState();\n  const [isUserNameResultShowing, setIsUserNameResultShowing] = useState(false);\n  const [isPicLoading, setIsPicLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  // General idea here as I surmise is that you render this toast container component that is a vertical flex of a bunch of different toasts that may pop up and then you handle which ones you render and when, which type, text, etc...\n  // const [toastType, setToastType] = useState();\n\n  const { changeAuth, setCurrentUser, isLoading, setIsLoading } =\n    useAuthentication();\n\n  const hiddenInputRef = useRef();\n\n  const handleRegistration = () => {\n    // If the user does not submit all of the details, then could display a toast telling them to do so.\n    if (!text.name || !text.email || !text.password) {\n      toast.error('Please enter all fields', {\n        position: 'bottom-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n      return;\n    }\n    // Could make a separate is loading for the component as a whole\n    setIsLoading(true);\n    fetch('http://localhost:4000/api/user', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: text.email,\n        password: text.password,\n        name: text.name,\n        userName: text.userName,\n        picture: picCloudUrl,\n      }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setCurrentUser(data);\n        // Until we and if we use redux with the persisted state, but otherwise we can just check to see if there is a current user\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        setIsLoading(false);\n        navigate('/chat');\n        toast.success('Registration successful', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n        // Here you would render the toast saying that the registration was a success\n\n        // Using chakra ui for something like this would be much easier; else would require you to implement logic on the success state of various different requests and then render the toast accordingly\n      })\n      .catch(err => {\n        setIsLoading(false);\n        toast.error('Error registering the user', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      });\n\n    // Definitely room here as well for showing a toast icon that will pop up when the user either is or is not successful in signing up and for what reason. For that reason alone and how clean it is it makes me want to use chakra ui.\n  };\n\n  const handleChange = async e => {\n    const name = e.target.getAttribute('name');\n    setText(prevState => {\n      return {\n        ...prevState,\n        [name]: e.target.value,\n      };\n    });\n    if (name !== 'userName') return;\n    const userName = e.target.value;\n    if (userName === '') {\n      setIsUserNameResultShowing(false);\n      return;\n    }\n    try {\n      const response = await fetch(\n        `http://localhost:4000/api/user/validateUserName`,\n        {\n          method: 'post',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            userName,\n          }),\n        }\n      );\n      const exists = await response.json();\n      setUserNameUnique(!exists);\n      setIsUserNameResultShowing(true);\n    } catch (error) {\n      toast.error('Error validating username', {\n        position: 'bottom-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n    }\n  };\n\n  const handleFileInputChange = e => {\n    const picture = e.target.files[0];\n    if (e.target.files) {\n      postImageDetails(picture);\n    } else return;\n  };\n\n  const handleImageUpload = () => {\n    hiddenInputRef.current.click();\n  };\n\n  const postImageDetails = picture => {\n    setIsPicLoading(true);\n    if (!picture) {\n      setIsPicLoading(false);\n      return;\n    }\n\n    const data = new FormData();\n    data.append('file', picture);\n    data.append('upload_preset', 'chat-app');\n\n    fetch('https://api.cloudinary.com/v1_1/dhogrpl6c/image/upload', {\n      method: 'post',\n      body: data,\n    })\n      .then(res => res.json())\n      .then(data => {\n        setPicCloudUrl(data.url.toString());\n        setIsPicLoading(false);\n        toast.success('Profile picture upload successful', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      })\n      .catch(err => {\n        setIsPicLoading(false);\n        toast.success('Error uploading profile picture', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      });\n  };\n\n  return (\n    <article className=\"register-article\">\n      <main className=\"register-main\">\n        <div className=\"register-measure\">\n          <fieldset className=\"register-fieldset\">\n            <legend className=\"register-legend\">Register</legend>\n            <div className=\"register-legend-input-container\">\n              <label htmlFor=\"name\" className=\"register-legend-label\">\n                Name\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"register-legend-input\"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                required\n                value={text.name}\n              />\n            </div>\n            <div className=\"register-legend-input-container\">\n              <label htmlFor=\"email\" className=\"register-legend-label\">\n                Email\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"register-legend-input\"\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                required\n                value={text.email}\n              />\n            </div>\n            <div className=\"register-legend-input-container\">\n              <label htmlFor=\"userName\" className=\"register-legend-label\">\n                Username\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"register-legend-input\"\n                type=\"text\"\n                name=\"userName\"\n                id=\"userName\"\n                required\n                value={text.userName}\n              />\n              {isUserNameResultShowing && (\n                <div\n                  className={`username-checkmark-container ${\n                    userNameUnique ? 'available' : 'not-available'\n                  }`}\n                >\n                  {userNameUnique ? (\n                    <>\n                      <span\n                        className=\"username-indicator\"\n                        style={{ fontSize: '20px' }}\n                      >\n                        &#10003;\n                      </span>\n                      <span className=\"username-response-text\">\n                        Username is available\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <span className=\"username-indicator\">&#x2715;</span>\n                      <span className=\"username-response-text\">\n                        Username not available\n                      </span>\n                    </>\n                  )}\n                </div>\n              )}\n            </div>\n            <div\n              className={`register-legend-input-container ${\n                isUserNameResultShowing ? 'username-showing' : ''\n              }`}\n            >\n              <label htmlFor=\"password\" className=\"register-legend-label\">\n                Password\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"register-legend-input\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                required\n                value={text.password}\n              />\n            </div>\n            <div className=\"register-legend-input-container-file\">\n              <input\n                ref={hiddenInputRef}\n                type=\"file\"\n                accept=\"image/jpeg, image/png\"\n                id=\"profile-picture\"\n                onChange={handleFileInputChange}\n                hidden\n              />\n              <button\n                onClick={handleImageUpload}\n                type=\"button\"\n                id=\"profile-picture-button\"\n              >\n                {isPicLoading ? <Spinner /> : 'Select Profile Picture Image'}\n              </button>\n              <div className=\"profile-picture-text-container\">\n                <span id=\"profile-picture-text\">\n                  {picCloudUrl ? (\n                    <img\n                      src={picCloudUrl}\n                      alt=\"profile\"\n                      style={{\n                        height: '80px',\n                        width: 'auto',\n                        marginTop: '5px',\n                      }}\n                    />\n                  ) : (\n                    'No image uploaded yet'\n                  )}\n                </span>\n              </div>\n            </div>\n          </fieldset>\n          <button\n            className=\"register-input\"\n            type=\"button\"\n            onClick={handleRegistration}\n          >\n            {isLoading ? <Spinner /> : 'Sign Up'}\n          </button>\n          <p onClick={changeAuth} className=\"sign-in-text\">\n            Back to Sign In\n          </p>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}