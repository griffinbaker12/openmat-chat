{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/App.js\";\nimport { useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport ApplicationView from './components/application-view/application-view.component';\nimport Header from './components/header/header.component';\nimport { ContactsProvider } from './contexts/contacts-context';\nimport { ConversationsProvider } from './contexts/conversations-context';\nimport { SocketProvider } from './contexts/socket-context'; // Obviously need to change and update this when a user actually signs in\n// In the real world, this variable will just be updated and set as the current user or something like that and we can receive that when the user signs in and we receive their username! Nice and easy. So then the entire application has access to the current user.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentUser = 'griffinbaker12';\n\nfunction App() {\n  // useEffect(() => {\n  //   const socket = io();\n  // }, []);\n  // To include the id in the socket provider once we get DB hooked up\n  return /*#__PURE__*/_jsxDEV(SocketProvider, {\n    children: /*#__PURE__*/_jsxDEV(ContactsProvider, {\n      children: /*#__PURE__*/_jsxDEV(ConversationsProvider, {\n        userName: currentUser,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ApplicationView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","io","ApplicationView","Header","ContactsProvider","ConversationsProvider","SocketProvider","currentUser","App","display","flexDirection"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport ApplicationView from './components/application-view/application-view.component';\nimport Header from './components/header/header.component';\nimport { ContactsProvider } from './contexts/contacts-context';\nimport { ConversationsProvider } from './contexts/conversations-context';\nimport { SocketProvider } from './contexts/socket-context';\n\n// Obviously need to change and update this when a user actually signs in\n// In the real world, this variable will just be updated and set as the current user or something like that and we can receive that when the user signs in and we receive their username! Nice and easy. So then the entire application has access to the current user.\nconst currentUser = 'griffinbaker12';\n\nfunction App() {\n  // useEffect(() => {\n  //   const socket = io();\n  // }, []);\n\n  // To include the id in the socket provider once we get DB hooked up\n\n  return (\n    <SocketProvider>\n      <ContactsProvider>\n        <ConversationsProvider userName={currentUser}>\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <Header />\n            <ApplicationView />\n            {/* \n      <Login/>\n    */}\n          </div>\n        </ConversationsProvider>\n      </ContactsProvider>\n    </SocketProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,0DAA5B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,cAAT,QAA+B,2BAA/B,C,CAEA;AACA;;;AACA,MAAMC,WAAW,GAAG,gBAApB;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EAEA;EAEA,oBACE,QAAC,cAAD;IAAA,uBACE,QAAC,gBAAD;MAAA,uBACE,QAAC,qBAAD;QAAuB,QAAQ,EAAED,WAAjC;QAAA,uBACE;UAAK,KAAK,EAAE;YAAEE,OAAO,EAAE,MAAX;YAAmBC,aAAa,EAAE;UAAlC,CAAZ;UAAA,wBACE,QAAC,MAAD;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,eAAD;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;KAtBQF,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}