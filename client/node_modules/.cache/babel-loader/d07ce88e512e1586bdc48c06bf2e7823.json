{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/add-user-dropdown/add-user-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect, useRef } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { TOAST_TYPE, defaultToast } from '../../utils/utils';\nimport SearchResult, { SEARCH_RESULT_TYPE } from '../search-result/search-result-component';\nimport './add-user-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUserDropdown = _ref => {\n  _s();\n\n  let {\n    showAddUserDropdown,\n    setShowAddUserdropdown\n  } = _ref;\n  const [userSearchText, setUserSearchText] = useState('');\n  const [userSearchResults, setUserSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    currentUser\n  } = useAuthentication();\n  const {\n    activeChat,\n    fetchChats\n  } = useChatView();\n\n  const handleKeyChange = async e => {\n    if (e.code !== 'Enter') return;\n\n    if (!userSearchText) {\n      setUserSearchResults([]);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:4000/api/user?search=${query}`, {\n        method: 'get',\n        headers: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n      const {\n        users\n      } = await response.json();\n      const usersNotAlreadyInChat = users.filter(returnedUser => {\n        return !activeChat[0].users.some(chatUser => returnedUser.userName === chatUser.userName);\n      });\n      setIsLoading(false);\n      setUserSearchResults(usersNotAlreadyInChat); // May also want to filter these by who is not in the curent chat, or could do this on the back end as well but may not be the right nove there, but could jsut incluce a little flag to hanle on the BE\n    } catch (e) {\n      defaultToast(TOAST_TYPE.error, 'User already exists in chat');\n    }\n  };\n\n  const handleTextChange = e => setUserSearchText(e.target.value);\n\n  const handleAddUser = async e => {\n    const closestContainer = e.target.closest('.add-user-to-existing-chat-container');\n    const selectedId = closestContainer.getAttribute('name');\n    const alreadyExists = activeChat[0].users.some(user => user._id === selectedId);\n\n    if (alreadyExists) {\n      defaultToast(TOAST_TYPE.failure, 'Error adding user');\n      return;\n    }\n\n    const response = await fetch('http://localhost:4000/api/chat/addUserToChat', {\n      method: 'put',\n      headers: {\n        Authorization: `Bearer ${currentUser.token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        chatId: activeChat[0]._id,\n        userId: selectedId\n      })\n    });\n    const newChat = await response.json();\n    fetchChats(); // setChatParticipants(prevState => [...prevState, selectedUser]);\n    // setFormInput(prevState => ({ ...prevState, name: '' }));\n  };\n\n  const handleLeaveChat = e => {// Here Ia m going to need to see who the current user is and then send them to the backend and then I guess just refetch the chats? Is that what he does just to reset everything? I guess that make sure the whole state is current\n  }; // const addUserInputRef = useRef();\n  // const handleKeyDown = e => {\n  //   console.log('hello?');\n  // };\n  // useEffect(() => {\n  //   if (!addUserInputRef.current) return;\n  //   const keypress = new Event('keydown', {\n  //     bubbles: true,\n  //     cancelable: true,\n  //     keycode: 32,\n  //     which: 32,\n  //   });\n  //   addUserInputRef.current.focus();\n  //   addUserInputRef.current.dispatchEvent(keypress);\n  // }, [showAddUserDropdown]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-user-dropdown-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-user-dropdown-tip bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-user-dropdown-content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onKeyDown: handleKeyChange,\n          type: \"search\",\n          placeholder: \"Search users...\",\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-user-dropdown-results-container\",\n          children: userSearchResults.map((searchResult, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(SearchResult, {\n              type: SEARCH_RESULT_TYPE.addUserToExistingChat,\n              handleAddUser: handleAddUser,\n              searchResult: searchResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUserDropdown, \"fMa680X25JDWpWYUXNn7CWxptCY=\", false, function () {\n  return [useAuthentication, useChatView];\n});\n\n_c = AddUserDropdown;\nexport default AddUserDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserDropdown\");","map":{"version":3,"names":["Fragment","useState","useEffect","useRef","useAuthentication","useChatView","TOAST_TYPE","defaultToast","SearchResult","SEARCH_RESULT_TYPE","AddUserDropdown","showAddUserDropdown","setShowAddUserdropdown","userSearchText","setUserSearchText","userSearchResults","setUserSearchResults","isLoading","setIsLoading","currentUser","activeChat","fetchChats","handleKeyChange","e","code","response","fetch","query","method","headers","Authorization","token","users","json","usersNotAlreadyInChat","filter","returnedUser","some","chatUser","userName","error","handleTextChange","target","value","handleAddUser","closestContainer","closest","selectedId","getAttribute","alreadyExists","user","_id","failure","body","JSON","stringify","chatId","userId","newChat","handleLeaveChat","map","searchResult","i","addUserToExistingChat"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/add-user-dropdown/add-user-dropdown.component.jsx"],"sourcesContent":["import { Fragment, useState, useEffect, useRef } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { TOAST_TYPE, defaultToast } from '../../utils/utils';\nimport SearchResult, {\n  SEARCH_RESULT_TYPE,\n} from '../search-result/search-result-component';\nimport './add-user-dropdown.styles.scss';\n\nconst AddUserDropdown = ({ showAddUserDropdown, setShowAddUserdropdown }) => {\n  const [userSearchText, setUserSearchText] = useState('');\n  const [userSearchResults, setUserSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { currentUser } = useAuthentication();\n  const { activeChat, fetchChats } = useChatView();\n\n  const handleKeyChange = async e => {\n    if (e.code !== 'Enter') return;\n    if (!userSearchText) {\n      setUserSearchResults([]);\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        `http://localhost:4000/api/user?search=${query}`,\n        {\n          method: 'get',\n          headers: { Authorization: `Bearer ${currentUser.token}` },\n        }\n      );\n      const { users } = await response.json();\n\n      const usersNotAlreadyInChat = users.filter(returnedUser => {\n        return !activeChat[0].users.some(\n          chatUser => returnedUser.userName === chatUser.userName\n        );\n      });\n\n      setIsLoading(false);\n\n      setUserSearchResults(usersNotAlreadyInChat);\n\n      // May also want to filter these by who is not in the curent chat, or could do this on the back end as well but may not be the right nove there, but could jsut incluce a little flag to hanle on the BE\n    } catch (e) {\n      defaultToast(TOAST_TYPE.error, 'User already exists in chat');\n    }\n  };\n\n  const handleTextChange = e => setUserSearchText(e.target.value);\n\n  const handleAddUser = async e => {\n    const closestContainer = e.target.closest(\n      '.add-user-to-existing-chat-container'\n    );\n    const selectedId = closestContainer.getAttribute('name');\n\n    const alreadyExists = activeChat[0].users.some(\n      user => user._id === selectedId\n    );\n\n    if (alreadyExists) {\n      defaultToast(TOAST_TYPE.failure, 'Error adding user');\n      return;\n    }\n\n    const response = await fetch(\n      'http://localhost:4000/api/chat/addUserToChat',\n      {\n        method: 'put',\n        headers: {\n          Authorization: `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          chatId: activeChat[0]._id,\n          userId: selectedId,\n        }),\n      }\n    );\n    const newChat = await response.json();\n    fetchChats();\n\n    // setChatParticipants(prevState => [...prevState, selectedUser]);\n    // setFormInput(prevState => ({ ...prevState, name: '' }));\n  };\n\n  const handleLeaveChat = e => {\n    // Here Ia m going to need to see who the current user is and then send them to the backend and then I guess just refetch the chats? Is that what he does just to reset everything? I guess that make sure the whole state is current\n  };\n  // const addUserInputRef = useRef();\n\n  // const handleKeyDown = e => {\n  //   console.log('hello?');\n  // };\n\n  // useEffect(() => {\n  //   if (!addUserInputRef.current) return;\n  //   const keypress = new Event('keydown', {\n  //     bubbles: true,\n  //     cancelable: true,\n  //     keycode: 32,\n  //     which: 32,\n  //   });\n  //   addUserInputRef.current.focus();\n  //   addUserInputRef.current.dispatchEvent(keypress);\n  // }, [showAddUserDropdown]);\n\n  return (\n    <div className=\"add-user-dropdown-container\">\n      <div className=\"add-user-dropdown-tip bottom\">\n        <div className=\"add-user-dropdown-content-container\">\n          <input\n            onKeyDown={handleKeyChange}\n            type=\"search\"\n            placeholder=\"Search users...\"\n            onChange={handleTextChange}\n          />\n          <div className=\"add-user-dropdown-results-container\">\n            {userSearchResults.map((searchResult, i) => (\n              <Fragment key={i}>\n                <SearchResult\n                  type={SEARCH_RESULT_TYPE.addUserToExistingChat}\n                  handleAddUser={handleAddUser}\n                  searchResult={searchResult}\n                />\n              </Fragment>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddUserDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}