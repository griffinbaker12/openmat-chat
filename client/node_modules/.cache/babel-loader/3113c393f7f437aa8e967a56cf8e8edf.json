{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/contexts/sidebar-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { useAuthentication } from './authentication-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContext = /*#__PURE__*/createContext();\nexport const useSidebar = () => {\n  _s();\n\n  return useContext(SidebarContext);\n};\n\n_s(useSidebar, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const SIDEBAR_CATEGORY_TYPE = {\n  conversations: 'conversations',\n  friends: 'friends'\n};\nexport const SidebarProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [search, setSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [sideBarCategory, setSideBarCategory] = useState(SIDEBAR_CATEGORY_TYPE.conversations);\n  const [showModal, setShowModal] = useState(false);\n  const {\n    currentUser\n  } = useAuthentication();\n\n  const updateSearchValue = e => setSearch(e.target.value);\n\n  const handleSearchSubmit = async e => {\n    e.preventDefault();\n    console.log('hello');\n    if (!search) return; // Spinner until you get the results, fetch them\n\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:4000/api/user?search=${search}`, {\n        method: 'get',\n        headers: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n      const {\n        messages,\n        users\n      } = await response.json();\n      setSearch('');\n    } catch (e) {\n      console.log(e, 'Failed to load search results');\n    } // Fetch logic\n\n  };\n\n  useEffect(() => {// Fetch depending on the value in the search for both posts and users\n    // fetch('http://localhost:4000/api/user', {\n    //   method: 'post',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({\n    //     email: text.email,\n    //     password: text.password,\n    //     name: text.name,\n    //     picture: picCloudUrl,\n    //   }),\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      search,\n      updateSearchValue,\n      isLoading,\n      searchResults,\n      sideBarCategory,\n      setSideBarCategory,\n      setIsLoading,\n      setSearchResults,\n      showModal,\n      setShowModal,\n      handleSearchSubmit\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SidebarProvider, \"Aa4q1X1SH79LRijoGJMTry1gOCA=\", false, function () {\n  return [useAuthentication];\n});\n\n_c = SidebarProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useAuthentication","SidebarContext","useSidebar","SIDEBAR_CATEGORY_TYPE","conversations","friends","SidebarProvider","children","search","setSearch","isLoading","setIsLoading","searchResults","setSearchResults","sideBarCategory","setSideBarCategory","showModal","setShowModal","currentUser","updateSearchValue","e","target","value","handleSearchSubmit","preventDefault","console","log","response","fetch","method","headers","Authorization","token","messages","users","json"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/contexts/sidebar-context.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\nimport { useAuthentication } from './authentication-context';\n\nconst SidebarContext = createContext();\n\nexport const useSidebar = () => useContext(SidebarContext);\n\nexport const SIDEBAR_CATEGORY_TYPE = {\n  conversations: 'conversations',\n  friends: 'friends',\n};\n\nexport const SidebarProvider = ({ children }) => {\n  const [search, setSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [sideBarCategory, setSideBarCategory] = useState(\n    SIDEBAR_CATEGORY_TYPE.conversations\n  );\n  const [showModal, setShowModal] = useState(false);\n  const { currentUser } = useAuthentication();\n\n  const updateSearchValue = e => setSearch(e.target.value);\n\n  const handleSearchSubmit = async e => {\n    e.preventDefault();\n    console.log('hello');\n    if (!search) return;\n\n    // Spinner until you get the results, fetch them\n\n    try {\n      setIsLoading(true);\n\n      const response = await fetch(\n        `http://localhost:4000/api/user?search=${search}`,\n        {\n          method: 'get',\n          headers: { Authorization: `Bearer ${currentUser.token}` },\n        }\n      );\n      const { messages, users } = await response.json();\n\n      setSearch('');\n    } catch (e) {\n      console.log(e, 'Failed to load search results');\n    }\n\n    // Fetch logic\n  };\n\n  useEffect(() => {\n    // Fetch depending on the value in the search for both posts and users\n    // fetch('http://localhost:4000/api/user', {\n    //   method: 'post',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({\n    //     email: text.email,\n    //     password: text.password,\n    //     name: text.name,\n    //     picture: picCloudUrl,\n    //   }),\n  }, [search]);\n\n  return (\n    <SidebarContext.Provider\n      value={{\n        search,\n        updateSearchValue,\n        isLoading,\n        searchResults,\n        sideBarCategory,\n        setSideBarCategory,\n        setIsLoading,\n        setSearchResults,\n        showModal,\n        setShowModal,\n        handleSearchSubmit,\n      }}\n    >\n      {children}\n    </SidebarContext.Provider>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,iBAAT,QAAkC,0BAAlC;;AAEA,MAAMC,cAAc,gBAAGL,aAAa,EAApC;AAEA,OAAO,MAAMM,UAAU,GAAG;EAAA;;EAAA,OAAML,UAAU,CAACI,cAAD,CAAhB;AAAA,CAAnB;;GAAMC,U;;AAEb,OAAO,MAAMC,qBAAqB,GAAG;EACnCC,aAAa,EAAE,eADoB;EAEnCC,OAAO,EAAE;AAF0B,CAA9B;AAKP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CACpDI,qBAAqB,CAACC,aAD8B,CAAtD;EAGA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM;IAAEmB;EAAF,IAAkBlB,iBAAiB,EAAzC;;EAEA,MAAMmB,iBAAiB,GAAGC,CAAC,IAAIX,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC;;EAEA,MAAMC,kBAAkB,GAAG,MAAMH,CAAN,IAAW;IACpCA,CAAC,CAACI,cAAF;IACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;IACA,IAAI,CAAClB,MAAL,EAAa,OAHuB,CAKpC;;IAEA,IAAI;MACFG,YAAY,CAAC,IAAD,CAAZ;MAEA,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CACzB,yCAAwCpB,MAAO,EADtB,EAE1B;QACEqB,MAAM,EAAE,KADV;QAEEC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASb,WAAW,CAACc,KAAM;QAA7C;MAFX,CAF0B,CAA5B;MAOA,MAAM;QAAEC,QAAF;QAAYC;MAAZ,IAAsB,MAAMP,QAAQ,CAACQ,IAAT,EAAlC;MAEA1B,SAAS,CAAC,EAAD,CAAT;IACD,CAbD,CAaE,OAAOW,CAAP,EAAU;MACVK,OAAO,CAACC,GAAR,CAAYN,CAAZ,EAAe,+BAAf;IACD,CAtBmC,CAwBpC;;EACD,CAzBD;;EA2BAtB,SAAS,CAAC,MAAM,CACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAXQ,EAWN,CAACU,MAAD,CAXM,CAAT;EAaA,oBACE,QAAC,cAAD,CAAgB,QAAhB;IACE,KAAK,EAAE;MACLA,MADK;MAELW,iBAFK;MAGLT,SAHK;MAILE,aAJK;MAKLE,eALK;MAMLC,kBANK;MAOLJ,YAPK;MAQLE,gBARK;MASLG,SATK;MAULC,YAVK;MAWLM;IAXK,CADT;IAAA,UAeGhB;EAfH;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAvEM;;IAAMD,e;UAQaN,iB;;;KARbM,e"},"metadata":{},"sourceType":"module"}