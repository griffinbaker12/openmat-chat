{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/notification-dropdown/notification-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useRef, useEffect, useState } from 'react';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport './notification-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    handleDropdown,\n    closeAccountDropdown,\n    closeNotificationDropdown\n  } = _ref;\n  const {\n    notifications\n  } = useChatView();\n  const [groupedNotifications, setGroupedNotifications] = useState([]);\n  const dropDownRef = useRef();\n\n  const handleSignOutClick = e => {\n    if (ref.current === e.target.closest('.header-chat-link')) {\n      return;\n    }\n\n    if (dropDownRef.current && !dropDownRef.current.contains(e.target)) {\n      // console.log(dropDownRef.current);\n      closeNotificationDropdown();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleSignOutClick);\n    return () => document.removeEventListener('mousedown', handleSignOutClick);\n  });\n  useEffect(() => {\n    const notificationsGroupedByChat = {};\n    notifications.forEach(notification => {});\n  }, [notifications]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleSignOutClick,\n    ref: dropDownRef,\n    className: \"notification-dropdown-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown-content-container\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No new notifications!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 72\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}, \"RN9k+FNM99Zr0SAxO933dcQsPnY=\", false, function () {\n  return [useChatView];\n})), \"RN9k+FNM99Zr0SAxO933dcQsPnY=\", false, function () {\n  return [useChatView];\n});\n\n_c2 = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationDropdown$forwardRef\");\n$RefreshReg$(_c2, \"NotificationDropdown\");","map":{"version":3,"names":["forwardRef","useRef","useEffect","useState","useChatView","NotificationDropdown","ref","handleDropdown","closeAccountDropdown","closeNotificationDropdown","notifications","groupedNotifications","setGroupedNotifications","dropDownRef","handleSignOutClick","e","current","target","closest","contains","document","addEventListener","removeEventListener","notificationsGroupedByChat","forEach","notification","length"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/notification-dropdown/notification-dropdown.component.jsx"],"sourcesContent":["import { forwardRef, useRef, useEffect, useState } from 'react';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport './notification-dropdown.styles.scss';\n\nconst NotificationDropdown = forwardRef(\n  (\n    { handleDropdown, closeAccountDropdown, closeNotificationDropdown },\n    ref\n  ) => {\n    const { notifications } = useChatView();\n    const [groupedNotifications, setGroupedNotifications] = useState([]);\n    const dropDownRef = useRef();\n\n    const handleSignOutClick = e => {\n      if (ref.current === e.target.closest('.header-chat-link')) {\n        return;\n      }\n      if (dropDownRef.current && !dropDownRef.current.contains(e.target)) {\n        // console.log(dropDownRef.current);\n        closeNotificationDropdown();\n      }\n    };\n\n    useEffect(() => {\n      document.addEventListener('mousedown', handleSignOutClick);\n      return () =>\n        document.removeEventListener('mousedown', handleSignOutClick);\n    });\n\n    useEffect(() => {\n      const notificationsGroupedByChat = {};\n      notifications.forEach(notification => {});\n    }, [notifications]);\n\n    return (\n      <div\n        onClick={handleSignOutClick}\n        ref={dropDownRef}\n        className=\"notification-dropdown-container\"\n      >\n        <div className=\"notification-dropdown-content-container\">\n          {notifications.length === 0 ? <p>No new notifications!</p> : <p></p>}\n        </div>\n      </div>\n    );\n  }\n);\nexport default NotificationDropdown;\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAO,qCAAP;;;AAEA,MAAMC,oBAAoB,iCAAGL,UAAU,SACrC,OAEEM,GAFF,KAGK;EAAA;;EAAA,IAFH;IAAEC,cAAF;IAAkBC,oBAAlB;IAAwCC;EAAxC,CAEG;EACH,MAAM;IAAEC;EAAF,IAAoBN,WAAW,EAArC;EACA,MAAM,CAACO,oBAAD,EAAuBC,uBAAvB,IAAkDT,QAAQ,CAAC,EAAD,CAAhE;EACA,MAAMU,WAAW,GAAGZ,MAAM,EAA1B;;EAEA,MAAMa,kBAAkB,GAAGC,CAAC,IAAI;IAC9B,IAAIT,GAAG,CAACU,OAAJ,KAAgBD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,mBAAjB,CAApB,EAA2D;MACzD;IACD;;IACD,IAAIL,WAAW,CAACG,OAAZ,IAAuB,CAACH,WAAW,CAACG,OAAZ,CAAoBG,QAApB,CAA6BJ,CAAC,CAACE,MAA/B,CAA5B,EAAoE;MAClE;MACAR,yBAAyB;IAC1B;EACF,CARD;;EAUAP,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,kBAAvC;IACA,OAAO,MACLM,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,kBAA1C,CADF;EAED,CAJQ,CAAT;EAMAZ,SAAS,CAAC,MAAM;IACd,MAAMqB,0BAA0B,GAAG,EAAnC;IACAb,aAAa,CAACc,OAAd,CAAsBC,YAAY,IAAI,CAAE,CAAxC;EACD,CAHQ,EAGN,CAACf,aAAD,CAHM,CAAT;EAKA,oBACE;IACE,OAAO,EAAEI,kBADX;IAEE,GAAG,EAAED,WAFP;IAGE,SAAS,EAAC,iCAHZ;IAAA,uBAKE;MAAK,SAAS,EAAC,yCAAf;MAAA,UACGH,aAAa,CAACgB,MAAd,KAAyB,CAAzB,gBAA6B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA7B,gBAA4D;QAAA;QAAA;QAAA;MAAA;IAD/D;MAAA;MAAA;MAAA;IAAA;EALF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAzCoC;EAAA,QAKTtB,WALS;AAAA,GAAb;EAAA,QAKIA,WALJ;AAAA,EAA1B;;MAAMC,oB;AA2CN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}