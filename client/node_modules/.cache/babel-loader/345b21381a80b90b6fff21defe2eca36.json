{"ast":null,"code":"import _defineProperty from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState,useRef}from'react';import{useAuthentication}from'../../contexts/authentication-context';import Spinner from'../spinner/spinner.component';import{toast}from'react-toastify';import'./login.styles.scss';import{useChatView}from'../../contexts/chat-view-context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var _useState=useState({emailOrUserName:'',password:''}),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var signInButtonRef=useRef();var handleEnterKey=function handleEnterKey(e){if(e.key==='Enter'&&signInButtonRef.current){signInButtonRef.current.click();}return;};useEffect(function(){document.addEventListener('keypress',handleEnterKey);return function(){return document.removeEventListener('keypress',handleEnterKey);};});var _useAuthentication=useAuthentication(),changeAuth=_useAuthentication.changeAuth,isLoading=_useAuthentication.isLoading,setIsLoading=_useAuthentication.setIsLoading;var _useChatView=useChatView(),fetchChats=_useChatView.fetchChats,fetchNotifications=_useChatView.fetchNotifications;var handleLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(text.emailOrUserName){_context.next=3;break;}toast.error('Please enter all fields',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});return _context.abrupt(\"return\");case 3:setIsLoading(true);fetch('http://localhost:4000/api/user/login',{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify({emailOrUserName:text.emailOrUserName,password:text.password})}).then(function(res){return res.json();}).then(function(data){fetchChats(data.token,data);fetchNotifications(data.token);localStorage.setItem('userInfo',JSON.stringify(data));}).catch(function(err){setIsLoading(false);toast.error('Invalid user credentials',{position:'bottom-center',autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:'dark'});});// Definitely room here as well for showing a toast icon that will pop up when the user either is or is not successful in signing up and for what reason. For that reason alone and how clean it is it makes me want to use chakra ui.\n// Same idea here, instead of an alert window, could just render a nice and clean toast icon that will either be on or off depending on the state that you can pass it as a property\ncase 5:case\"end\":return _context.stop();}}},_callee);}));return function handleLogin(){return _ref.apply(this,arguments);};}();var handleChange=function handleChange(e){var name=e.target.getAttribute('name');setText(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},name,e.target.value));});};return/*#__PURE__*/_jsx(\"article\",{className:\"login-article\",children:/*#__PURE__*/_jsx(\"main\",{className:\"login-main\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-measure\",children:[/*#__PURE__*/_jsxs(\"fieldset\",{className:\"login-fieldset\",children:[/*#__PURE__*/_jsx(\"legend\",{className:\"login-legend\",children:\"Sign In\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-legend-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"emailOrUserName\",className:\"login-legend-label\",children:\"Email / Username\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleChange,className:\"login-legend-input\",type:\"text\",name:\"emailOrUserName\",id:\"emailOrUserName\",value:text.email,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-legend-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"login-legend-label\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleChange,className:\"login-legend-input\",type:\"password\",name:\"password\",id:\"password\",value:text.password,required:true})]})]}),/*#__PURE__*/_jsx(\"button\",{ref:signInButtonRef,className:\"login-input\",type:\"button\",onClick:handleLogin,children:isLoading?/*#__PURE__*/_jsx(Spinner,{}):'Sign In'}),/*#__PURE__*/_jsx(\"p\",{onClick:changeAuth,className:\"register-text\",children:\"Register\"})]})})});};export default Login;","map":{"version":3,"names":["useEffect","useState","useRef","useAuthentication","Spinner","toast","useChatView","Login","emailOrUserName","password","text","setText","signInButtonRef","handleEnterKey","e","key","current","click","document","addEventListener","removeEventListener","changeAuth","isLoading","setIsLoading","fetchChats","fetchNotifications","handleLogin","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","fetch","method","headers","body","JSON","stringify","then","res","json","data","token","localStorage","setItem","catch","err","handleChange","name","target","getAttribute","prevState","value","email"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/login/login.component.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport Spinner from '../spinner/spinner.component';\nimport { toast } from 'react-toastify';\nimport './login.styles.scss';\nimport { useChatView } from '../../contexts/chat-view-context';\n\nconst Login = () => {\n  const [text, setText] = useState({ emailOrUserName: '', password: '' });\n  const signInButtonRef = useRef();\n\n  const handleEnterKey = e => {\n    if (e.key === 'Enter' && signInButtonRef.current) {\n      signInButtonRef.current.click();\n    }\n    return;\n  };\n\n  useEffect(() => {\n    document.addEventListener('keypress', handleEnterKey);\n    return () => document.removeEventListener('keypress', handleEnterKey);\n  });\n\n  const { changeAuth, isLoading, setIsLoading } = useAuthentication();\n\n  const { fetchChats, fetchNotifications } = useChatView();\n\n  const handleLogin = async () => {\n    if (!text.emailOrUserName) {\n      toast.error('Please enter all fields', {\n        position: 'bottom-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n      return;\n    }\n    setIsLoading(true);\n    fetch('http://localhost:4000/api/user/login', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        emailOrUserName: text.emailOrUserName,\n        password: text.password,\n      }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        fetchChats(data.token, data);\n        fetchNotifications(data.token);\n        localStorage.setItem('userInfo', JSON.stringify(data));\n      })\n      .catch(err => {\n        setIsLoading(false);\n        toast.error('Invalid user credentials', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      });\n\n    // Definitely room here as well for showing a toast icon that will pop up when the user either is or is not successful in signing up and for what reason. For that reason alone and how clean it is it makes me want to use chakra ui.\n\n    // Same idea here, instead of an alert window, could just render a nice and clean toast icon that will either be on or off depending on the state that you can pass it as a property\n  };\n\n  const handleChange = e => {\n    const name = e.target.getAttribute('name');\n    setText(prevState => {\n      return {\n        ...prevState,\n        [name]: e.target.value,\n      };\n    });\n  };\n\n  return (\n    <article className=\"login-article\">\n      <main className=\"login-main\">\n        <div className=\"login-measure\">\n          <fieldset className=\"login-fieldset\">\n            <legend className=\"login-legend\">Sign In</legend>\n            <div className=\"login-legend-input-container\">\n              <label htmlFor=\"emailOrUserName\" className=\"login-legend-label\">\n                Email / Username\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"login-legend-input\"\n                type=\"text\"\n                name=\"emailOrUserName\"\n                id=\"emailOrUserName\"\n                value={text.email}\n                required\n              />\n            </div>\n            <div className=\"login-legend-input-container\">\n              <label htmlFor=\"password\" className=\"login-legend-label\">\n                Password\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"login-legend-input\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                value={text.password}\n                required\n              />\n            </div>\n          </fieldset>\n          <button\n            ref={signInButtonRef}\n            className=\"login-input\"\n            type=\"button\"\n            onClick={handleLogin}\n          >\n            {isLoading ? <Spinner /> : 'Sign In'}\n          </button>\n          <p onClick={changeAuth} className=\"register-text\">\n            Register\n          </p>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default Login;\n"],"mappings":"8rBAAA,OAASA,SAAT,CAAoBC,QAApB,CAA8BC,MAA9B,KAA4C,OAA5C,CACA,OAASC,iBAAT,KAAkC,uCAAlC,CACA,MAAOC,QAAP,KAAoB,8BAApB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAO,qBAAP,CACA,OAASC,WAAT,KAA4B,kCAA5B,C,wFAEA,GAAMC,MAAK,CAAG,QAARA,MAAQ,EAAM,CAClB,cAAwBN,QAAQ,CAAC,CAAEO,eAAe,CAAE,EAAnB,CAAuBC,QAAQ,CAAE,EAAjC,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eACA,GAAMC,gBAAe,CAAGV,MAAM,EAA9B,CAEA,GAAMW,eAAc,CAAG,QAAjBA,eAAiB,CAAAC,CAAC,CAAI,CAC1B,GAAIA,CAAC,CAACC,GAAF,GAAU,OAAV,EAAqBH,eAAe,CAACI,OAAzC,CAAkD,CAChDJ,eAAe,CAACI,OAAhB,CAAwBC,KAAxB,GACD,CACD,OACD,CALD,CAOAjB,SAAS,CAAC,UAAM,CACdkB,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAsCN,cAAtC,EACA,MAAO,kBAAMK,SAAQ,CAACE,mBAAT,CAA6B,UAA7B,CAAyCP,cAAzC,CAAN,EAAP,CACD,CAHQ,CAAT,CAKA,uBAAgDV,iBAAiB,EAAjE,CAAQkB,UAAR,oBAAQA,UAAR,CAAoBC,SAApB,oBAAoBA,SAApB,CAA+BC,YAA/B,oBAA+BA,YAA/B,CAEA,iBAA2CjB,WAAW,EAAtD,CAAQkB,UAAR,cAAQA,UAAR,CAAoBC,kBAApB,cAAoBA,kBAApB,CAEA,GAAMC,YAAW,4FAAG,wIACbhB,IAAI,CAACF,eADQ,yBAEhBH,KAAK,CAACsB,KAAN,CAAY,yBAAZ,CAAuC,CACrCC,QAAQ,CAAE,eAD2B,CAErCC,SAAS,CAAE,IAF0B,CAGrCC,eAAe,CAAE,KAHoB,CAIrCC,YAAY,CAAE,IAJuB,CAKrCC,YAAY,CAAE,IALuB,CAMrCC,SAAS,CAAE,IAN0B,CAOrCC,QAAQ,CAAEC,SAP2B,CAQrCC,KAAK,CAAE,MAR8B,CAAvC,EAFgB,wCAclBb,YAAY,CAAC,IAAD,CAAZ,CACAc,KAAK,CAAC,sCAAD,CAAyC,CAC5CC,MAAM,CAAE,MADoC,CAE5CC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFmC,CAG5CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBlC,eAAe,CAAEE,IAAI,CAACF,eADH,CAEnBC,QAAQ,CAAEC,IAAI,CAACD,QAFI,CAAf,CAHsC,CAAzC,CAAL,CAQGkC,IARH,CAQQ,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAJ,EAAJ,EARX,EASGF,IATH,CASQ,SAAAG,IAAI,CAAI,CACZtB,UAAU,CAACsB,IAAI,CAACC,KAAN,CAAaD,IAAb,CAAV,CACArB,kBAAkB,CAACqB,IAAI,CAACC,KAAN,CAAlB,CACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCR,IAAI,CAACC,SAAL,CAAeI,IAAf,CAAjC,EACD,CAbH,EAcGI,KAdH,CAcS,SAAAC,GAAG,CAAI,CACZ5B,YAAY,CAAC,KAAD,CAAZ,CACAlB,KAAK,CAACsB,KAAN,CAAY,0BAAZ,CAAwC,CACtCC,QAAQ,CAAE,eAD4B,CAEtCC,SAAS,CAAE,IAF2B,CAGtCC,eAAe,CAAE,KAHqB,CAItCC,YAAY,CAAE,IAJwB,CAKtCC,YAAY,CAAE,IALwB,CAMtCC,SAAS,CAAE,IAN2B,CAOtCC,QAAQ,CAAEC,SAP4B,CAQtCC,KAAK,CAAE,MAR+B,CAAxC,EAUD,CA1BH,EA4BA;AAEA;AA7CkB,sDAAH,kBAAXV,YAAW,0CAAjB,CAgDA,GAAM0B,aAAY,CAAG,QAAfA,aAAe,CAAAtC,CAAC,CAAI,CACxB,GAAMuC,KAAI,CAAGvC,CAAC,CAACwC,MAAF,CAASC,YAAT,CAAsB,MAAtB,CAAb,CACA5C,OAAO,CAAC,SAAA6C,SAAS,CAAI,CACnB,sCACKA,SADL,wBAEGH,IAFH,CAEUvC,CAAC,CAACwC,MAAF,CAASG,KAFnB,GAID,CALM,CAAP,CAMD,CARD,CAUA,mBACE,gBAAS,SAAS,CAAC,eAAnB,uBACE,aAAM,SAAS,CAAC,YAAhB,uBACE,aAAK,SAAS,CAAC,eAAf,wBACE,kBAAU,SAAS,CAAC,gBAApB,wBACE,eAAQ,SAAS,CAAC,cAAlB,qBADF,cAEE,aAAK,SAAS,CAAC,8BAAf,wBACE,cAAO,OAAO,CAAC,iBAAf,CAAiC,SAAS,CAAC,oBAA3C,8BADF,cAIE,cACE,QAAQ,CAAEL,YADZ,CAEE,SAAS,CAAC,oBAFZ,CAGE,IAAI,CAAC,MAHP,CAIE,IAAI,CAAC,iBAJP,CAKE,EAAE,CAAC,iBALL,CAME,KAAK,CAAE1C,IAAI,CAACgD,KANd,CAOE,QAAQ,KAPV,EAJF,GAFF,cAgBE,aAAK,SAAS,CAAC,8BAAf,wBACE,cAAO,OAAO,CAAC,UAAf,CAA0B,SAAS,CAAC,oBAApC,sBADF,cAIE,cACE,QAAQ,CAAEN,YADZ,CAEE,SAAS,CAAC,oBAFZ,CAGE,IAAI,CAAC,UAHP,CAIE,IAAI,CAAC,UAJP,CAKE,EAAE,CAAC,UALL,CAME,KAAK,CAAE1C,IAAI,CAACD,QANd,CAOE,QAAQ,KAPV,EAJF,GAhBF,GADF,cAgCE,eACE,GAAG,CAAEG,eADP,CAEE,SAAS,CAAC,aAFZ,CAGE,IAAI,CAAC,QAHP,CAIE,OAAO,CAAEc,WAJX,UAMGJ,SAAS,cAAG,KAAC,OAAD,IAAH,CAAiB,SAN7B,EAhCF,cAwCE,UAAG,OAAO,CAAED,UAAZ,CAAwB,SAAS,CAAC,eAAlC,sBAxCF,GADF,EADF,EADF,CAkDD,CAhID,CAkIA,cAAed,MAAf"},"metadata":{},"sourceType":"module"}