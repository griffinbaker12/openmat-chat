{"ast":null,"code":"import _regeneratorRuntime from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/griffinbaker/Desktop/chat-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useAuthentication}from'../../contexts/authentication-context';import{useChatView}from'../../contexts/chat-view-context';import'./chat-preview.styles.scss';import{generateChatNameForSoloChats,getUsersOnlineCount,userSent,defaultToast,TOAST_TYPE}from'../../utils/utils';import{useSocket}from'../../contexts/socket-context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ChatPreview=function ChatPreview(){var _useAuthentication=useAuthentication(),currentUser=_useAuthentication.currentUser;var _useChatView=useChatView(),activeChat=_useChatView.activeChat,setActiveChat=_useChatView.setActiveChat,chats=_useChatView.chats,windowDimensions=_useChatView.windowDimensions,setActiveView=_useChatView.setActiveView,setNotifications=_useChatView.setNotifications,notifications=_useChatView.notifications,setUnreadMessages=_useChatView.setUnreadMessages;var _useSocket=useSocket(),onlineUsers=_useSocket.onlineUsers;var handleClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var _activeChat$;var element,chatId,newActiveChat,unreadNotificationsInChat,response,updatedNotifications;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:element=e.target.closest('.chat-preview-list');chatId=element.getAttribute('name');if(!(!chatId||chatId===((_activeChat$=activeChat[0])===null||_activeChat$===void 0?void 0:_activeChat$._id))){_context.next=4;break;}return _context.abrupt(\"return\");case 4:if(windowDimensions.width<=900){setActiveView('chat');}newActiveChat=chats.find(function(chat){return chat._id===chatId;});setActiveChat([newActiveChat]);unreadNotificationsInChat=notifications.filter(function(notification){return notification.chat._id===chatId;});setUnreadMessages(unreadNotificationsInChat);_context.prev=9;_context.next=12;return fetch(\"http://localhost:4000/api/notification/removeNotification\",{method:'post',headers:{Authorization:\"Bearer \".concat(currentUser.token),'Content-Type':'application/json'},body:JSON.stringify({chatId:newActiveChat._id})});case 12:response=_context.sent;_context.next=15;return response.json();case 15:updatedNotifications=_context.sent;setNotifications(updatedNotifications);_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](9);defaultToast(TOAST_TYPE.error,'Error updating notifications');case 22:case\"end\":return _context.stop();}}},_callee,null,[[9,19]]);}));return function handleClick(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"chat-preview-container\",onClick:handleClick,children:chats.length>0&&chats.map(function(_ref2){var _activeChat$2;var _id=_ref2._id,chatName=_ref2.chatName,users=_ref2.users,isGroupChat=_ref2.isGroupChat,latestMessage=_ref2.latestMessage;var userOnlineCount=getUsersOnlineCount(onlineUsers,users,currentUser);var chatHasUnreadMessages=notifications.some(function(notification){return notification.chat._id===_id;});return/*#__PURE__*/_jsxs(\"div\",{name:_id,className:\"chat-preview-list \".concat(_id===((_activeChat$2=activeChat[0])===null||_activeChat$2===void 0?void 0:_activeChat$2._id)?'active':'',\" \").concat(chatHasUnreadMessages?'unread-messages':''),children:[chatHasUnreadMessages?/*#__PURE__*/_jsx(\"div\",{className:\"chat-has-unread-messages-container\"}):'',/*#__PURE__*/_jsxs(\"div\",{className:\"chat-preview-list-item\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"chat-preview-list-name-container\",children:!isGroupChat?generateChatNameForSoloChats(users,currentUser):chatName}),latestMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"chat-preview-list-latest-message-container\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\".concat(userSent(currentUser,latestMessage)?'You':latestMessage.sender.name.split(' ')[0])}),\": \",latestMessage.text]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-preview-list-circle-and-count-container\",children:userOnlineCount>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"online-circle\"}),/*#__PURE__*/_jsx(\"div\",{children:userOnlineCount===1&&!isGroupChat?'Online':\"\".concat(userOnlineCount,\" Online\")})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"offline-circle\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\" \",!isGroupChat?'Offline':\"0 Online\"]})]})})]},_id);})});};export default ChatPreview;","map":{"version":3,"names":["useAuthentication","useChatView","generateChatNameForSoloChats","getUsersOnlineCount","userSent","defaultToast","TOAST_TYPE","useSocket","ChatPreview","currentUser","activeChat","setActiveChat","chats","windowDimensions","setActiveView","setNotifications","notifications","setUnreadMessages","onlineUsers","handleClick","e","element","target","closest","chatId","getAttribute","_id","width","newActiveChat","find","chat","unreadNotificationsInChat","filter","notification","fetch","method","headers","Authorization","token","body","JSON","stringify","response","json","updatedNotifications","error","length","map","chatName","users","isGroupChat","latestMessage","userOnlineCount","chatHasUnreadMessages","some","sender","name","split","text"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-preview/chat-preview.component.jsx"],"sourcesContent":["import { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport './chat-preview.styles.scss';\nimport {\n  generateChatNameForSoloChats,\n  getUsersOnlineCount,\n  userSent,\n  defaultToast,\n  TOAST_TYPE,\n} from '../../utils/utils';\nimport { useSocket } from '../../contexts/socket-context';\n\nconst ChatPreview = () => {\n  const { currentUser } = useAuthentication();\n  const {\n    activeChat,\n    setActiveChat,\n    chats,\n    windowDimensions,\n    setActiveView,\n    setNotifications,\n    notifications,\n    setUnreadMessages,\n  } = useChatView();\n\n  const { onlineUsers } = useSocket();\n\n  const handleClick = async e => {\n    const element = e.target.closest('.chat-preview-list');\n    const chatId = element.getAttribute('name');\n\n    if (!chatId || chatId === activeChat[0]?._id) return;\n\n    if (windowDimensions.width <= 900) {\n      setActiveView('chat');\n    }\n\n    const newActiveChat = chats.find(chat => chat._id === chatId);\n    setActiveChat([newActiveChat]);\n\n    const unreadNotificationsInChat = notifications.filter(\n      notification => notification.chat._id === chatId\n    );\n\n    setUnreadMessages(unreadNotificationsInChat);\n\n    try {\n      const response = await fetch(\n        `http://localhost:4000/api/notification/removeNotification`,\n        {\n          method: 'post',\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            chatId: newActiveChat._id,\n          }),\n        }\n      );\n      const updatedNotifications = await response.json();\n      setNotifications(updatedNotifications);\n    } catch (error) {\n      defaultToast(TOAST_TYPE.error, 'Error updating notifications');\n    }\n  };\n\n  return (\n    <div className=\"chat-preview-container\" onClick={handleClick}>\n      {chats.length > 0 &&\n        chats.map(({ _id, chatName, users, isGroupChat, latestMessage }) => {\n          const userOnlineCount = getUsersOnlineCount(\n            onlineUsers,\n            users,\n            currentUser\n          );\n          const chatHasUnreadMessages = notifications.some(\n            notification => notification.chat._id === _id\n          );\n\n          return (\n            <div\n              key={_id}\n              name={_id}\n              className={`chat-preview-list ${\n                _id === activeChat[0]?._id ? 'active' : ''\n              } ${chatHasUnreadMessages ? 'unread-messages' : ''}`}\n            >\n              {chatHasUnreadMessages ? (\n                <div className=\"chat-has-unread-messages-container\"></div>\n              ) : (\n                ''\n              )}\n              <div className=\"chat-preview-list-item\">\n                <p className=\"chat-preview-list-name-container\">\n                  {!isGroupChat\n                    ? generateChatNameForSoloChats(users, currentUser)\n                    : chatName}\n                </p>\n                {latestMessage && (\n                  <div className=\"chat-preview-list-latest-message-container\">\n                    <span>\n                      {`${\n                        userSent(currentUser, latestMessage)\n                          ? 'You'\n                          : latestMessage.sender.name.split(' ')[0]\n                      }`}\n                    </span>\n                    : {latestMessage.text}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"chat-preview-list-circle-and-count-container\">\n                {userOnlineCount > 0 ? (\n                  <>\n                    <div className=\"online-circle\" />\n                    <div>\n                      {userOnlineCount === 1 && !isGroupChat\n                        ? 'Online'\n                        : `${userOnlineCount} Online`}\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"offline-circle\" />\n                    <div> {!isGroupChat ? 'Offline' : `0 Online`}</div>\n                  </>\n                )}\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ChatPreview;\n"],"mappings":"kSAAA,OAASA,iBAAT,KAAkC,uCAAlC,CACA,OAASC,WAAT,KAA4B,kCAA5B,CACA,MAAO,4BAAP,CACA,OACEC,4BADF,CAEEC,mBAFF,CAGEC,QAHF,CAIEC,YAJF,CAKEC,UALF,KAMO,mBANP,CAOA,OAASC,SAAT,KAA0B,+BAA1B,C,6IAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,EAAM,CACxB,uBAAwBR,iBAAiB,EAAzC,CAAQS,WAAR,oBAAQA,WAAR,CACA,iBASIR,WAAW,EATf,CACES,UADF,cACEA,UADF,CAEEC,aAFF,cAEEA,aAFF,CAGEC,KAHF,cAGEA,KAHF,CAIEC,gBAJF,cAIEA,gBAJF,CAKEC,aALF,cAKEA,aALF,CAMEC,gBANF,cAMEA,gBANF,CAOEC,aAPF,cAOEA,aAPF,CAQEC,iBARF,cAQEA,iBARF,CAWA,eAAwBV,SAAS,EAAjC,CAAQW,WAAR,YAAQA,WAAR,CAEA,GAAMC,YAAW,4FAAG,iBAAMC,CAAN,8NACZC,OADY,CACFD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,oBAAjB,CADE,CAEZC,MAFY,CAEHH,OAAO,CAACI,YAAR,CAAqB,MAArB,CAFG,MAId,CAACD,MAAD,EAAWA,MAAM,kBAAKd,UAAU,CAAC,CAAD,CAAf,uCAAK,aAAegB,GAApB,CAJH,kEAMlB,GAAIb,gBAAgB,CAACc,KAAjB,EAA0B,GAA9B,CAAmC,CACjCb,aAAa,CAAC,MAAD,CAAb,CACD,CAEKc,aAVY,CAUIhB,KAAK,CAACiB,IAAN,CAAW,SAAAC,IAAI,QAAIA,KAAI,CAACJ,GAAL,GAAaF,MAAjB,EAAf,CAVJ,CAWlBb,aAAa,CAAC,CAACiB,aAAD,CAAD,CAAb,CAEMG,yBAbY,CAagBf,aAAa,CAACgB,MAAd,CAChC,SAAAC,YAAY,QAAIA,aAAY,CAACH,IAAb,CAAkBJ,GAAlB,GAA0BF,MAA9B,EADoB,CAbhB,CAiBlBP,iBAAiB,CAACc,yBAAD,CAAjB,CAjBkB,uCAoBOG,MAAK,6DAE1B,CACEC,MAAM,CAAE,MADV,CAEEC,OAAO,CAAE,CACPC,aAAa,kBAAY5B,WAAW,CAAC6B,KAAxB,CADN,CAEP,eAAgB,kBAFT,CAFX,CAMEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBjB,MAAM,CAAEI,aAAa,CAACF,GADH,CAAf,CANR,CAF0B,CApBZ,SAoBVgB,QApBU,sCAiCmBA,SAAQ,CAACC,IAAT,EAjCnB,SAiCVC,oBAjCU,eAkChB7B,gBAAgB,CAAC6B,oBAAD,CAAhB,CAlCgB,iFAoChBvC,YAAY,CAACC,UAAU,CAACuC,KAAZ,CAAmB,8BAAnB,CAAZ,CApCgB,qEAAH,kBAAX1B,YAAW,4CAAjB,CAwCA,mBACE,YAAK,SAAS,CAAC,wBAAf,CAAwC,OAAO,CAAEA,WAAjD,UACGP,KAAK,CAACkC,MAAN,CAAe,CAAf,EACClC,KAAK,CAACmC,GAAN,CAAU,eAA0D,sBAAvDrB,IAAuD,OAAvDA,GAAuD,CAAlDsB,QAAkD,OAAlDA,QAAkD,CAAxCC,KAAwC,OAAxCA,KAAwC,CAAjCC,WAAiC,OAAjCA,WAAiC,CAApBC,aAAoB,OAApBA,aAAoB,CAClE,GAAMC,gBAAe,CAAGjD,mBAAmB,CACzCe,WADyC,CAEzC+B,KAFyC,CAGzCxC,WAHyC,CAA3C,CAKA,GAAM4C,sBAAqB,CAAGrC,aAAa,CAACsC,IAAd,CAC5B,SAAArB,YAAY,QAAIA,aAAY,CAACH,IAAb,CAAkBJ,GAAlB,GAA0BA,GAA9B,EADgB,CAA9B,CAIA,mBACE,aAEE,IAAI,CAAEA,GAFR,CAGE,SAAS,6BACPA,GAAG,mBAAKhB,UAAU,CAAC,CAAD,CAAf,wCAAK,cAAegB,GAApB,CAAH,CAA6B,QAA7B,CAAwC,EADjC,aAEL2B,qBAAqB,CAAG,iBAAH,CAAuB,EAFvC,CAHX,WAOGA,qBAAqB,cACpB,YAAK,SAAS,CAAC,oCAAf,EADoB,CAGpB,EAVJ,cAYE,aAAK,SAAS,CAAC,wBAAf,wBACE,UAAG,SAAS,CAAC,kCAAb,UACG,CAACH,WAAD,CACGhD,4BAA4B,CAAC+C,KAAD,CAAQxC,WAAR,CAD/B,CAEGuC,QAHN,EADF,CAMGG,aAAa,eACZ,aAAK,SAAS,CAAC,4CAAf,wBACE,gCAEI/C,QAAQ,CAACK,WAAD,CAAc0C,aAAd,CAAR,CACI,KADJ,CAEIA,aAAa,CAACI,MAAd,CAAqBC,IAArB,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAJR,GADF,MAQKN,aAAa,CAACO,IARnB,GAPJ,GAZF,cAgCE,YAAK,SAAS,CAAC,8CAAf,UACGN,eAAe,CAAG,CAAlB,cACC,wCACE,YAAK,SAAS,CAAC,eAAf,EADF,cAEE,qBACGA,eAAe,GAAK,CAApB,EAAyB,CAACF,WAA1B,CACG,QADH,WAEME,eAFN,WADH,EAFF,GADD,cAUC,wCACE,YAAK,SAAS,CAAC,gBAAf,EADF,cAEE,2BAAO,CAACF,WAAD,CAAe,SAAf,WAAP,GAFF,GAXJ,EAhCF,GACOxB,GADP,CADF,CAoDD,CA9DD,CAFJ,EADF,CAoED,CA3HD,CA6HA,cAAelB,YAAf"},"metadata":{},"sourceType":"module"}