{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-preview/chat-preview.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport './chat-preview.styles.scss';\nimport { generateChatNameForSoloChats, getUsersOnlineCount, userSent } from '../../utils/utils';\nimport { useSocket } from '../../contexts/socket-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatPreview = () => {\n  _s();\n\n  // And then we can also pull the active conversation up into higher state or into a context just so that we can actually store this variable without losing it when we switch between categories b/c that triggers a re-render\n  const {\n    currentUser\n  } = useAuthentication();\n  const {\n    activeChat,\n    setActiveChat,\n    chats,\n    windowDimensions,\n    setActiveView\n  } = useChatView();\n  const {\n    onlineUsers\n  } = useSocket();\n\n  const handleClick = e => {\n    var _activeChat$;\n\n    const element = e.target.closest('.chat-preview-list');\n    const chatId = element.getAttribute('name'); // Clicked on the container and not one of the list items, did not want to add the event handler to each individual item\n\n    if (!chatId || chatId === ((_activeChat$ = activeChat[0]) === null || _activeChat$ === void 0 ? void 0 : _activeChat$._id)) return;\n\n    if (windowDimensions.width <= 900) {\n      setActiveView('chat');\n    }\n\n    const newActiveChat = chats.find(chat => chat._id === chatId);\n    setActiveChat([newActiveChat]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-preview-container\",\n    onClick: handleClick,\n    children: chats.length > 0 && chats.map(_ref => {\n      var _activeChat$2;\n\n      let {\n        _id,\n        chatName,\n        users,\n        isGroupChat,\n        latestMessage\n      } = _ref;\n      const userOnlineCount = getUsersOnlineCount(onlineUsers, users, currentUser); // console.log(latestMessage);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        name: _id,\n        className: `chat-preview-list ${_id === ((_activeChat$2 = activeChat[0]) === null || _activeChat$2 === void 0 ? void 0 : _activeChat$2._id) ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-preview-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: !isGroupChat ? generateChatNameForSoloChats(users, currentUser) : chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), latestMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-preview-list-latest-message-container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${userSent(currentUser, latestMessage) ? 'You' : 'Hey'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-preview-list-circle-and-count-container\",\n          children: userOnlineCount > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"online-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: userOnlineCount === 1 && !isGroupChat ? 'Online' : `${userOnlineCount} Online`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"offline-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", !isGroupChat ? 'Offline' : `0 Online`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPreview, \"tcgH8IiYC690xxInyzHxHmS6RpY=\", false, function () {\n  return [useAuthentication, useChatView, useSocket];\n});\n\n_c = ChatPreview;\nexport default ChatPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPreview\");","map":{"version":3,"names":["useAuthentication","useChatView","generateChatNameForSoloChats","getUsersOnlineCount","userSent","useSocket","ChatPreview","currentUser","activeChat","setActiveChat","chats","windowDimensions","setActiveView","onlineUsers","handleClick","e","element","target","closest","chatId","getAttribute","_id","width","newActiveChat","find","chat","length","map","chatName","users","isGroupChat","latestMessage","userOnlineCount"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-preview/chat-preview.component.jsx"],"sourcesContent":["import { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport './chat-preview.styles.scss';\nimport {\n  generateChatNameForSoloChats,\n  getUsersOnlineCount,\n  userSent,\n} from '../../utils/utils';\nimport { useSocket } from '../../contexts/socket-context';\n\nconst ChatPreview = () => {\n  // And then we can also pull the active conversation up into higher state or into a context just so that we can actually store this variable without losing it when we switch between categories b/c that triggers a re-render\n  const { currentUser } = useAuthentication();\n  const { activeChat, setActiveChat, chats, windowDimensions, setActiveView } =\n    useChatView();\n\n  const { onlineUsers } = useSocket();\n\n  const handleClick = e => {\n    const element = e.target.closest('.chat-preview-list');\n    const chatId = element.getAttribute('name');\n\n    // Clicked on the container and not one of the list items, did not want to add the event handler to each individual item\n    if (!chatId || chatId === activeChat[0]?._id) return;\n\n    if (windowDimensions.width <= 900) {\n      setActiveView('chat');\n    }\n\n    const newActiveChat = chats.find(chat => chat._id === chatId);\n    setActiveChat([newActiveChat]);\n  };\n\n  return (\n    <div className=\"chat-preview-container\" onClick={handleClick}>\n      {chats.length > 0 &&\n        chats.map(({ _id, chatName, users, isGroupChat, latestMessage }) => {\n          const userOnlineCount = getUsersOnlineCount(\n            onlineUsers,\n            users,\n            currentUser\n          );\n          // console.log(latestMessage);\n          return (\n            <div\n              key={_id}\n              name={_id}\n              className={`chat-preview-list ${\n                _id === activeChat[0]?._id ? 'active' : ''\n              }`}\n            >\n              <div className=\"chat-preview-list-item\">\n                <p>\n                  {!isGroupChat\n                    ? generateChatNameForSoloChats(users, currentUser)\n                    : chatName}\n                </p>\n                {latestMessage && (\n                  <div className=\"chat-preview-list-latest-message-container\">\n                    <p>\n                      {`${\n                        userSent(currentUser, latestMessage) ? 'You' : 'Hey'\n                      }`}\n                      {/* {`{${userSent(currentUser, latestMessage)} ? 'You' : ${\n                        latestMessage.sender.name.split(' ')[0]\n                      }}`} */}\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"chat-preview-list-circle-and-count-container\">\n                {userOnlineCount > 0 ? (\n                  <>\n                    <div className=\"online-circle\" />\n                    <div>\n                      {userOnlineCount === 1 && !isGroupChat\n                        ? 'Online'\n                        : `${userOnlineCount} Online`}\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"offline-circle\" />\n                    <div> {!isGroupChat ? 'Offline' : `0 Online`}</div>\n                  </>\n                )}\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ChatPreview;\n"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,uCAAlC;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAO,4BAAP;AACA,SACEC,4BADF,EAEEC,mBAFF,EAGEC,QAHF,QAIO,mBAJP;AAKA,SAASC,SAAT,QAA0B,+BAA1B;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB;EACA,MAAM;IAAEC;EAAF,IAAkBP,iBAAiB,EAAzC;EACA,MAAM;IAAEQ,UAAF;IAAcC,aAAd;IAA6BC,KAA7B;IAAoCC,gBAApC;IAAsDC;EAAtD,IACJX,WAAW,EADb;EAGA,MAAM;IAAEY;EAAF,IAAkBR,SAAS,EAAjC;;EAEA,MAAMS,WAAW,GAAGC,CAAC,IAAI;IAAA;;IACvB,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,oBAAjB,CAAhB;IACA,MAAMC,MAAM,GAAGH,OAAO,CAACI,YAAR,CAAqB,MAArB,CAAf,CAFuB,CAIvB;;IACA,IAAI,CAACD,MAAD,IAAWA,MAAM,sBAAKX,UAAU,CAAC,CAAD,CAAf,iDAAK,aAAea,GAApB,CAArB,EAA8C;;IAE9C,IAAIV,gBAAgB,CAACW,KAAjB,IAA0B,GAA9B,EAAmC;MACjCV,aAAa,CAAC,MAAD,CAAb;IACD;;IAED,MAAMW,aAAa,GAAGb,KAAK,CAACc,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACJ,GAAL,KAAaF,MAAhC,CAAtB;IACAV,aAAa,CAAC,CAACc,aAAD,CAAD,CAAb;EACD,CAbD;;EAeA,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAwC,OAAO,EAAET,WAAjD;IAAA,UACGJ,KAAK,CAACgB,MAAN,GAAe,CAAf,IACChB,KAAK,CAACiB,GAAN,CAAU,QAA0D;MAAA;;MAAA,IAAzD;QAAEN,GAAF;QAAOO,QAAP;QAAiBC,KAAjB;QAAwBC,WAAxB;QAAqCC;MAArC,CAAyD;MAClE,MAAMC,eAAe,GAAG7B,mBAAmB,CACzCU,WADyC,EAEzCgB,KAFyC,EAGzCtB,WAHyC,CAA3C,CADkE,CAMlE;;MACA,oBACE;QAEE,IAAI,EAAEc,GAFR;QAGE,SAAS,EAAG,qBACVA,GAAG,uBAAKb,UAAU,CAAC,CAAD,CAAf,kDAAK,cAAea,GAApB,CAAH,GAA6B,QAA7B,GAAwC,EACzC,EALH;QAAA,wBAOE;UAAK,SAAS,EAAC,wBAAf;UAAA,wBACE;YAAA,UACG,CAACS,WAAD,GACG5B,4BAA4B,CAAC2B,KAAD,EAAQtB,WAAR,CAD/B,GAEGqB;UAHN;YAAA;YAAA;YAAA;UAAA,QADF,EAMGG,aAAa,iBACZ;YAAK,SAAS,EAAC,4CAAf;YAAA,uBACE;cAAA,UACI,GACA3B,QAAQ,CAACG,WAAD,EAAcwB,aAAd,CAAR,GAAuC,KAAvC,GAA+C,KAChD;YAHH;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAPJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF,eA2BE;UAAK,SAAS,EAAC,8CAAf;UAAA,UACGC,eAAe,GAAG,CAAlB,gBACC;YAAA,wBACE;cAAK,SAAS,EAAC;YAAf;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,UACGA,eAAe,KAAK,CAApB,IAAyB,CAACF,WAA1B,GACG,QADH,GAEI,GAAEE,eAAgB;YAHzB;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA,gBADD,gBAUC;YAAA,wBACE;cAAK,SAAS,EAAC;YAAf;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,gBAAO,CAACF,WAAD,GAAe,SAAf,GAA4B,UAAnC;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;QAXJ;UAAA;UAAA;UAAA;QAAA,QA3BF;MAAA,GACOT,GADP;QAAA;QAAA;QAAA;MAAA,QADF;IA+CD,CAtDD;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AA4DD,CAnFD;;GAAMf,W;UAEoBN,iB,EAEtBC,W,EAEsBI,S;;;KANpBC,W;AAqFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}