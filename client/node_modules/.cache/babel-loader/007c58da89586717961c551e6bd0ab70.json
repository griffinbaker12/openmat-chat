{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/add-user-dropdown/add-user-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect, useRef } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { useSocket } from '../../contexts/socket-context';\nimport { TOAST_TYPE, defaultToast } from '../../utils/utils';\nimport SearchResult, { SEARCH_RESULT_TYPE } from '../search-result/search-result-component';\nimport './add-user-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUserDropdown = _ref => {\n  _s();\n\n  let {\n    wasSoloChat\n  } = _ref;\n  const [userSearchResults, setUserSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const addUserToChatRef = useRef();\n  const {\n    currentUser\n  } = useAuthentication();\n  const {\n    activeChat,\n    fetchChats,\n    showAddUserInfoDropdown,\n    chats,\n    setActiveChat\n  } = useChatView();\n  const {\n    socket\n  } = useSocket();\n  useEffect(() => {\n    if (!addUserToChatRef.current) return;\n    addUserToChatRef.current.focus();\n  }, [showAddUserInfoDropdown]);\n\n  const handleTextChange = async e => {\n    const query = e.target.value;\n\n    if (!query) {\n      setUserSearchResults([]);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:4000/api/user?search=${query}`, {\n        method: 'get',\n        headers: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n      const {\n        users\n      } = await response.json();\n      const usersNotAlreadyInChat = users.filter(returnedUser => {\n        return !activeChat[0].users.some(chatUser => returnedUser.userName === chatUser.userName);\n      });\n      setIsLoading(false);\n      setUserSearchResults(usersNotAlreadyInChat);\n    } catch (e) {\n      defaultToast(TOAST_TYPE.error, 'User already exists in chat');\n    }\n  };\n\n  const handleAddUser = async e => {\n    const closestContainer = e.target.closest('.add-user-to-existing-chat-container');\n    const selectedId = closestContainer.getAttribute('name');\n    const mappedChatWithNamesAndId = chats.map(chat => [chat.users.map(_ref2 => {\n      let {\n        userName\n      } = _ref2;\n      return userName;\n    }).sort(), chat._id]);\n    const selectedUser = userSearchResults.find(user => user._id === selectedId);\n    const sortedChatUsers = [...activeChat[0].users, selectedUser].map(user => user.userName).sort();\n    const existingChatUsersAndId = mappedChatWithNamesAndId.find(chat => {\n      if (chat[0].length !== sortedChatUsers.length) return false;\n      return chat[0].every((user, i) => user === sortedChatUsers[i]);\n    });\n\n    if (existingChatUsersAndId) {\n      const existingChat = chats.find(chat => chat._id === existingChatUsersAndId[1]);\n      setActiveChat([existingChat]);\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:4000/api/chat/addUserToChat', {\n        method: 'put',\n        headers: {\n          Authorization: `Bearer ${currentUser.token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chatId: activeChat[0]._id,\n          userId: selectedId\n        })\n      });\n      const newChat = await response.json();\n      console.log(Boolean(newChat.latestMessage));\n      socket.emit('chat update', newChat);\n      defaultToast(TOAST_TYPE.success, 'User successfully added');\n    } catch (error) {\n      defaultToast(TOAST_TYPE.failure, 'Error adding user');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-user-dropdown-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-user-dropdown-tip bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-user-dropdown-content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search users...\",\n          onChange: handleTextChange,\n          ref: addUserToChatRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-user-dropdown-results-container\",\n          children: userSearchResults.map((searchResult, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(SearchResult, {\n              type: SEARCH_RESULT_TYPE.addUserToExistingChat,\n              handleAddUser: handleAddUser,\n              searchResult: searchResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUserDropdown, \"IpNDmV8b1+zmody0RCw+W9UnPDw=\", false, function () {\n  return [useAuthentication, useChatView, useSocket];\n});\n\n_c = AddUserDropdown;\nexport default AddUserDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserDropdown\");","map":{"version":3,"names":["Fragment","useState","useEffect","useRef","useAuthentication","useChatView","useSocket","TOAST_TYPE","defaultToast","SearchResult","SEARCH_RESULT_TYPE","AddUserDropdown","wasSoloChat","userSearchResults","setUserSearchResults","isLoading","setIsLoading","addUserToChatRef","currentUser","activeChat","fetchChats","showAddUserInfoDropdown","chats","setActiveChat","socket","current","focus","handleTextChange","e","query","target","value","response","fetch","method","headers","Authorization","token","users","json","usersNotAlreadyInChat","filter","returnedUser","some","chatUser","userName","error","handleAddUser","closestContainer","closest","selectedId","getAttribute","mappedChatWithNamesAndId","map","chat","sort","_id","selectedUser","find","user","sortedChatUsers","existingChatUsersAndId","length","every","i","existingChat","body","JSON","stringify","chatId","userId","newChat","console","log","Boolean","latestMessage","emit","success","failure","searchResult","addUserToExistingChat"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/add-user-dropdown/add-user-dropdown.component.jsx"],"sourcesContent":["import { Fragment, useState, useEffect, useRef } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { useSocket } from '../../contexts/socket-context';\nimport { TOAST_TYPE, defaultToast } from '../../utils/utils';\nimport SearchResult, {\n  SEARCH_RESULT_TYPE,\n} from '../search-result/search-result-component';\nimport './add-user-dropdown.styles.scss';\n\nconst AddUserDropdown = ({ wasSoloChat }) => {\n  const [userSearchResults, setUserSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const addUserToChatRef = useRef();\n\n  const { currentUser } = useAuthentication();\n  const {\n    activeChat,\n    fetchChats,\n    showAddUserInfoDropdown,\n    chats,\n    setActiveChat,\n  } = useChatView();\n  const { socket } = useSocket();\n\n  useEffect(() => {\n    if (!addUserToChatRef.current) return;\n    addUserToChatRef.current.focus();\n  }, [showAddUserInfoDropdown]);\n\n  const handleTextChange = async e => {\n    const query = e.target.value;\n    if (!query) {\n      setUserSearchResults([]);\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        `http://localhost:4000/api/user?search=${query}`,\n        {\n          method: 'get',\n          headers: { Authorization: `Bearer ${currentUser.token}` },\n        }\n      );\n      const { users } = await response.json();\n\n      const usersNotAlreadyInChat = users.filter(returnedUser => {\n        return !activeChat[0].users.some(\n          chatUser => returnedUser.userName === chatUser.userName\n        );\n      });\n\n      setIsLoading(false);\n\n      setUserSearchResults(usersNotAlreadyInChat);\n    } catch (e) {\n      defaultToast(TOAST_TYPE.error, 'User already exists in chat');\n    }\n  };\n\n  const handleAddUser = async e => {\n    const closestContainer = e.target.closest(\n      '.add-user-to-existing-chat-container'\n    );\n    const selectedId = closestContainer.getAttribute('name');\n\n    const mappedChatWithNamesAndId = chats.map(chat => [\n      chat.users.map(({ userName }) => userName).sort(),\n      chat._id,\n    ]);\n\n    const selectedUser = userSearchResults.find(\n      user => user._id === selectedId\n    );\n\n    const sortedChatUsers = [...activeChat[0].users, selectedUser]\n      .map(user => user.userName)\n      .sort();\n\n    const existingChatUsersAndId = mappedChatWithNamesAndId.find(chat => {\n      if (chat[0].length !== sortedChatUsers.length) return false;\n      return chat[0].every((user, i) => user === sortedChatUsers[i]);\n    });\n\n    if (existingChatUsersAndId) {\n      const existingChat = chats.find(\n        chat => chat._id === existingChatUsersAndId[1]\n      );\n      setActiveChat([existingChat]);\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        'http://localhost:4000/api/chat/addUserToChat',\n        {\n          method: 'put',\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            chatId: activeChat[0]._id,\n            userId: selectedId,\n          }),\n        }\n      );\n      const newChat = await response.json();\n      console.log(Boolean(newChat.latestMessage));\n      socket.emit('chat update', newChat);\n      defaultToast(TOAST_TYPE.success, 'User successfully added');\n    } catch (error) {\n      defaultToast(TOAST_TYPE.failure, 'Error adding user');\n    }\n  };\n\n  return (\n    <div className=\"add-user-dropdown-container\">\n      <div className=\"add-user-dropdown-tip bottom\">\n        <div className=\"add-user-dropdown-content-container\">\n          <input\n            type=\"search\"\n            placeholder=\"Search users...\"\n            onChange={handleTextChange}\n            ref={addUserToChatRef}\n          />\n          <div className=\"add-user-dropdown-results-container\">\n            {userSearchResults.map((searchResult, i) => (\n              <Fragment key={i}>\n                <SearchResult\n                  type={SEARCH_RESULT_TYPE.addUserToExistingChat}\n                  handleAddUser={handleAddUser}\n                  searchResult={searchResult}\n                />\n              </Fragment>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddUserDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}