{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/user-info-modal/user-info-modal.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport Spinner from '../spinner/spinner.component';\nimport { defaultToast, TOAST_TYPE } from '../../utils/utils';\nimport './user-info-modal.styles.scss'; // This could easily be made more generalizable by saying activeUser and then whatever user you click on will have the same profile\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInfoModal = () => {\n  _s();\n\n  const {\n    activeUserInfo,\n    showModal,\n    closeModal,\n    isActiveUserCurrentUser,\n    setShowActiveUserWithinChatInfo,\n    showActiveUserWithinChatInfo,\n    chats,\n    setActiveChat,\n    setChats,\n    activeChat\n  } = useChatView();\n  const {\n    currentUser,\n    setCurrentUser\n  } = useAuthentication();\n  const hiddenInputRef = useRef();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [isPicLoading, setIsPicLoading] = useState(false);\n  const [picCloudUrl, setPicCloudUrl] = useState(); // When you look at their profile, you should be able to chat them, remove or add them as a friend, see their friends...TOMORROW!\n  // Could be cool to be able to click either the chats or friends and then re-direct the user to the left hand side to either their chats or their friends. Also, if the active current user IS NOT the current user, then we need to show a back arrow to go back to the active chat\n\n  const goBackToChatInfo = () => setShowActiveUserWithinChatInfo(false);\n\n  const handleChatCreation = async e => {\n    e.stopPropagation();\n    const soloChats = chats.filter(chat => !chat.isGroupChat);\n    const existingChat = soloChats.find(chat => chat.users.some(user => user._id === activeUserInfo._id));\n\n    if (existingChat) {\n      var _activeChat$;\n\n      closeModal();\n      closeDropdown();\n      if (((_activeChat$ = activeChat[0]) === null || _activeChat$ === void 0 ? void 0 : _activeChat$._id) === existingChat._id) return;\n      setActiveChat([existingChat]);\n    } else {\n      const otherParticipantId = [activeUserInfo._id];\n      const payload = {\n        chatName: null,\n        users: otherParticipantId\n      };\n\n      try {\n        const response = await fetch(`http://localhost:4000/api/chat/createChat`, {\n          method: 'post',\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        const newChat = await response.json();\n        setChats(prevState => [newChat, ...prevState]);\n        closeModal();\n        closeDropdown();\n        defaultToast(TOAST_TYPE.success, 'Chat creation successful');\n      } catch (e) {\n        defaultToast(TOAST_TYPE.failure, 'Error creating chat');\n      }\n    }\n  };\n\n  const handleModalClick = e => {\n    e.stopPropagation();\n\n    if (showDropdown) {\n      setShowDropdown(false);\n      return;\n    }\n\n    closeModal();\n  };\n\n  const closeDropdown = () => setShowDropdown(false);\n\n  const closeUserInfoDropdownAndStopPropagation = e => {\n    const ellipsisPress = e.target.closest('.user-info-modal-back-ellipsis');\n    e.stopPropagation();\n\n    if (!ellipsisPress) {\n      setShowDropdown(false);\n    }\n  };\n\n  const handleFileInputChange = e => {\n    const picture = e.target.files[0];\n\n    if (e.target.files) {\n      postImageDetails(picture);\n    } else return;\n  };\n\n  const handleImageUpload = () => {\n    hiddenInputRef.current.click();\n  };\n\n  const postImageDetails = picture => {\n    setIsPicLoading(true);\n\n    if (!picture) {\n      setIsPicLoading(false);\n      return;\n    }\n\n    const data = new FormData();\n    data.append('file', picture);\n    data.append('upload_preset', 'chat-app');\n    fetch('https://api.cloudinary.com/v1_1/dhogrpl6c/image/upload', {\n      method: 'post',\n      body: data\n    }).then(res => res.json()).then(data => {\n      setIsPicLoading(false);\n      updateUserPicture(data);\n    }).catch(err => {\n      defaultToast(TOAST_TYPE.error, 'Error uploading image');\n    });\n  };\n\n  const updateUserPicture = async pictureDetails => {\n    fetch('http://localhost:4000/api/user/changeProfilePicture', {\n      method: 'put',\n      headers: {\n        Authorization: `Bearer ${currentUser.token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url: pictureDetails.url\n      })\n    }).then(res => res.json()).then(updatedUser => {\n      console.log(updatedUser, 'updatedUser');\n      setCurrentUser(updatedUser);\n    }).catch(err => {\n      setIsPicLoading(false);\n      defaultToast(TOAST_TYPE.error, 'Error updating account');\n    });\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', closeUserInfoDropdownAndStopPropagation);\n    return () => document.removeEventListener('click', closeUserInfoDropdownAndStopPropagation);\n  });\n  return activeUserInfo && showActiveUserWithinChatInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `user-info-modal-container ${showModal ? 'active' : ''}`,\n    onClick: handleModalClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-modal-content\",\n      onClick: closeUserInfoDropdownAndStopPropagation,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: isActiveUserCurrentUser ? {\n          visibility: 'visible',\n          marginBottom: '4px'\n        } : {\n          display: 'none'\n        },\n        className: \"user-info-modal-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          type: \"button\",\n          style: {\n            color: 'white'\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: isActiveUserCurrentUser ? {\n          paddingTop: '20px'\n        } : {\n          paddingTop: '12px'\n        },\n        className: \"user-info-modal-user-detail-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info-modal-user-detail-header-with-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: goBackToChatInfo,\n            className: \"user-info-modal-back-arrow\",\n            style: isActiveUserCurrentUser ? {\n              visibility: 'hidden'\n            } : {\n              fontSize: '24px'\n            },\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-info-modal-name\",\n            children: activeUserInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info-modal-username-email\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"@\", activeUserInfo.userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info-modal-picture-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            height: \"100%\",\n            src: activeUserInfo.picture,\n            alt: \"profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), isActiveUserCurrentUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: hiddenInputRef,\n          type: \"file\",\n          accept: \"image/jpeg, image/png\",\n          id: \"profile-picture\",\n          onChange: handleFileInputChange,\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleImageUpload,\n          type: \"button\",\n          className: \"user-info-button\",\n          children: isPicLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this) : 'Change Profile Picture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleChatCreation,\n        className: \"user-info-button\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 7\n  }, this);\n};\n\n_s(UserInfoModal, \"Md9xu2TGaHs3XmqJwwCduS0nuw0=\", false, function () {\n  return [useChatView, useAuthentication];\n});\n\n_c = UserInfoModal;\nexport default UserInfoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoModal\");","map":{"version":3,"names":["useEffect","useState","useRef","useAuthentication","useChatView","Spinner","defaultToast","TOAST_TYPE","UserInfoModal","activeUserInfo","showModal","closeModal","isActiveUserCurrentUser","setShowActiveUserWithinChatInfo","showActiveUserWithinChatInfo","chats","setActiveChat","setChats","activeChat","currentUser","setCurrentUser","hiddenInputRef","showDropdown","setShowDropdown","isPicLoading","setIsPicLoading","picCloudUrl","setPicCloudUrl","goBackToChatInfo","handleChatCreation","e","stopPropagation","soloChats","filter","chat","isGroupChat","existingChat","find","users","some","user","_id","closeDropdown","otherParticipantId","payload","chatName","response","fetch","method","headers","Authorization","token","body","JSON","stringify","newChat","json","prevState","success","failure","handleModalClick","closeUserInfoDropdownAndStopPropagation","ellipsisPress","target","closest","handleFileInputChange","picture","files","postImageDetails","handleImageUpload","current","click","data","FormData","append","then","res","updateUserPicture","catch","err","error","pictureDetails","url","updatedUser","console","log","document","addEventListener","removeEventListener","visibility","marginBottom","display","color","paddingTop","fontSize","name","userName"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/user-info-modal/user-info-modal.component.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport Spinner from '../spinner/spinner.component';\nimport { defaultToast, TOAST_TYPE } from '../../utils/utils';\nimport './user-info-modal.styles.scss';\n\n// This could easily be made more generalizable by saying activeUser and then whatever user you click on will have the same profile\n\nconst UserInfoModal = () => {\n  const {\n    activeUserInfo,\n    showModal,\n    closeModal,\n    isActiveUserCurrentUser,\n    setShowActiveUserWithinChatInfo,\n    showActiveUserWithinChatInfo,\n    chats,\n    setActiveChat,\n    setChats,\n    activeChat,\n  } = useChatView();\n\n  const { currentUser, setCurrentUser } = useAuthentication();\n\n  const hiddenInputRef = useRef();\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [isPicLoading, setIsPicLoading] = useState(false);\n  const [picCloudUrl, setPicCloudUrl] = useState();\n\n  // When you look at their profile, you should be able to chat them, remove or add them as a friend, see their friends...TOMORROW!\n\n  // Could be cool to be able to click either the chats or friends and then re-direct the user to the left hand side to either their chats or their friends. Also, if the active current user IS NOT the current user, then we need to show a back arrow to go back to the active chat\n\n  const goBackToChatInfo = () => setShowActiveUserWithinChatInfo(false);\n\n  const handleChatCreation = async e => {\n    e.stopPropagation();\n\n    const soloChats = chats.filter(chat => !chat.isGroupChat);\n\n    const existingChat = soloChats.find(chat =>\n      chat.users.some(user => user._id === activeUserInfo._id)\n    );\n\n    if (existingChat) {\n      closeModal();\n      closeDropdown();\n      if (activeChat[0]?._id === existingChat._id) return;\n      setActiveChat([existingChat]);\n    } else {\n      const otherParticipantId = [activeUserInfo._id];\n      const payload = {\n        chatName: null,\n        users: otherParticipantId,\n      };\n\n      try {\n        const response = await fetch(\n          `http://localhost:4000/api/chat/createChat`,\n          {\n            method: 'post',\n            headers: {\n              Authorization: `Bearer ${currentUser.token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n          }\n        );\n        const newChat = await response.json();\n        setChats(prevState => [newChat, ...prevState]);\n        closeModal();\n        closeDropdown();\n        defaultToast(TOAST_TYPE.success, 'Chat creation successful');\n      } catch (e) {\n        defaultToast(TOAST_TYPE.failure, 'Error creating chat');\n      }\n    }\n  };\n\n  const handleModalClick = e => {\n    e.stopPropagation();\n    if (showDropdown) {\n      setShowDropdown(false);\n      return;\n    }\n    closeModal();\n  };\n\n  const closeDropdown = () => setShowDropdown(false);\n\n  const closeUserInfoDropdownAndStopPropagation = e => {\n    const ellipsisPress = e.target.closest('.user-info-modal-back-ellipsis');\n    e.stopPropagation();\n\n    if (!ellipsisPress) {\n      setShowDropdown(false);\n    }\n  };\n\n  const handleFileInputChange = e => {\n    const picture = e.target.files[0];\n    if (e.target.files) {\n      postImageDetails(picture);\n    } else return;\n  };\n\n  const handleImageUpload = () => {\n    hiddenInputRef.current.click();\n  };\n\n  const postImageDetails = picture => {\n    setIsPicLoading(true);\n    if (!picture) {\n      setIsPicLoading(false);\n      return;\n    }\n\n    const data = new FormData();\n    data.append('file', picture);\n    data.append('upload_preset', 'chat-app');\n\n    fetch('https://api.cloudinary.com/v1_1/dhogrpl6c/image/upload', {\n      method: 'post',\n      body: data,\n    })\n      .then(res => res.json())\n      .then(data => {\n        setIsPicLoading(false);\n        updateUserPicture(data);\n      })\n      .catch(err => {\n        defaultToast(TOAST_TYPE.error, 'Error uploading image');\n      });\n  };\n\n  const updateUserPicture = async pictureDetails => {\n    fetch('http://localhost:4000/api/user/changeProfilePicture', {\n      method: 'put',\n      headers: {\n        Authorization: `Bearer ${currentUser.token}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        url: pictureDetails.url,\n      }),\n    })\n      .then(res => res.json())\n      .then(updatedUser => {\n        console.log(updatedUser, 'updatedUser');\n        setCurrentUser(updatedUser);\n      })\n      .catch(err => {\n        setIsPicLoading(false);\n        defaultToast(TOAST_TYPE.error, 'Error updating account');\n      });\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', closeUserInfoDropdownAndStopPropagation);\n    return () =>\n      document.removeEventListener(\n        'click',\n        closeUserInfoDropdownAndStopPropagation\n      );\n  });\n\n  return (\n    activeUserInfo &&\n    showActiveUserWithinChatInfo && (\n      <div\n        className={`user-info-modal-container ${showModal ? 'active' : ''}`}\n        onClick={handleModalClick}\n      >\n        <div\n          className=\"user-info-modal-content\"\n          onClick={closeUserInfoDropdownAndStopPropagation}\n        >\n          <div\n            style={\n              isActiveUserCurrentUser\n                ? { visibility: 'visible', marginBottom: '4px' }\n                : { display: 'none' }\n            }\n            className=\"user-info-modal-button-container\"\n          >\n            <button\n              onClick={closeModal}\n              type=\"button\"\n              style={{ color: 'white' }}\n            >\n              &#x2715;\n            </button>\n          </div>\n          <div\n            style={\n              isActiveUserCurrentUser\n                ? { paddingTop: '20px' }\n                : { paddingTop: '12px' }\n            }\n            className=\"user-info-modal-user-detail-container\"\n          >\n            <div className=\"user-info-modal-user-detail-header-with-buttons\">\n              <div\n                onClick={goBackToChatInfo}\n                className=\"user-info-modal-back-arrow\"\n                style={\n                  isActiveUserCurrentUser\n                    ? { visibility: 'hidden' }\n                    : {\n                        fontSize: '24px',\n                      }\n                }\n              >\n                &#8592;\n              </div>\n              <p className=\"user-info-modal-name\">{activeUserInfo.name}</p>\n            </div>\n            <div className=\"user-info-modal-username-email\">\n              <p>@{activeUserInfo.userName}</p>\n            </div>\n            <div className=\"user-info-modal-picture-container\">\n              <img height=\"100%\" src={activeUserInfo.picture} alt=\"profile\" />\n            </div>\n          </div>\n          {isActiveUserCurrentUser ? (\n            <>\n              <input\n                ref={hiddenInputRef}\n                type=\"file\"\n                accept=\"image/jpeg, image/png\"\n                id=\"profile-picture\"\n                onChange={handleFileInputChange}\n                hidden\n              />\n              <button\n                onClick={handleImageUpload}\n                type=\"button\"\n                className=\"user-info-button\"\n              >\n                {isPicLoading ? <Spinner /> : 'Change Profile Picture'}\n              </button>\n            </>\n          ) : (\n            <button onClick={handleChatCreation} className=\"user-info-button\">\n              Send Message\n            </button>\n          )}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default UserInfoModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}