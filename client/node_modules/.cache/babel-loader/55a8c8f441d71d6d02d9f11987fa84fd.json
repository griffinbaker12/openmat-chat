{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/message-view/message-view.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useConversations } from '../../contexts/conversations-context';\nimport './message-view.styles.scss'; // Could definitely add timestamp data to the message as well, that would be pretty clean actually\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageView = () => {\n  _s();\n\n  // Somehow we are going to have to get all of the message in a conversation potentially and then mark whether or not they are your messages or someone else's to style accordingly;\n  const {\n    currentConversation\n  } = useConversations(); // What is the best way to make it so that the text bubble can expland if it needs to??\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-view-container\",\n    children: currentConversation.messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-view-text-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-view-text ${message.userSent ? 'user-sent' : ''}`,\n        children: message.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-view-text-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.userSent ? 'You' : message.sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$#x2022;\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageView, \"LJ9BLijq8rbmXooCTl9eMRIF/g4=\", false, function () {\n  return [useConversations];\n});\n\n_c = MessageView;\nexport default MessageView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageView\");","map":{"version":3,"names":["useConversations","MessageView","currentConversation","messages","map","message","i","userSent","text","sender"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/message-view/message-view.component.jsx"],"sourcesContent":["import { useConversations } from '../../contexts/conversations-context';\nimport './message-view.styles.scss';\n\n// Could definitely add timestamp data to the message as well, that would be pretty clean actually\n\nconst MessageView = () => {\n  // Somehow we are going to have to get all of the message in a conversation potentially and then mark whether or not they are your messages or someone else's to style accordingly;\n  const { currentConversation } = useConversations();\n\n  // What is the best way to make it so that the text bubble can expland if it needs to??\n  return (\n    <div className=\"message-view-container\">\n      {currentConversation.messages.map((message, i) => (\n        <div className=\"message-view-text-container\">\n          <div\n            key={i}\n            className={`message-view-text ${\n              message.userSent ? 'user-sent' : ''\n            }`}\n          >\n            {message.text}\n          </div>\n          <div className=\"message-view-text-info\">\n            <p>{message.userSent ? 'You' : message.sender}</p>\n            <span>$#x2022;</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MessageView;\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,sCAAjC;AACA,OAAO,4BAAP,C,CAEA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB;EACA,MAAM;IAAEC;EAAF,IAA0BF,gBAAgB,EAAhD,CAFwB,CAIxB;;EACA,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAA,UACGE,mBAAmB,CAACC,QAApB,CAA6BC,GAA7B,CAAiC,CAACC,OAAD,EAAUC,CAAV,kBAChC;MAAK,SAAS,EAAC,6BAAf;MAAA,wBACE;QAEE,SAAS,EAAG,qBACVD,OAAO,CAACE,QAAR,GAAmB,WAAnB,GAAiC,EAClC,EAJH;QAAA,UAMGF,OAAO,CAACG;MANX,GACOF,CADP;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAK,SAAS,EAAC,wBAAf;QAAA,wBACE;UAAA,UAAID,OAAO,CAACE,QAAR,GAAmB,KAAnB,GAA2BF,OAAO,CAACI;QAAvC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAzBD;;GAAMR,W;UAE4BD,gB;;;KAF5BC,W;AA2BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}