{"ast":null,"code":"import { toast } from 'react-toastify';\nexport const generateChatNameForSoloChats = (users, currentUser) => {\n  return users.filter(user => {\n    console.log('user in utils', user);\n    return user._id !== currentUser._id;\n  })[0].name;\n};\nexport const TOAST_TYPE = {\n  success: 'success',\n  error: 'error'\n};\nexport const defaultToast = (type, message) => {\n  if (type === TOAST_TYPE.success) {\n    toast.success(message, {\n      position: 'bottom-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark'\n    });\n  } else {\n    toast.error(message, {\n      position: 'bottom-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark'\n    });\n  }\n};\nexport const getMutualFriends = (friendOneArr, friendTwoArr) => {\n  let count = 0;\n  friendOneArr.forEach(friendOne => {\n    friendTwoArr.forEach(friendTwo => {\n      if (friendOne.userName === friendTwo.userName) {\n        count++;\n      }\n    });\n  });\n  return count;\n};\nexport const areFriends = (user1, user2) => {\n  return user1.friends.some(friend => friend.userName === user2.userName);\n};\nexport const userSent = (currentUser, message) => currentUser._id === message.sender._id;\nexport const sameSenderAndNotCurrentUser = (i, messages, currentUser) => {\n  return i + 1 < messages.length && messages[i].sender._id === messages[i + 1].sender._id && currentUser._id !== messages[i].sender._id;\n};\nexport const getTyperString = typers => {\n  if (typers.length === 1) return typers[0] + ' is typing';\n  if (typers.length === 2) return typers[0] + typers[1] + ' are typing';\n  if (typers.length === 3) return typers.slice(0, 2).join(', ').concat(` and ${typers.at(-1)} are typing`);else return typers.slice(0, 2).join(', ').concat(` and ${typers.length - 2} others are typing`);\n};\nexport const getUsersOnlineCount = (onlineUsers, chatUsers, currentUser) => {\n  let count = 0;\n  onlineUsers.forEach(onlineUser => {\n    const [, userId] = onlineUser;\n    if (userId === currentUser._id) return;\n    chatUsers.forEach(chatUser => {\n      if (userId === chatUser._id) {\n        count++;\n      }\n    }); // if (user !== currentUser._id) {\n    //   count++;\n    // }\n  }); // console.log('count from utils', count);\n\n  return count;\n};","map":{"version":3,"names":["toast","generateChatNameForSoloChats","users","currentUser","filter","user","console","log","_id","name","TOAST_TYPE","success","error","defaultToast","type","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","getMutualFriends","friendOneArr","friendTwoArr","count","forEach","friendOne","friendTwo","userName","areFriends","user1","user2","friends","some","friend","userSent","sender","sameSenderAndNotCurrentUser","i","messages","length","getTyperString","typers","slice","join","concat","at","getUsersOnlineCount","onlineUsers","chatUsers","onlineUser","userId","chatUser"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/utils/utils.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\nexport const generateChatNameForSoloChats = (users, currentUser) => {\n  return users.filter(user => {\n    console.log('user in utils', user);\n    return user._id !== currentUser._id;\n  })[0].name;\n};\n\nexport const TOAST_TYPE = {\n  success: 'success',\n  error: 'error',\n};\n\nexport const defaultToast = (type, message) => {\n  if (type === TOAST_TYPE.success) {\n    toast.success(message, {\n      position: 'bottom-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark',\n    });\n  } else {\n    toast.error(message, {\n      position: 'bottom-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark',\n    });\n  }\n};\n\nexport const getMutualFriends = (friendOneArr, friendTwoArr) => {\n  let count = 0;\n  friendOneArr.forEach(friendOne => {\n    friendTwoArr.forEach(friendTwo => {\n      if (friendOne.userName === friendTwo.userName) {\n        count++;\n      }\n    });\n  });\n  return count;\n};\n\nexport const areFriends = (user1, user2) => {\n  return user1.friends.some(friend => friend.userName === user2.userName);\n};\n\nexport const userSent = (currentUser, message) =>\n  currentUser._id === message.sender._id;\n\nexport const sameSenderAndNotCurrentUser = (i, messages, currentUser) => {\n  return (\n    i + 1 < messages.length &&\n    messages[i].sender._id === messages[i + 1].sender._id &&\n    currentUser._id !== messages[i].sender._id\n  );\n};\n\nexport const getTyperString = typers => {\n  if (typers.length === 1) return typers[0] + ' is typing';\n  if (typers.length === 2) return typers[0] + typers[1] + ' are typing';\n  if (typers.length === 3)\n    return typers\n      .slice(0, 2)\n      .join(', ')\n      .concat(` and ${typers.at(-1)} are typing`);\n  else\n    return typers\n      .slice(0, 2)\n      .join(', ')\n      .concat(` and ${typers.length - 2} others are typing`);\n};\n\nexport const getUsersOnlineCount = (onlineUsers, chatUsers, currentUser) => {\n  let count = 0;\n  onlineUsers.forEach(onlineUser => {\n    const [, userId] = onlineUser;\n    if (userId === currentUser._id) return;\n    chatUsers.forEach(chatUser => {\n      if (userId === chatUser._id) {\n        count++;\n      }\n    });\n    // if (user !== currentUser._id) {\n    //   count++;\n    // }\n  });\n  // console.log('count from utils', count);\n  return count;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}