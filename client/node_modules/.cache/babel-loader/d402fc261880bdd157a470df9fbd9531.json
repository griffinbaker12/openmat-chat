{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/contexts/socket-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuthentication } from './authentication-context';\nimport { useChatView } from './chat-view-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n\n  return useContext(SocketContext);\n};\n\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst ENDPOINT = 'http://localhost:4000';\nexport const SocketProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [socket, setSocket] = useState();\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const {\n    currentUser\n  } = useAuthentication();\n  useEffect(() => {\n    if (!currentUser) return;\n    const newSocket = io(ENDPOINT);\n    newSocket.emit('setup', currentUser._id);\n    setSocket(newSocket);\n    newSocket.on('logged in user change', users => {\n      console.log('logged in user change from client');\n      const userIdArr = users.map(_ref2 => {\n        let [userId, socketId] = _ref2;\n        return userId;\n      });\n      setOnlineUsers(userIdArr);\n    });\n    return () => {\n      console.log('from inside the UE on the client');\n      newSocket.off('logged in user change');\n      newSocket.emit('log out', currentUser._id);\n      setOnlineUsers(prevState => {\n        const newOnlineUsers = prevState.filter(user => user !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser._id));\n        return newOnlineUsers;\n      });\n    };\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      onlineUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SocketProvider, \"r9cueg8kJwXm3paX31NeK1HwIUU=\", false, function () {\n  return [useAuthentication];\n});\n\n_c = SocketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","io","useAuthentication","useChatView","SocketContext","useSocket","ENDPOINT","SocketProvider","children","socket","setSocket","onlineUsers","setOnlineUsers","currentUser","newSocket","emit","_id","on","users","console","log","userIdArr","map","userId","socketId","off","prevState","newOnlineUsers","filter","user"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/contexts/socket-context.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuthentication } from './authentication-context';\nimport { useChatView } from './chat-view-context';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => useContext(SocketContext);\n\nconst ENDPOINT = 'http://localhost:4000';\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState();\n  const [onlineUsers, setOnlineUsers] = useState([]);\n\n  const { currentUser } = useAuthentication();\n\n  useEffect(() => {\n    if (!currentUser) return;\n    const newSocket = io(ENDPOINT);\n    newSocket.emit('setup', currentUser._id);\n    setSocket(newSocket);\n    newSocket.on('logged in user change', users => {\n      console.log('logged in user change from client');\n      const userIdArr = users.map(([userId, socketId]) => userId);\n      setOnlineUsers(userIdArr);\n    });\n    return () => {\n      console.log('from inside the UE on the client');\n      newSocket.off('logged in user change');\n      newSocket.emit('log out', currentUser._id);\n      setOnlineUsers(prevState => {\n        const newOnlineUsers = prevState.filter(\n          user => user !== currentUser?._id\n        );\n        return newOnlineUsers;\n      });\n    };\n  }, [currentUser]);\n\n  return (\n    <SocketContext.Provider value={{ socket, onlineUsers }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,MAAMC,aAAa,gBAAGP,aAAa,EAAnC;AAEA,OAAO,MAAMQ,SAAS,GAAG;EAAA;;EAAA,OAAMP,UAAU,CAACM,aAAD,CAAhB;AAAA,CAAlB;;GAAMC,S;;AAEb,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC9C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAM;IAAEa;EAAF,IAAkBX,iBAAiB,EAAzC;EAEAH,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,WAAL,EAAkB;IAClB,MAAMC,SAAS,GAAGb,EAAE,CAACK,QAAD,CAApB;IACAQ,SAAS,CAACC,IAAV,CAAe,OAAf,EAAwBF,WAAW,CAACG,GAApC;IACAN,SAAS,CAACI,SAAD,CAAT;IACAA,SAAS,CAACG,EAAV,CAAa,uBAAb,EAAsCC,KAAK,IAAI;MAC7CC,OAAO,CAACC,GAAR,CAAY,mCAAZ;MACA,MAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAU;QAAA,IAAC,CAACC,MAAD,EAASC,QAAT,CAAD;QAAA,OAAwBD,MAAxB;MAAA,CAAV,CAAlB;MACAX,cAAc,CAACS,SAAD,CAAd;IACD,CAJD;IAKA,OAAO,MAAM;MACXF,OAAO,CAACC,GAAR,CAAY,kCAAZ;MACAN,SAAS,CAACW,GAAV,CAAc,uBAAd;MACAX,SAAS,CAACC,IAAV,CAAe,SAAf,EAA0BF,WAAW,CAACG,GAAtC;MACAJ,cAAc,CAACc,SAAS,IAAI;QAC1B,MAAMC,cAAc,GAAGD,SAAS,CAACE,MAAV,CACrBC,IAAI,IAAIA,IAAI,MAAKhB,WAAL,aAAKA,WAAL,uBAAKA,WAAW,CAAEG,GAAlB,CADS,CAAvB;QAGA,OAAOW,cAAP;MACD,CALa,CAAd;IAMD,CAVD;EAWD,CArBQ,EAqBN,CAACd,WAAD,CArBM,CAAT;EAuBA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEJ,MAAF;MAAUE;IAAV,CAA/B;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAlCM;;IAAMD,c;UAIaL,iB;;;KAJbK,c"},"metadata":{},"sourceType":"module"}