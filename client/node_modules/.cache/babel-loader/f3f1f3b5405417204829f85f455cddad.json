{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/login/login.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport Spinner from '../spinner/spinner.component';\nimport { toast } from 'react-toastify';\nimport './login.styles.scss';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [text, setText] = useState({\n    emailOrUserName: '',\n    password: ''\n  });\n  const {\n    changeAuth,\n    setCurrentUser,\n    isLoading,\n    setIsLoading\n  } = useAuthentication();\n  const {\n    fetchChats\n  } = useChatView();\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    if (!text.emailOrUserName) {\n      toast.error('Please enter all fields', {\n        position: 'bottom-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark'\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    fetch('http://localhost:4000/api/user/login', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        emailOrUserName: text.emailOrUserName,\n        password: text.password\n      })\n    }).then(res => res.json()).then(data => {\n      setCurrentUser(data);\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      setIsLoading(false);\n      fetchChats(data.token).then(() => {\n        navigate('/chat');\n        toast.success('Login success', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark'\n        });\n      });\n    }).catch(err => {\n      setIsLoading(false);\n      toast.error('Invalid user credentials', {\n        position: 'bottom-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark'\n      });\n    }); // Definitely room here as well for showing a toast icon that will pop up when the user either is or is not successful in signing up and for what reason. For that reason alone and how clean it is it makes me want to use chakra ui.\n    // Same idea here, instead of an alert window, could just render a nice and clean toast icon that will either be on or off depending on the state that you can pass it as a property\n  };\n\n  const handleChange = e => {\n    const name = e.target.getAttribute('name');\n    setText(prevState => {\n      return { ...prevState,\n        [name]: e.target.value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"login-article\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"login-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-measure\",\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"login-fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"login-legend\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-legend-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"emailOrUserName\",\n              className: \"login-legend-label\",\n              children: \"Email / Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              className: \"login-legend-input\",\n              type: \"text\",\n              name: \"emailOrUserName\",\n              id: \"emailOrUserName\",\n              value: text.email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-legend-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"login-legend-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              className: \"login-legend-input\",\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              value: text.password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-input\",\n          type: \"button\",\n          onClick: handleLogin,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 26\n          }, this) : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: changeAuth,\n          className: \"register-text\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"sIKmHLDS7XvB6dC/3LI8szWwhOk=\", false, function () {\n  return [useAuthentication, useChatView, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","useAuthentication","Spinner","toast","useChatView","Login","text","setText","emailOrUserName","password","changeAuth","setCurrentUser","isLoading","setIsLoading","fetchChats","navigate","handleLogin","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","fetch","method","headers","body","JSON","stringify","then","res","json","data","localStorage","setItem","token","success","catch","err","handleChange","e","name","target","getAttribute","prevState","value","email"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/login/login.component.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport Spinner from '../spinner/spinner.component';\nimport { toast } from 'react-toastify';\nimport './login.styles.scss';\nimport { useChatView } from '../../contexts/chat-view-context';\n\nconst Login = () => {\n  const [text, setText] = useState({ emailOrUserName: '', password: '' });\n\n  const { changeAuth, setCurrentUser, isLoading, setIsLoading } =\n    useAuthentication();\n\n  const { fetchChats } = useChatView();\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    if (!text.emailOrUserName) {\n      toast.error('Please enter all fields', {\n        position: 'bottom-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n      return;\n    }\n    setIsLoading(true);\n    fetch('http://localhost:4000/api/user/login', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        emailOrUserName: text.emailOrUserName,\n        password: text.password,\n      }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setCurrentUser(data);\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        setIsLoading(false);\n        fetchChats(data.token).then(() => {\n          navigate('/chat');\n          toast.success('Login success', {\n            position: 'bottom-center',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          });\n        });\n      })\n      .catch(err => {\n        setIsLoading(false);\n        toast.error('Invalid user credentials', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'dark',\n        });\n      });\n\n    // Definitely room here as well for showing a toast icon that will pop up when the user either is or is not successful in signing up and for what reason. For that reason alone and how clean it is it makes me want to use chakra ui.\n\n    // Same idea here, instead of an alert window, could just render a nice and clean toast icon that will either be on or off depending on the state that you can pass it as a property\n  };\n\n  const handleChange = e => {\n    const name = e.target.getAttribute('name');\n    setText(prevState => {\n      return {\n        ...prevState,\n        [name]: e.target.value,\n      };\n    });\n  };\n\n  return (\n    <article className=\"login-article\">\n      <main className=\"login-main\">\n        <div className=\"login-measure\">\n          <fieldset className=\"login-fieldset\">\n            <legend className=\"login-legend\">Sign In</legend>\n            <div className=\"login-legend-input-container\">\n              <label htmlFor=\"emailOrUserName\" className=\"login-legend-label\">\n                Email / Username\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"login-legend-input\"\n                type=\"text\"\n                name=\"emailOrUserName\"\n                id=\"emailOrUserName\"\n                value={text.email}\n                required\n              />\n            </div>\n            <div className=\"login-legend-input-container\">\n              <label htmlFor=\"password\" className=\"login-legend-label\">\n                Password\n              </label>\n              <input\n                onChange={handleChange}\n                className=\"login-legend-input\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                value={text.password}\n                required\n              />\n            </div>\n          </fieldset>\n          <button className=\"login-input\" type=\"button\" onClick={handleLogin}>\n            {isLoading ? <Spinner /> : 'Sign In'}\n          </button>\n          <p onClick={changeAuth} className=\"register-text\">\n            Register\n          </p>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}