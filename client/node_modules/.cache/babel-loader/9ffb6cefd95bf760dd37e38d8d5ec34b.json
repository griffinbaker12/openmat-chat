{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/new-conversation-modal/new-conversation-modal.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport ChatParticipant from '../chat-participant/chat-participant.component';\nimport './new-conversation-modal.styles.scss'; // There seems to also totally be room to just have one modal component, and also a genreal button component as well, but for the modal, essentially I can just pass in the name of the modal itself, and then the body of the modal. The 'children' can just be the unique part of the actual form for these components that gets inserted into the overall block of the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewConversationModal = _ref => {\n  _s();\n\n  let {\n    closeModal\n  } = _ref;\n  const [chatParticipants, setChatParticipants] = useState([]);\n  const usernameRef = useRef(); // const nameRef = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault(); // createContact(usernameRef.current.value, nameRef.current.value)\n\n    closeModal();\n    usernameRef.current.value = ''; // Also need to clear the form here as well\n  };\n\n  const handleAddUser = () => {\n    const user = usernameRef.current.value; // Will need to do some check to see if the actual user exists in the database or not\n    // If they do exist...\n    // This user may also at some point may also have some data on them besides just the username, but suffices for now\n\n    setChatParticipants(prevState => [...prevState, {\n      userName: user\n    }]);\n    usernameRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-conversation-modal-body\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: usernameRef,\n        type: \"text\",\n        required: chatParticipants.length > 0 ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-conversation-modal-chat-participant-container\",\n        children: chatParticipants.length !== 0 && chatParticipants.map((chatParticipant, i) => /*#__PURE__*/_jsxDEV(ChatParticipant, {\n          chatParticipant: chatParticipant\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-conversation-modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddUser,\n          type: \"button\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewConversationModal, \"rdnKid4feZayO1hK8LTsaqYi8rM=\");\n\n_c = NewConversationModal;\nexport default NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"names":["useRef","useState","ChatParticipant","NewConversationModal","closeModal","chatParticipants","setChatParticipants","usernameRef","handleSubmit","e","preventDefault","current","value","handleAddUser","user","prevState","userName","length","map","chatParticipant","i"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/new-conversation-modal/new-conversation-modal.component.jsx"],"sourcesContent":["import { useRef, useState } from 'react';\nimport ChatParticipant from '../chat-participant/chat-participant.component';\nimport './new-conversation-modal.styles.scss';\n\n// There seems to also totally be room to just have one modal component, and also a genreal button component as well, but for the modal, essentially I can just pass in the name of the modal itself, and then the body of the modal. The 'children' can just be the unique part of the actual form for these components that gets inserted into the overall block of the component\n\nconst NewConversationModal = ({ closeModal }) => {\n  const [chatParticipants, setChatParticipants] = useState([]);\n  const usernameRef = useRef();\n  // const nameRef = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // createContact(usernameRef.current.value, nameRef.current.value)\n\n    closeModal();\n    usernameRef.current.value = '';\n    // Also need to clear the form here as well\n  };\n\n  const handleAddUser = () => {\n    const user = usernameRef.current.value;\n    // Will need to do some check to see if the actual user exists in the database or not\n    // If they do exist...\n    // This user may also at some point may also have some data on them besides just the username, but suffices for now\n    setChatParticipants(prevState => [...prevState, { userName: user }]);\n    usernameRef.current.value = '';\n  };\n\n  return (\n    <div className=\"new-conversation-modal-body\">\n      <form onSubmit={handleSubmit}>\n        <label>Username</label>\n        <input\n          ref={usernameRef}\n          type=\"text\"\n          required={chatParticipants.length > 0 ? false : true}\n        />\n        <div className=\"new-conversation-modal-chat-participant-container\">\n          {chatParticipants.length !== 0 &&\n            chatParticipants.map((chatParticipant, i) => (\n              <ChatParticipant key={i} chatParticipant={chatParticipant} />\n            ))}\n        </div>\n        <div className=\"new-conversation-modal-buttons\">\n          <button onClick={handleAddUser} type=\"button\">\n            Add User\n          </button>\n          <button type=\"submit\">Create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default NewConversationModal;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AACA,OAAO,sCAAP,C,CAEA;;;;AAEA,MAAMC,oBAAoB,GAAG,QAAoB;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EAC/C,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAMM,WAAW,GAAGP,MAAM,EAA1B,CAF+C,CAG/C;;EAEA,MAAMQ,YAAY,GAAGC,CAAC,IAAI;IACxBA,CAAC,CAACC,cAAF,GADwB,CAExB;;IAEAN,UAAU;IACVG,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B,CALwB,CAMxB;EACD,CAPD;;EASA,MAAMC,aAAa,GAAG,MAAM;IAC1B,MAAMC,IAAI,GAAGP,WAAW,CAACI,OAAZ,CAAoBC,KAAjC,CAD0B,CAE1B;IACA;IACA;;IACAN,mBAAmB,CAACS,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAe;MAAEC,QAAQ,EAAEF;IAAZ,CAAf,CAAd,CAAnB;IACAP,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;EACD,CAPD;;EASA,oBACE;IAAK,SAAS,EAAC,6BAAf;IAAA,uBACE;MAAM,QAAQ,EAAEJ,YAAhB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAED,WADP;QAEE,IAAI,EAAC,MAFP;QAGE,QAAQ,EAAEF,gBAAgB,CAACY,MAAjB,GAA0B,CAA1B,GAA8B,KAA9B,GAAsC;MAHlD;QAAA;QAAA;QAAA;MAAA,QAFF,eAOE;QAAK,SAAS,EAAC,mDAAf;QAAA,UACGZ,gBAAgB,CAACY,MAAjB,KAA4B,CAA5B,IACCZ,gBAAgB,CAACa,GAAjB,CAAqB,CAACC,eAAD,EAAkBC,CAAlB,kBACnB,QAAC,eAAD;UAAyB,eAAe,EAAED;QAA1C,GAAsBC,CAAtB;UAAA;UAAA;UAAA;QAAA,QADF;MAFJ;QAAA;QAAA;QAAA;MAAA,QAPF,eAaE;QAAK,SAAS,EAAC,gCAAf;QAAA,wBACE;UAAQ,OAAO,EAAEP,aAAjB;UAAgC,IAAI,EAAC,QAArC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CA/CD;;GAAMV,oB;;KAAAA,oB;AAiDN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}