{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-view/chat-view.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport MessageView from '../message-view/message-view.component';\nimport TextHeader from '../text-header/text-header.component';\nimport Spinner from '../spinner/spinner.component';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport BackArrow from '../back-arrow/back-arrow.component';\nimport './chat-view.styles.scss';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useSocket } from '../../contexts/socket-context';\nimport { defaultToast, TOAST_TYPE } from '../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatView = () => {\n  _s();\n\n  const {\n    setActiveView,\n    setActiveChat,\n    activeChat,\n    isChatViewLoading,\n    activeView,\n    windowDimensions,\n    chats,\n    setNotifications,\n    setMessages\n  } = useChatView();\n  const {\n    currentUser\n  } = useAuthentication();\n  const {\n    socket\n  } = useSocket();\n  const [isTyping, setIsTyping] = useState(false);\n\n  const handleBackArrowClick = () => {\n    setActiveView('chat-preview');\n    setActiveChat([]);\n  };\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('msg-received', async message => {\n      var _activeChat$, _activeChat$2;\n\n      console.log('the message', message);\n\n      if (!((_activeChat$ = activeChat[0]) !== null && _activeChat$ !== void 0 && _activeChat$._id) || message.chat._id !== ((_activeChat$2 = activeChat[0]) === null || _activeChat$2 === void 0 ? void 0 : _activeChat$2._id)) {\n        try {\n          console.log('the message', message);\n          const response = await fetch(`http://localhost:4000/api/notification/addNotification`, {\n            method: 'post',\n            headers: {\n              Authorization: `Bearer ${currentUser === null || currentUser === void 0 ? void 0 : currentUser.token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              message,\n              test: 'sloth sloth'\n            })\n          });\n          const notification = await response.json();\n          setNotifications(prevState => [...prevState, notification]);\n        } catch (error) {\n          defaultToast(TOAST_TYPE.error, 'Error setting notifications');\n        }\n      } else {\n        setIsTyping(false);\n        setMessages(prevState => [...prevState, message]);\n      }\n    });\n    return () => socket.off('msg-received');\n  }, [socket, activeChat, setNotifications, currentUser === null || currentUser === void 0 ? void 0 : currentUser.token, setMessages, setIsTyping]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: windowDimensions.width > 900 ? {\n      width: '68%'\n    } : activeView === 'chat' ? {\n      width: '100%'\n    } : {\n      display: 'none'\n    },\n    className: `chat-view-container ${activeChat.length > 0 && 'active-chat'}`,\n    children: isChatViewLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      type: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : activeChat.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageView, {\n        isTyping: isTyping,\n        setIsTyping: setIsTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-or-select-chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: chats.length === 0 ? 'Create a chat to get started!' : 'Select a chat to view!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: windowDimensions.width > 900 ? {\n          display: 'none'\n        } : {\n          display: 'flex'\n        },\n        onClick: handleBackArrowClick,\n        children: /*#__PURE__*/_jsxDEV(BackArrow, {\n          arrowType: 'body'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatView, \"S8U9L8QbQ0Av6w2LqGLAQ2mR3Nk=\", false, function () {\n  return [useChatView, useAuthentication, useSocket];\n});\n\n_c = ChatView;\nexport default ChatView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"names":["useEffect","useState","MessageView","TextHeader","Spinner","useChatView","BackArrow","useAuthentication","useSocket","defaultToast","TOAST_TYPE","ChatView","setActiveView","setActiveChat","activeChat","isChatViewLoading","activeView","windowDimensions","chats","setNotifications","setMessages","currentUser","socket","isTyping","setIsTyping","handleBackArrowClick","on","message","console","log","_id","chat","response","fetch","method","headers","Authorization","token","body","JSON","stringify","test","notification","json","prevState","error","off","width","display","length"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/chat-view/chat-view.component.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport MessageView from '../message-view/message-view.component';\nimport TextHeader from '../text-header/text-header.component';\nimport Spinner from '../spinner/spinner.component';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport BackArrow from '../back-arrow/back-arrow.component';\nimport './chat-view.styles.scss';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useSocket } from '../../contexts/socket-context';\nimport { defaultToast, TOAST_TYPE } from '../../utils/utils';\n\nconst ChatView = () => {\n  const {\n    setActiveView,\n    setActiveChat,\n    activeChat,\n    isChatViewLoading,\n    activeView,\n    windowDimensions,\n    chats,\n    setNotifications,\n    setMessages,\n  } = useChatView();\n  const { currentUser } = useAuthentication();\n  const { socket } = useSocket();\n  const [isTyping, setIsTyping] = useState(false);\n\n  const handleBackArrowClick = () => {\n    setActiveView('chat-preview');\n    setActiveChat([]);\n  };\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('msg-received', async message => {\n      console.log('the message', message);\n      if (!activeChat[0]?._id || message.chat._id !== activeChat[0]?._id) {\n        try {\n          console.log('the message', message);\n          const response = await fetch(\n            `http://localhost:4000/api/notification/addNotification`,\n            {\n              method: 'post',\n              headers: {\n                Authorization: `Bearer ${currentUser?.token}`,\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                message,\n                test: 'sloth sloth',\n              }),\n            }\n          );\n          const notification = await response.json();\n          setNotifications(prevState => [...prevState, notification]);\n        } catch (error) {\n          defaultToast(TOAST_TYPE.error, 'Error setting notifications');\n        }\n      } else {\n        setIsTyping(false);\n        setMessages(prevState => [...prevState, message]);\n      }\n    });\n    return () => socket.off('msg-received');\n  }, [\n    socket,\n    activeChat,\n    setNotifications,\n    currentUser?.token,\n    setMessages,\n    setIsTyping,\n  ]);\n\n  return (\n    <div\n      style={\n        windowDimensions.width > 900\n          ? { width: '68%' }\n          : activeView === 'chat'\n          ? { width: '100%' }\n          : { display: 'none' }\n      }\n      className={`chat-view-container ${\n        activeChat.length > 0 && 'active-chat'\n      }`}\n    >\n      {isChatViewLoading ? (\n        <Spinner type=\"search\" />\n      ) : activeChat.length > 0 ? (\n        <>\n          <TextHeader />\n          <MessageView isTyping={isTyping} setIsTyping={setIsTyping} />\n        </>\n      ) : (\n        <div className=\"create-or-select-chat-container\">\n          <p>\n            {chats.length === 0\n              ? 'Create a chat to get started!'\n              : 'Select a chat to view!'}\n          </p>\n          <div\n            style={\n              windowDimensions.width > 900\n                ? { display: 'none' }\n                : { display: 'flex' }\n            }\n            onClick={handleBackArrowClick}\n          >\n            <BackArrow arrowType={'body'} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}