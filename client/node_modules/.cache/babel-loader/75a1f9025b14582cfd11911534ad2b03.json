{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/contexts/contacts-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport { useAuthentication } from './authentication-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactsContext = /*#__PURE__*/createContext();\nexport const useContacts = () => {\n  _s();\n\n  return useContext(ContactsContext);\n};\n\n_s(useContacts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const ContactsProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useAuthentication();\n  const [currentContact, setCurrentContact] = useState('');\n  const [friends, setFriends] = useState(currentUser === null || currentUser === void 0 ? void 0 : currentUser.friends);\n  console.log(friends); // Also need a route where you can add the friend of a person and check if the id of the person is already there amongst your friends, and if it is then do not send the request\n  // const addFriend = userName =>\n  //   setFriends(prevState => [...prevState, { userName }]);\n  // Whenever you look at the profile of some other user should have a button where you can remove them...\n\n  return /*#__PURE__*/_jsxDEV(ContactsContext.Provider, {\n    value: {\n      friends,\n      setFriends,\n      currentContact,\n      setCurrentContact\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ContactsProvider, \"y68CLcH5mbS7N1IpV2Px0rnRH+U=\", false, function () {\n  return [useAuthentication];\n});\n\n_c = ContactsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useAuthentication","ContactsContext","useContacts","ContactsProvider","children","currentUser","currentContact","setCurrentContact","friends","setFriends","console","log"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/contexts/contacts-context.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\nimport { useAuthentication } from './authentication-context';\n\nconst ContactsContext = createContext();\n\nexport const useContacts = () => useContext(ContactsContext);\n\nexport const ContactsProvider = ({ children }) => {\n  const { currentUser } = useAuthentication();\n  const [currentContact, setCurrentContact] = useState('');\n  const [friends, setFriends] = useState(currentUser?.friends);\n  console.log(friends);\n\n  // Also need a route where you can add the friend of a person and check if the id of the person is already there amongst your friends, and if it is then do not send the request\n  // const addFriend = userName =>\n  //   setFriends(prevState => [...prevState, { userName }]);\n\n  // Whenever you look at the profile of some other user should have a button where you can remove them...\n\n  return (\n    <ContactsContext.Provider\n      value={{ friends, setFriends, currentContact, setCurrentContact }}\n    >\n      {children}\n    </ContactsContext.Provider>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;;AAEA,MAAMC,eAAe,gBAAGJ,aAAa,EAArC;AAEA,OAAO,MAAMK,WAAW,GAAG;EAAA;;EAAA,OAAMJ,UAAU,CAACG,eAAD,CAAhB;AAAA,CAApB;;GAAMC,W;;AAEb,OAAO,MAAMC,gBAAgB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAChD,MAAM;IAAEC;EAAF,IAAkBL,iBAAiB,EAAzC;EACA,MAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACM,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEG,OAAd,CAAtC;EACAE,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAJgD,CAMhD;EACA;EACA;EAEA;;EAEA,oBACE,QAAC,eAAD,CAAiB,QAAjB;IACE,KAAK,EAAE;MAAEA,OAAF;MAAWC,UAAX;MAAuBH,cAAvB;MAAuCC;IAAvC,CADT;IAAA,UAGGH;EAHH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAnBM;;IAAMD,gB;UACaH,iB;;;KADbG,gB"},"metadata":{},"sourceType":"module"}