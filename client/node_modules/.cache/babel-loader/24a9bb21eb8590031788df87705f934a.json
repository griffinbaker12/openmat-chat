{"ast":null,"code":"var _jsxFileName = \"/Users/griffinbaker/Desktop/chat-application/client/src/components/user-info-dropdown/user-info-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { areFriends } from '../../utils/utils';\nimport './user-info-dropdown.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfoDropdown = _ref => {\n  _s();\n\n  let {\n    closeDropDown\n  } = _ref;\n  const {\n    currentUser\n  } = useAuthentication();\n  const {\n    activeUserInfo,\n    chats,\n    setChats,\n    setActiveChat,\n    closeModal,\n    activeChat\n  } = useChatView();\n  console.log(activeChat);\n  const areFriendsBool = useMemo(() => areFriends(currentUser, activeUserInfo), [currentUser, activeUserInfo]);\n\n  const handleChatCreation = e => {\n    e.stopPropagation();\n    const soloChats = chats.filter(chat => !chat.isGroupChat);\n    const existingChat = soloChats.find(chat => chat.users.some(user => user._id === activeUserInfo._id));\n    console.log(existingChat);\n\n    if (existingChat) {\n      closeModal();\n      closeDropDown();\n      setActiveChat([existingChat]);\n      return;\n    }\n  };\n\n  const handleFriendRequest = e => {\n    e.stopPropagation();\n    console.log('hey from friend request'); // Thinking that you could just add them as a friend in the current user, and then when you get a response from the other side, either add them as a friend for that user, or, if they reject, then delete them from the current user's friend list (maybe with a pending flag or something like that)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `user-info-dropdown-container ${areFriendsBool ? 'friends' : 'not-friends'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFriendRequest,\n      className: `user-info-dropdown-friend-status-container ${areFriendsBool ? 'friends' : 'not-friends'}`,\n      children: `${areFriendsBool ? 'Remove' : 'Add'} Friend`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChatCreation,\n      className: \"user-info-dropdown-send-message-container\",\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserInfoDropdown, \"PvdvDnhmce5gz51mjgnLBHAHueE=\", false, function () {\n  return [useAuthentication, useChatView];\n});\n\n_c = UserInfoDropdown;\nexport default UserInfoDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoDropdown\");","map":{"version":3,"names":["useMemo","useAuthentication","useChatView","areFriends","UserInfoDropdown","closeDropDown","currentUser","activeUserInfo","chats","setChats","setActiveChat","closeModal","activeChat","console","log","areFriendsBool","handleChatCreation","e","stopPropagation","soloChats","filter","chat","isGroupChat","existingChat","find","users","some","user","_id","handleFriendRequest"],"sources":["/Users/griffinbaker/Desktop/chat-application/client/src/components/user-info-dropdown/user-info-dropdown.component.jsx"],"sourcesContent":["import { useMemo } from 'react';\nimport { useAuthentication } from '../../contexts/authentication-context';\nimport { useChatView } from '../../contexts/chat-view-context';\nimport { areFriends } from '../../utils/utils';\nimport './user-info-dropdown.styles.scss';\n\nconst UserInfoDropdown = ({ closeDropDown }) => {\n  const { currentUser } = useAuthentication();\n  const {\n    activeUserInfo,\n    chats,\n    setChats,\n    setActiveChat,\n    closeModal,\n    activeChat,\n  } = useChatView();\n\n  console.log(activeChat);\n\n  const areFriendsBool = useMemo(\n    () => areFriends(currentUser, activeUserInfo),\n    [currentUser, activeUserInfo]\n  );\n\n  const handleChatCreation = e => {\n    e.stopPropagation();\n\n    const soloChats = chats.filter(chat => !chat.isGroupChat);\n\n    const existingChat = soloChats.find(chat =>\n      chat.users.some(user => user._id === activeUserInfo._id)\n    );\n\n    console.log(existingChat);\n\n    if (existingChat) {\n      closeModal();\n      closeDropDown();\n      setActiveChat([existingChat]);\n      return;\n    }\n  };\n\n  const handleFriendRequest = e => {\n    e.stopPropagation();\n    console.log('hey from friend request');\n    // Thinking that you could just add them as a friend in the current user, and then when you get a response from the other side, either add them as a friend for that user, or, if they reject, then delete them from the current user's friend list (maybe with a pending flag or something like that)\n  };\n\n  return (\n    <div\n      className={`user-info-dropdown-container ${\n        areFriendsBool ? 'friends' : 'not-friends'\n      }`}\n    >\n      <button\n        onClick={handleFriendRequest}\n        className={`user-info-dropdown-friend-status-container ${\n          areFriendsBool ? 'friends' : 'not-friends'\n        }`}\n      >{`${areFriendsBool ? 'Remove' : 'Add'} Friend`}</button>\n      <button\n        onClick={handleChatCreation}\n        className=\"user-info-dropdown-send-message-container\"\n      >\n        Send Message\n      </button>\n    </div>\n  );\n};\nexport default UserInfoDropdown;\n"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,kCAAP;;;AAEA,MAAMC,gBAAgB,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EAC9C,MAAM;IAAEC;EAAF,IAAkBL,iBAAiB,EAAzC;EACA,MAAM;IACJM,cADI;IAEJC,KAFI;IAGJC,QAHI;IAIJC,aAJI;IAKJC,UALI;IAMJC;EANI,IAOFV,WAAW,EAPf;EASAW,OAAO,CAACC,GAAR,CAAYF,UAAZ;EAEA,MAAMG,cAAc,GAAGf,OAAO,CAC5B,MAAMG,UAAU,CAACG,WAAD,EAAcC,cAAd,CADY,EAE5B,CAACD,WAAD,EAAcC,cAAd,CAF4B,CAA9B;;EAKA,MAAMS,kBAAkB,GAAGC,CAAC,IAAI;IAC9BA,CAAC,CAACC,eAAF;IAEA,MAAMC,SAAS,GAAGX,KAAK,CAACY,MAAN,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,WAA3B,CAAlB;IAEA,MAAMC,YAAY,GAAGJ,SAAS,CAACK,IAAV,CAAeH,IAAI,IACtCA,IAAI,CAACI,KAAL,CAAWC,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAarB,cAAc,CAACqB,GAApD,CADmB,CAArB;IAIAf,OAAO,CAACC,GAAR,CAAYS,YAAZ;;IAEA,IAAIA,YAAJ,EAAkB;MAChBZ,UAAU;MACVN,aAAa;MACbK,aAAa,CAAC,CAACa,YAAD,CAAD,CAAb;MACA;IACD;EACF,CAjBD;;EAmBA,MAAMM,mBAAmB,GAAGZ,CAAC,IAAI;IAC/BA,CAAC,CAACC,eAAF;IACAL,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAF+B,CAG/B;EACD,CAJD;;EAMA,oBACE;IACE,SAAS,EAAG,gCACVC,cAAc,GAAG,SAAH,GAAe,aAC9B,EAHH;IAAA,wBAKE;MACE,OAAO,EAAEc,mBADX;MAEE,SAAS,EAAG,8CACVd,cAAc,GAAG,SAAH,GAAe,aAC9B,EAJH;MAAA,UAKG,GAAEA,cAAc,GAAG,QAAH,GAAc,KAAM;IALvC;MAAA;MAAA;MAAA;IAAA,QALF,eAWE;MACE,OAAO,EAAEC,kBADX;MAEE,SAAS,EAAC,2CAFZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA/DD;;GAAMZ,gB;UACoBH,iB,EAQpBC,W;;;KATAE,gB;AAgEN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}