1) First things first is to make that login page so that I can generate an ID for each user, store them in the DB in the users collection

- Include a sign in and sign up page very similar to the one that we used for the smart-brain app, this time using mongodb
-> Once this person signs in, we receive an id back from mongo that can be the identifier for that person
-> Can secure the password as well using bcrypt

- In the application itself, obviously need to make everything work so that the messages for each chat show up

DATA ORGANIZATION:
- I am thinking that each chat room will also have an identifier saved with it as well

DIFFERENT IDS THAT I NEED:
- USER ID
- CHAT ID, WHICH CONTAINS THE USER IDS

KEEP IN MIND THAT IN EACH FETCH THAT WE ARE GOING TO MAKE TO OUR BACKEND, THAT INSIDE THE FETCH WE CAN JUST ESSENTIALLY CONSTRUCT THESE ROUTES OURSELF AND WE NEED TO HAVE MATCHING ROUTES IN OUR BACKEND THAT CAN RESPOND WITH WHAT WE WANT THEM TO

IN MY AUTHENTICATION PROVIDER, I CAN ALSO GET AND ADD THE CURRENT USER, SO THAT IS PERFECT TO THEN BE ABLE TO SHARE THAT INFORMATION ACROSS THE REST OF THE APPLICATION

IN THE DROPDOWN THAT I AM GOING TO INCLUDE, MAYBE HAVE A LITTLE THING AS WELL WHERE IT CAN SHOW YOU WHERE ALL OF YOUR FRIEND REQUESTS ARE, WOULD ALSO BE COOL TO HAVE YOUR MESSAGES UPDATED AND YOU CAN SEE IF YOU HAVE READ IT OR NOT (NOT SURE IF WE ARE GOING TO IMPLEMENT THAT OR NOT BUT THAT WOULD BE PRETTY COOL)

ALSO WHETHER OR NOT SOMEONE IS ONLINE COULD BE A COOL FEATURE AS WELL

YOU WANT TO UPLOAD THE PICTURES THAT THE USERS UPLOAD TO THE CLOUD BECUASE HOW ELSE WILL YOU BE ABLE TO ACCESS THEM FROM INSIDE THE APPLICATION?

YOU GENERATE THESE TOKENS FOR PEOPLE THAT YOU DON'T ACTUALLY NEED TO STORE ANYWHERE, YOU JUST NEED TO CHECK IF THEY WERE VALIDLY GENERATED BY CKECING THE TOEKN THAT THEY RECEIVED AND THEN YOUR SECRET KEY AND THEN THEY WILL BE ABLE TO EXTRACT FORM THAT THE ID

SO I THINK THERE IS SOMETHING WHERE IF YOU DON'T POPULATE THE OBJECT, IT JUST REMAINS AS THE ACTUAL OBJECT ID SINCE THAT IS WHAT YOU SAY THE TYPE IS ACTUALLY GOING TO BE, BUT YOU CAN THEN POPULATE THE DATA IN LIEU OF THE ACTUAL ID IN THE DATA STRUCTURE

SO MY UNDERSTANDING IS THAT YOU CAN MATCH BY THE OBJECT ID, BUT IF YOU WANT TO FILL IN THE ACTUAL FIELDS IN THE DATA THAT YOU SEND BACK THEN YOU NEED TO "POPULATE", SO THIS IS RELEVANT WHEN YOU ARE FINDING THINGS BASED ON A PROPERTY WHICH IS OF TYPE OBJECT.ID

HOW DOES CONTEXT ACTUALLY WORK IN REACT BECAUSE IT IS SUCH A COOL CONCEPT, IT IS LIKE YOU ARE JUST CREATING AN OBJECT THAT ESSENTIALLY YOU KEEP IN MEMORY WITH CLOSURES AND CAN ACCESS FROM DIFFERENT FUNCTIONS AND THERE IS ONLY ONE OF THESE STATE OBJECTS SO THAT IT CAN RETAIN A CONNECTION

ONCE YOU START STORING FRIENDS AS WELL I WOULD THINK THAT IT WOULD ACTUALLY BE PRETTY EASY TO JUST PULL IN SOMEONE ELSE'S FRIENDS ONCE YOU HAVE THEIR ID SO THAT YOU CAN FIND IT IN THE DB

COULD POTENTIALLY ALSO INCLUDE A AN IMAGE OF WHO ACTUALLY SENDS THE MESSAGE LIKE IN DISCORD

YOU WOULD ALSO HAVE THE CHAT RESULTS AND ALL OF THAT DATA ALREADY ON THE CLIENT SIDE I GUESS, SO THEN IT WOULD JUST BE A MATTER OF SORTING THROUGH THE DATA THAT YOU ALREADY PULLED AND THAT EXISTS CLIENT SIDE RIGHT? SO WHEN THE USER LOGS IN YOU PULL THEIR CONVERSATIONS AND FRIENDS AND HAVE THEM DISPLAY ON THE LEFT AND THEN SEARCHING IS JUST A FUNCTION OF SORTING THROUGH THAT STUFF? YEAH

SO WHEN YOU GO TO CREATE A CHAT AND THEN IF YOU DO NOT FIND A CHAT WITH THOSE PEOPLE, THEN YOU CAN ACTUALLY CREATE IT AND INCLUDE IT

ADD FRIENDS TO THE USER MODEL THAT NEED TO GET ADDED IN SO THAT THEIR FRIENDS LOAD AND THEN ACTUALLY CAN GET LOADED IN

I ALSO WILL BE USING THAT SEARCH ALL THE USERS ROUTE WHEN I GO TO ADD A FRIEND BECAUSE IF IT MATCHES NAYTHING AT ALL THEN YOU SHOULD BE ABLE TO FRIEND THA TPERSON SO NEED TO BE RETURNING AT LEAST A SEGMENT OF THE FRIENDS FOR WHOM THAT THERE IS A MATCH

FOR THE SEARCH BAR FUNCTIONALITY ON THE LEFT, WHAT I AM CURRENLTY THINKING IS THAT WE COULD JUST SHOW, INSTEAD OF THE MOST RECENT MESSAGE, THE MESSAGE THAT WE FOUND THAT PERTAINED TO THE SEARCH RESULT OF THE USER, AND THEN WHEN THEY CLICK TO THAT CHAT, THEY SHOULD BE TAKEN RIGHT TO THAT MESSAGE

FEATURES STILL TO ADD:
- REMOVING AND ADDING FRIENDS
- MESSAGE VIEW INFO BUTTON THAT SHOWS YOU THE USERS IN THE CHAT, ALLOWS YOU TO RENAME THE CHAT AND LEAVE THE GROUP, IT WILL ALSO SHOW YOU WHO IS IN THE CHAT, THE USERS IN THE CHAT, AND WHEN YOU CLICK ON THEM IT WILL SHOW YOU A POPUP OF THEIR INFORMATION; THIS COULD BE THE COMPONENT WHERE IT SHOWS THEIR FRIENDS AND YOU COULD CHECK OUT THEIR FRIENDS, REMOVE THEM AS A FRIEND, ETC.
- SIDEBAR SEARCH BAR
- ADDING MESSAGES TO THE CHAT AND SHOWING THEM IN THE CHAT VIEW; WORK ON THE CHAT VIEW MORE GENERALLY CERTAIN NEEDS TO BE DONE
- JUST FOR SOMETHING DIFFERENT AS WELL, ON THE CHAT INFO BUTTON MODAL, I WOULD LIKE THAT TO BE JUST THE IMAGE AND THEIR USERNAME UNDER IT, JUST FOR SOMETHING DIFFERENT STYLISTICALLY 
- MODALS THAT I NEED:
=> CHAT INFO MODAL
=> USERINFO MODAL WHEN YOU CLICK ON A USER FROM HERE

LOOK INTO THE DISPATCH EVENT AS WELL

IN THE FRIENDS COLUMN BEING ABLE TO SEE WHO IS ONLINE OR NOT IS ALSO A PRETTY COOL FEATURE

THE PROGRESS BAR IN GENERAL IS ALSO A PRETTY COOL FEATURE TO BE ABLE TO INCLUDE

THEN IN THE INFO MODAL THAT POPS UP WITHIN THE CHAT YOU WOULD WANT TO ACCESS THE CHAT PARTICIPANTS AND INCLUDE ONE ROW FOR EACH PARTICIPANT SO WHEN YOU CLICK THEN IT WOULD NEED TO GO TO THE USER INFO MODAL, COULD THEN ALSO INCLUDE A BACK BUTTON PERHAPS