1) First things first is to make that login page so that I can generate an ID for each user, store them in the DB in the users collection

- Include a sign in and sign up page very similar to the one that we used for the smart-brain app, this time using mongodb
-> Once this person signs in, we receive an id back from mongo that can be the identifier for that person
-> Can secure the password as well using bcrypt

- In the application itself, obviously need to make everything work so that the messages for each chat show up

DATA ORGANIZATION:
- I am thinking that each chat room will also have an identifier saved with it as well

DIFFERENT IDS THAT I NEED:
- USER ID
- CHAT ID, WHICH CONTAINS THE USER IDS

KEEP IN MIND THAT IN EACH FETCH THAT WE ARE GOING TO MAKE TO OUR BACKEND, THAT INSIDE THE FETCH WE CAN JUST ESSENTIALLY CONSTRUCT THESE ROUTES OURSELF AND WE NEED TO HAVE MATCHING ROUTES IN OUR BACKEND THAT CAN RESPOND WITH WHAT WE WANT THEM TO

IN MY AUTHENTICATION PROVIDER, I CAN ALSO GET AND ADD THE CURRENT USER, SO THAT IS PERFECT TO THEN BE ABLE TO SHARE THAT INFORMATION ACROSS THE REST OF THE APPLICATION

IN THE DROPDOWN THAT I AM GOING TO INCLUDE, MAYBE HAVE A LITTLE THING AS WELL WHERE IT CAN SHOW YOU WHERE ALL OF YOUR FRIEND REQUESTS ARE, WOULD ALSO BE COOL TO HAVE YOUR MESSAGES UPDATED AND YOU CAN SEE IF YOU HAVE READ IT OR NOT (NOT SURE IF WE ARE GOING TO IMPLEMENT THAT OR NOT BUT THAT WOULD BE PRETTY COOL)

ALSO WHETHER OR NOT SOMEONE IS ONLINE COULD BE A COOL FEATURE AS WELL

YOU WANT TO UPLOAD THE PICTURES THAT THE USERS UPLOAD TO THE CLOUD BECUASE HOW ELSE WILL YOU BE ABLE TO ACCESS THEM FROM INSIDE THE APPLICATION?

YOU GENERATE THESE TOKENS FOR PEOPLE THAT YOU DON'T ACTUALLY NEED TO STORE ANYWHERE, YOU JUST NEED TO CHECK IF THEY WERE VALIDLY GENERATED BY CKECING THE TOEKN THAT THEY RECEIVED AND THEN YOUR SECRET KEY AND THEN THEY WILL BE ABLE TO EXTRACT FORM THAT THE ID